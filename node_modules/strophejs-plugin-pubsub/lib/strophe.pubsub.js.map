{"version":3,"file":"strophe.pubsub.js","sources":["../src/strophe.pubsub.js"],"sourcesContent":["/** File: strophe.pubsub.js\n *  A Strophe plugin for XMPP Publish-Subscribe.\n *\n *  Provides Strophe.Connection.pubsub object,\n *  parially implementing XEP 0060.\n *\n *  Strophe.Builder.prototype methods should probably move to strophe.js\n */\nimport { $build, $iq, Strophe } from 'strophe.js';\n\n/** Function: Strophe.Builder.form\n *  Add an options form child element.\n *\n *  Does not change the current element.\n *\n *  Parameters:\n *    (String) ns - form namespace.\n *    (Object) options - form properties.\n *\n *  Returns:\n *    The Strophe.Builder object.\n */\nStrophe.Builder.prototype.form = function (ns, options)\n{\n    var aX = this.node.appendChild(Strophe.xmlElement('x', {\"xmlns\": \"jabber:x:data\", \"type\": \"submit\"}));\n    aX.appendChild(Strophe.xmlElement('field', {\"var\":\"FORM_TYPE\", \"type\": \"hidden\"}))\n      .appendChild(Strophe.xmlElement('value'))\n      .appendChild(Strophe.xmlTextNode(ns));\n\n    for (var i in options) {\n        aX.appendChild(Strophe.xmlElement('field', {\"var\": i}))\n        .appendChild(Strophe.xmlElement('value'))\n        .appendChild(Strophe.xmlTextNode(options[i]));\n    }\n    return this;\n};\n\n/** Function: Strophe.Builder.list\n *  Add many child elements.\n *\n *  Does not change the current element.\n *\n *  Parameters:\n *    (String) tag - tag name for children.\n *    (Array) array - list of objects with format:\n *          { attrs: { [string]:[string], ... }, // attributes of each tag element\n *             data: [string | XML_element] }    // contents of each tag element\n *\n *  Returns:\n *    The Strophe.Builder object.\n */\nStrophe.Builder.prototype.list = function (tag, array)\n{\n    for (var i=0; i < array.length; ++i) {\n        this.c(tag, array[i].attrs)\n        this.node.appendChild(array[i].data.cloneNode\n                            ? array[i].data.cloneNode(true)\n                            : Strophe.xmlTextNode(array[i].data));\n        this.up();\n    }\n    return this;\n};\n\nStrophe.Builder.prototype.children = function (object) {\n    var key, value;\n    for (key in object) {\n        if (!object.hasOwnProperty(key)) continue;\n        value = object[key];\n        if (Array.isArray(value)) {\n            this.list(key, value);\n        } else if (typeof value === 'string') {\n            this.c(key, {}, value);\n        } else if (typeof value === 'number') {\n            this.c(key, {}, \"\"+value);\n        } else if (typeof value === 'object') {\n            this.c(key).children(value).up();\n        } else {\n            this.c(key).up();\n        }\n    }\n    return this;\n};\n\n// TODO Ideas Adding possible conf values?\n/* Extend Strophe.Connection to have member 'pubsub'.\n */\nStrophe.addConnectionPlugin('pubsub', {\n/*\nExtend connection object to have plugin name 'pubsub'.\n*/\n    _connection: null,\n    _autoService: true,\n    service: null,\n    jid: null,\n    handler : {},\n\n    //The plugin must have the init function.\n    init: function(conn) {\n\n        this._connection = conn;\n\n        /*\n        Function used to setup plugin.\n        */\n\n        /* extend name space\n        *  NS.PUBSUB - XMPP Publish Subscribe namespace\n        *              from XEP 60.\n        *\n        *  NS.PUBSUB_SUBSCRIBE_OPTIONS - XMPP pubsub\n        *                                options namespace from XEP 60.\n        */\n        Strophe.addNamespace('PUBSUB',\"http://jabber.org/protocol/pubsub\");\n        Strophe.addNamespace('PUBSUB_SUBSCRIBE_OPTIONS',\n                             Strophe.NS.PUBSUB+\"#subscribe_options\");\n        Strophe.addNamespace('PUBSUB_ERRORS',Strophe.NS.PUBSUB+\"#errors\");\n        Strophe.addNamespace('PUBSUB_EVENT',Strophe.NS.PUBSUB+\"#event\");\n        Strophe.addNamespace('PUBSUB_OWNER',Strophe.NS.PUBSUB+\"#owner\");\n        Strophe.addNamespace('PUBSUB_AUTO_CREATE',\n                             Strophe.NS.PUBSUB+\"#auto-create\");\n        Strophe.addNamespace('PUBSUB_PUBLISH_OPTIONS',\n                             Strophe.NS.PUBSUB+\"#publish-options\");\n        Strophe.addNamespace('PUBSUB_NODE_CONFIG',\n                             Strophe.NS.PUBSUB+\"#node_config\");\n        Strophe.addNamespace('PUBSUB_CREATE_AND_CONFIGURE',\n                             Strophe.NS.PUBSUB+\"#create-and-configure\");\n        Strophe.addNamespace('PUBSUB_SUBSCRIBE_AUTHORIZATION',\n                             Strophe.NS.PUBSUB+\"#subscribe_authorization\");\n        Strophe.addNamespace('PUBSUB_GET_PENDING',\n                             Strophe.NS.PUBSUB+\"#get-pending\");\n        Strophe.addNamespace('PUBSUB_MANAGE_SUBSCRIPTIONS',\n                             Strophe.NS.PUBSUB+\"#manage-subscriptions\");\n        Strophe.addNamespace('PUBSUB_META_DATA',\n                             Strophe.NS.PUBSUB+\"#meta-data\");\n        Strophe.addNamespace('ATOM', \"http://www.w3.org/2005/Atom\");\n\n        if (conn.disco)\n            conn.disco.addFeature(Strophe.NS.PUBSUB);\n\n    },\n\n    // Called by Strophe on connection event\n    statusChanged: function (status, condition) {\n        var that = this._connection;\n        if (this._autoService && status === Strophe.Status.CONNECTED) {\n            this.service =  'pubsub.'+Strophe.getDomainFromJid(that.jid);\n            this.jid = that.jid;\n        }\n    },\n\n    /***Function\n\n    Parameters:\n    (String) jid - The node owner's jid.\n    (String) service - The name of the pubsub service.\n    */\n    connect: function (jid, service) {\n        var that = this._connection;\n        if (service === undefined) {\n            service = jid;\n            jid = undefined;\n        }\n        this.jid = jid || that.jid;\n        this.service = service || null;\n        this._autoService = false;\n    },\n\n    /***Function\n\n     Parameters:\n     (String) node - The name of node\n     (String) handler - reference to registered strophe handler\n     */\n    storeHandler: function(node, handler) {\n        if (!this.handler[node]) {\n            this.handler[node] = [];\n        }\n        this.handler[node].push(handler);\n    },\n\n    /***Function\n\n     Parameters:\n     (String) node - The name of node\n     */\n    removeHandler : function (node) {\n\n        var toberemoved = this.handler[node];\n        this.handler[node] = [];\n\n        // remove handler\n        if (toberemoved && toberemoved.length > 0) {\n            for (var i = 0, l = toberemoved.length; i < l; i++) {\n                this._connection.deleteHandler(toberemoved[i])\n            }\n        }\n    },\n\n    /***Function\n\n    Create a pubsub node on the given service with the given node\n    name.\n\n    Parameters:\n    (String) node -  The name of the pubsub node.\n    (Dictionary) options -  The configuration options for the  node.\n    (Function) call_back - Used to determine if node\n    creation was sucessful.\n\n    Returns:\n    Iq id used to send subscription.\n    */\n    createNode: function(node,options, call_back) {\n        var that = this._connection;\n\n        var iqid = that.getUniqueId(\"pubsubcreatenode\");\n\n        var iq = $iq({from:this.jid, to:this.service, type:'set', id:iqid})\n          .c('pubsub', {xmlns:Strophe.NS.PUBSUB})\n          .c('create',{node:node});\n        if(options) {\n            iq.up().c('configure').form(Strophe.NS.PUBSUB_NODE_CONFIG, options);\n        }\n\n        that.addHandler(call_back, null, 'iq', null, iqid, null);\n        that.send(iq.tree());\n        return iqid;\n    },\n\n    /** Function: deleteNode\n     *  Delete a pubsub node.\n     *\n     *  Parameters:\n     *    (String) node -  The name of the pubsub node.\n     *    (Function) call_back - Called on server response.\n     *\n     *  Returns:\n     *    Iq id\n     */\n    deleteNode: function(node, call_back) {\n        var that = this._connection;\n        var iqid = that.getUniqueId(\"pubsubdeletenode\");\n\n        var iq = $iq({from:this.jid, to:this.service, type:'set', id:iqid})\n          .c('pubsub', {xmlns:Strophe.NS.PUBSUB_OWNER})\n          .c('delete', {node:node});\n\n        that.addHandler(call_back, null, 'iq', null, iqid, null);\n        that.send(iq.tree());\n\n        return iqid;\n    },\n\n    /** Function\n     *\n     * Get all nodes that currently exist.\n     *\n     * Parameters:\n     *   (Function) success - Used to determine if node creation was sucessful.\n     *   (Function) error - Used to determine if node\n     * creation had errors.\n     */\n    discoverNodes: function(success, error, timeout) {\n\n        //ask for all nodes\n        var iq = $iq({from:this.jid, to:this.service, type:'get'})\n          .c('query', { xmlns:Strophe.NS.DISCO_ITEMS });\n\n        return this._connection.sendIQ(iq.tree(),success, error, timeout);\n    },\n\n    /** Function: getConfig\n     *  Get node configuration form.\n     *\n     *  Parameters:\n     *    (String) node -  The name of the pubsub node.\n     *    (Function) call_back - Receives config form.\n     *\n     *  Returns:\n     *    Iq id\n     */\n    getConfig: function (node, call_back) {\n        var that = this._connection;\n        var iqid = that.getUniqueId(\"pubsubconfigurenode\");\n\n        var iq = $iq({from:this.jid, to:this.service, type:'get', id:iqid})\n          .c('pubsub', {xmlns:Strophe.NS.PUBSUB_OWNER})\n          .c('configure', {node:node});\n\n        that.addHandler(call_back, null, 'iq', null, iqid, null);\n        that.send(iq.tree());\n\n        return iqid;\n    },\n\n    /**\n     *  Parameters:\n     *    (Function) call_back - Receives subscriptions.\n     *\n     *  http://xmpp.org/extensions/tmp/xep-0060-1.13.html\n     *  8.3 Request Default Node Configuration Options\n     *\n     *  Returns:\n     *    Iq id\n     */\n    getDefaultNodeConfig: function(call_back) {\n        var that = this._connection;\n        var iqid = that.getUniqueId(\"pubsubdefaultnodeconfig\");\n\n        var iq = $iq({from:this.jid, to:this.service, type:'get', id:iqid})\n          .c('pubsub', {'xmlns':Strophe.NS.PUBSUB_OWNER})\n          .c('default');\n\n        that.addHandler(call_back, null, 'iq', null, iqid, null);\n        that.send(iq.tree());\n\n        return iqid;\n    },\n\n    /***Function\n        Subscribe to a node in order to receive event items.\n\n        Parameters:\n        (String) node         - The name of the pubsub node.\n        (Array) options       - The configuration options for the  node.\n        (Function) event_cb   - Used to recieve subscription events.\n        (Function) success    - callback function for successful node creation.\n        (Function) error      - error callback function.\n        (Boolean) barejid     - use barejid creation was sucessful.\n\n        Returns:\n        Iq id used to send subscription.\n    */\n    subscribe: function(node, options, event_cb, success, error, barejid) {\n        var that = this._connection;\n        var iqid = that.getUniqueId(\"subscribenode\");\n\n        var jid = this.jid;\n        if(barejid)\n            jid = Strophe.getBareJidFromJid(jid);\n\n        var iq = $iq({from:this.jid, to:this.service, type:'set', id:iqid})\n          .c('pubsub', { xmlns:Strophe.NS.PUBSUB })\n          .c('subscribe', {'node':node, 'jid':jid});\n        if(options) {\n            iq.up().c('options').form(Strophe.NS.PUBSUB_SUBSCRIBE_OPTIONS, options);\n        }\n\n        //add the event handler to receive items\n        var hand = that.addHandler(event_cb, null, 'message', null, null, null);\n        this.storeHandler(node, hand);\n        that.sendIQ(iq.tree(), success, error);\n        return iqid;\n    },\n\n    /***Function\n        Unsubscribe from a node.\n\n        Parameters:\n        (String) node       - The name of the pubsub node.\n        (Function) success  - callback function for successful node creation.\n        (Function) error    - error callback function.\n\n    */\n    unsubscribe: function(node, jid, subid, success, error) {\n        var that = this._connection;\n        var iqid = that.getUniqueId(\"pubsubunsubscribenode\");\n\n        var iq = $iq({from:this.jid, to:this.service, type:'set', id:iqid})\n          .c('pubsub', { xmlns:Strophe.NS.PUBSUB })\n          .c('unsubscribe', {'node':node, 'jid':jid});\n        if (subid) iq.attrs({subid:subid});\n\n        that.sendIQ(iq.tree(), success, error);\n        this.removeHandler(node);\n        return iqid;\n    },\n\n    /***Function\n\n    Publish and item to the given pubsub node.\n\n    Parameters:\n    (String) node -  The name of the pubsub node.\n    (Array) items -  The list of items to be published.\n    (Function) call_back - Used to determine if node\n    creation was sucessful.\n    */\n    publish: function(node, items, call_back) {\n        var that = this._connection;\n        var iqid = that.getUniqueId(\"pubsubpublishnode\");\n\n        var iq = $iq({from:this.jid, to:this.service, type:'set', id:iqid})\n          .c('pubsub', { xmlns:Strophe.NS.PUBSUB })\n          .c('publish', { node:node, jid:this.jid })\n          .list('item', items);\n\n        that.addHandler(call_back, null, 'iq', null, iqid, null);\n        that.send(iq.tree());\n\n        return iqid;\n    },\n\n    /*Function: items\n    Used to retrieve the persistent items from the pubsub node.\n\n    */\n    items: function(node, success, error, timeout) {\n        //ask for all items\n        var iq = $iq({from:this.jid, to:this.service, type:'get'})\n          .c('pubsub', { xmlns:Strophe.NS.PUBSUB })\n          .c('items', {node:node});\n\n        return this._connection.sendIQ(iq.tree(), success, error, timeout);\n    },\n\n    /** Function: getSubscriptions\n     *  Get subscriptions of a JID.\n     *\n     *  Parameters:\n     *    (Function) call_back - Receives subscriptions.\n     *\n     *  http://xmpp.org/extensions/tmp/xep-0060-1.13.html\n     *  5.6 Retrieve Subscriptions\n     *\n     *  Returns:\n     *    Iq id\n     */\n    getSubscriptions: function(call_back, timeout) {\n        var that = this._connection;\n        var iqid = that.getUniqueId(\"pubsubsubscriptions\");\n\n        var iq = $iq({from:this.jid, to:this.service, type:'get', id:iqid})\n          .c('pubsub', {'xmlns':Strophe.NS.PUBSUB})\n          .c('subscriptions');\n\n        that.addHandler(call_back, null, 'iq', null, iqid, null);\n        that.send(iq.tree());\n\n        return iqid;\n    },\n\n    /** Function: getNodeSubscriptions\n     *  Get node subscriptions of a JID.\n     *\n     *  Parameters:\n     *    (Function) call_back - Receives subscriptions.\n     *\n     *  http://xmpp.org/extensions/tmp/xep-0060-1.13.html\n     *  5.6 Retrieve Subscriptions\n     *\n     *  Returns:\n     *    Iq id\n     */\n    getNodeSubscriptions: function(node, call_back) {\n        var that = this._connection;\n       var iqid = that.getUniqueId(\"pubsubsubscriptions\");\n\n       var iq = $iq({from:this.jid, to:this.service, type:'get', id:iqid})\n         .c('pubsub', {'xmlns':Strophe.NS.PUBSUB_OWNER})\n         .c('subscriptions', {'node':node});\n\n       that.addHandler(call_back, null, 'iq', null, iqid, null);\n       that.send(iq.tree());\n\n       return iqid;\n    },\n\n    /** Function: getSubOptions\n     *  Get subscription options form.\n     *\n     *  Parameters:\n     *    (String) node -  The name of the pubsub node.\n     *    (String) subid - The subscription id (optional).\n     *    (Function) call_back - Receives options form.\n     *\n     *  Returns:\n     *    Iq id\n     */\n    getSubOptions: function(node, subid, call_back) {\n        var that = this._connection;\n        var iqid = that.getUniqueId(\"pubsubsuboptions\");\n\n        var iq = $iq({from:this.jid, to:this.service, type:'get', id:iqid})\n          .c('pubsub', {xmlns:Strophe.NS.PUBSUB})\n          .c('options', {node:node, jid:this.jid});\n        if (subid) iq.attrs({subid:subid});\n\n        that.addHandler(call_back, null, 'iq', null, iqid, null);\n        that.send(iq.tree());\n\n        return iqid;\n    },\n\n    /**\n     *  Parameters:\n     *    (String) node -  The name of the pubsub node.\n     *    (Function) call_back - Receives subscriptions.\n     *\n     *  http://xmpp.org/extensions/tmp/xep-0060-1.13.html\n     *  8.9 Manage Affiliations - 8.9.1.1 Request\n     *\n     *  Returns:\n     *    Iq id\n     */\n    getAffiliations: function(node, call_back) {\n        var that = this._connection;\n        var iqid = that.getUniqueId(\"pubsubaffiliations\");\n\n        if (typeof node === 'function') {\n            call_back = node;\n            node = undefined;\n        }\n\n        var attrs = {}, xmlns = {'xmlns':Strophe.NS.PUBSUB};\n        if (node) {\n            attrs.node = node;\n            xmlns = {'xmlns':Strophe.NS.PUBSUB_OWNER};\n        }\n\n        var iq = $iq({from:this.jid, to:this.service, type:'get', id:iqid})\n          .c('pubsub', xmlns).c('affiliations', attrs);\n\n        that.addHandler(call_back, null, 'iq', null, iqid, null);\n        that.send(iq.tree());\n\n        return iqid;\n    },\n\n    /**\n     *  Parameters:\n     *    (String) node -  The name of the pubsub node.\n     *    (Function) call_back - Receives subscriptions.\n     *\n     *  http://xmpp.org/extensions/tmp/xep-0060-1.13.html\n     *  8.9.2 Modify Affiliation - 8.9.2.1 Request\n     *\n     *  Returns:\n     *    Iq id\n     */\n    setAffiliation: function(node, jid, affiliation, call_back) {\n        var that = this._connection;\n        var iqid = that.getUniqueId(\"pubsubaffiliations\");\n\n        var iq = $iq({from:this.jid, to:this.service, type:'set', id:iqid})\n          .c('pubsub', {'xmlns':Strophe.NS.PUBSUB_OWNER})\n          .c('affiliations', {'node':node})\n          .c('affiliation', {'jid':jid, 'affiliation':affiliation});\n\n        that.addHandler(call_back, null, 'iq', null, iqid, null);\n        that.send(iq.tree());\n\n        return iqid;\n    },\n\n    /** Function: publishAtom\n     */\n    publishAtom: function(node, atoms, call_back) {\n        if (!Array.isArray(atoms))\n            atoms = [atoms];\n\n        var i, atom, entries = [];\n        for (i = 0; i < atoms.length; i++) {\n            atom = atoms[i];\n\n            atom.updated = atom.updated || (new Date()).toISOString();\n            if (atom.published && atom.published.toISOString)\n                atom.published = atom.published.toISOString();\n\n            entries.push({\n                data: $build(\"entry\", { xmlns:Strophe.NS.ATOM })\n                        .children(atom).tree(),\n                attrs:(atom.id ? { id:atom.id } : {}),\n            });\n        }\n        return this.publish(node, entries, call_back);\n    },\n\n});\n"],"names":["Strophe","$iq","$build"],"mappings":"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"}