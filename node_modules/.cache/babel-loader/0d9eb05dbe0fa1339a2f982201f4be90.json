{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst CallLogs = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const convertTimeStampToTime = timestamp => {\n    console.log('timestamp', timestamp); // let time = moment(timestamp, 'YYYY-M-D HH:mm:ss');\n\n    let convdataTime = moment(timestamp).format(); // return convdataTime;\n  };\n\n  const checkTodayCallLog = timestamp => {\n    let today = new Date();\n\n    let myDate = orgMoment(timestamp)._d;\n\n    console.log(today);\n    console.log(\"myDate\", myDate); // if(timestamp === today){\n    //     console.log()\n    // }\n\n    isToday(orgMoment(timestamp)._d);\n\n    if (isToday(orgMoment(timestamp)._d)) {\n      console.log(\"correct\");\n    }\n  };\n\n  const isToday = someDate => {\n    const today = new Date();\n    return someDate.getDate() == today.getDate() && someDate.getMonth() == today.getMonth() && someDate.getFullYear() == today.getFullYear();\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-sm badge-light \",\n    onClick: checkTodayCallLog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Today\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"This Week\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"This Month\"), React.createElement(\"table\", {\n    className: \"table table-sm table-striped table-bordered table-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Date/Time\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"From\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"To\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Duration\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, cdrsData === undefined ? null : cdrsData.map((item, i) => {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, convertTimeStampToTime(item.unix_timestamp)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, item.from), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, item.to), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, item.duration_seconds));\n  }))));\n};\n\nexport default CallLogs;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js"],"names":["React","useSelector","CallLogs","cdrsData","state","moment","require","orgMoment","convertTimeStampToTime","timestamp","console","log","convdataTime","format","checkTodayCallLog","today","Date","myDate","_d","isToday","someDate","getDate","getMonth","getFullYear","undefined","map","item","i","unix_timestamp","from","to","duration_seconds"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst CallLogs = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const moment = require('persian-date');\n    const orgMoment = require('moment');\n\n    const convertTimeStampToTime = (timestamp) => {\n        console.log('timestamp', timestamp);\n        // let time = moment(timestamp, 'YYYY-M-D HH:mm:ss');\n        let convdataTime = moment(timestamp).format();\n        // return convdataTime;\n    };\n    const checkTodayCallLog = (timestamp) => {\n        let today = new Date();\n        let myDate = orgMoment(timestamp)._d;\n        console.log(today);\n        console.log(\"myDate\", myDate)\n        // if(timestamp === today){\n        //     console.log()\n        // }\n        isToday(orgMoment(timestamp)._d);\n        if(isToday(orgMoment(timestamp)._d)) {\n            console.log(\"correct\");\n        }\n    };\n    const isToday = (someDate) => {\n        const today = new Date()\n        return someDate.getDate() == today.getDate() &&\n            someDate.getMonth() == today.getMonth() &&\n            someDate.getFullYear() == today.getFullYear()\n    }\n\n    return (\n        <React.Fragment>\n            <button className=\"btn-sm badge-light \" onClick={checkTodayCallLog}>Today</button>\n            <button className=\"btn-sm badge-light\">This Week</button>\n            <button className=\"btn-sm badge-light\">This Month</button>\n            <table className=\"table table-sm table-striped table-bordered table-hover\">\n                <thead>\n                <tr>\n                    <th>Date/Time</th>\n                    <th>From</th>\n                    <th>To</th>\n                    <th>Duration</th>\n                </tr>\n                </thead>\n                <tbody>{\n\n                        cdrsData === undefined ? null : cdrsData.map((item, i) => {\n\n                            return (\n                                <tr key={i}>\n\n                                    <td>\n\n                                        {\n                                            convertTimeStampToTime(item.unix_timestamp)\n                                        }\n\n                                    </td>\n                                    <td>\n                                        {item.from}\n                                    </td>\n                                    <td>\n                                        {item.to}\n                                    </td>\n                                    <td>\n                                        {item.duration_seconds}\n                                    </td>\n                                </tr>\n                            )\n\n                        })\n                }\n                </tbody>\n            </table>\n        </React.Fragment>\n    )\n\n};\n\n\nexport default CallLogs;\n"]},"metadata":{},"sourceType":"module"}