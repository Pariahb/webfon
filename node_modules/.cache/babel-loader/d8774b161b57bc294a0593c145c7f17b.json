{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { myTime } from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const jalali = require('moment-jalaali');\n\n  const _useState = useState(() => ''),\n        _useState2 = _slicedToArray(_useState, 2),\n        allDates = _useState2[0],\n        getAllDates = _useState2[1];\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const checkSameDayObjects = () => {};\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, cdrsData.map((item, i) => {\n    console.log(\"iiii\", moment.unix(item.unix_timestamp).utc().format('YYYY/M/D'));\n    return React.createElement(\"div\", {\n      className: \"call-info\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left-side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      className: \"direction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? React.createElement(FontAwesomeIcon, {\n      color: \"green\",\n      icon: faArrowLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }) : item.direction === \"outbound\" ? React.createElement(FontAwesomeIcon, {\n      color: \"orange\",\n      icon: faArrowRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }) : item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ? React.createElement(FontAwesomeIcon, {\n      color: \"red\",\n      icon: faBan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }) : null), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? item.callee_id_name + \"(\" + item.callee_id_number + \")\" : item.direction === \"outbound\" ? item.caller_id_name + \"(\" + item.caller_id_number + \")\" : item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ? item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null, React.createElement(\"div\", {\n      className: \"duration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Incoming call, \"), myTime(item.duration_seconds)))), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')));\n  }));\n};\n\nexport default GroupedLog;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js"],"names":["React","useState","useSelector","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","myTime","GroupedLog","cdrsData","state","jalali","require","allDates","getAllDates","moment","orgMoment","checkSameDayObjects","map","item","i","console","log","unix","unix_timestamp","utc","format","direction","hangup_cause","callee_id_name","callee_id_number","caller_id_name","caller_id_number","duration_seconds"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\nimport {myTime} from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const jalali = require('moment-jalaali');\n    const [allDates, getAllDates] = useState(() => '');\n    const moment = require('persian-date');\n    const orgMoment = require('moment');\n\n    const checkSameDayObjects = () => {\n\n    };\n    return (\n        <React.Fragment>\n            {\n                cdrsData.map((item, i) => {\n                    console.log(\"iiii\", moment.unix(item.unix_timestamp).utc().format('YYYY/M/D'))\n\n                    return (\n                        <div className=\"call-info\" key={i}>\n                            <div className=\"left-side\"> <span className=\"direction\">\n                                {\n                                    item.direction === \"inbound\" ?\n                                        <FontAwesomeIcon color=\"green\"\n                                                         icon={faArrowLeft}/> : item.direction === \"outbound\" ?\n                                        <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n                                        item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n                                            <FontAwesomeIcon color=\"red\" icon={faBan}/> : null\n                                }\n                            </span>\n                                <div className=\"name\">\n                                    {\n                                        item.direction === \"inbound\" ?\n                                            item.callee_id_name + \"(\" + item.callee_id_number + \")\" :\n                                            item.direction === \"outbound\" ?\n                                                item.caller_id_name + \"(\" + item.caller_id_number + \")\" :\n                                                item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n                                                    item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null\n                                    }\n\n                                    <div className=\"duration\">\n                                        <span>Incoming call, </span>\n                                        {\n                                            myTime(item.duration_seconds)\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"date\">\n\n                                {\n                                    jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n                                }\n\n                            </div>\n\n\n                        </div>\n                    )\n\n                })\n            }\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default GroupedLog;\n"]},"metadata":{},"sourceType":"module"}