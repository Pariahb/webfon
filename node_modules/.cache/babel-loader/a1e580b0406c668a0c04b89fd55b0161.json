{"ast":null,"code":"import _defineProperty from\"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import axios from\"axios\";import{getCookie}from\"../../helper/functions\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faArrowLeft,faArrowRight,faBan}from\"@fortawesome/free-solid-svg-icons\";import IncomingCall from\"../inconming-call\";import DialledCalls from\"../dialed-call\";import MissedCall from\"../missed-calls\";var CallLogs=function CallLogs(){var cdrsData=useSelector(function(state){return state.cdrsData;});var callType=useSelector(function(state){return state.callType;});var moment=require('persian-date');var orgMoment=require('moment');var jalali=require('moment-jalaali');var _useState=useState({item:[]}),_useState2=_slicedToArray(_useState,2),cdrData=_useState2[0],getCdrData=_useState2[1];var _useState3=useState({item:[]}),_useState4=_slicedToArray(_useState3,2),inbounds=_useState4[0],filterInbounds=_useState4[1];// const [callType, setCallType] = useState('');\nvar dispatch=useDispatch();var today=orgMoment();console.log('today',today.startOf('day').unix());var todayCalls=function todayCalls(){axios.get(\"http://77.104.116.187:8000/v2/accounts/\"+getCookie(\"accID\")+\"/users/\"+getCookie(\"owID\")+\"/cdrs/interaction?created_from=\"+today.startOf('day').unix()+ +\"&created_to=\"+today.endOf('day').unix()+ +\"&page_size=10&_=\"+new Date().setUTCSeconds(0),{headers:{\"X-Auth-Token\":getCookie(\"monster_token\")}}).then(function(response){var cdrs=cdrData.item;cdrs.push(response.data);getCdrData(_objectSpread({},cdrData,{item:cdrs}));setCdrsDataToReducer(cdrData.item[0].data);console.log(\"response.cdrs\",cdrData.item[0].data);}).catch(function(error){});};// daily api query\nvar setCallType=function setCallType(callType){dispatch({callType:callType,type:\"SET_CALL_TYPE\"});console.log(\"type\",callType);};var inboundCalls=function inboundCalls(){setCallType(\"inbound\");};var outboundCalls=function outboundCalls(){setCallType(\"outbound\");};var missedCallsCalls=function missedCallsCalls(){setCallType(\"missed\");};/*------set CDRs per user data to reducer-----------------*/var setCdrsDataToReducer=function setCdrsDataToReducer(cdrsData){dispatch({cdrsData:cdrsData,type:'GET_CDRS_DATA'});};/*------set CDRs per user data to reducer-----------------*/return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"filter-by-time\"},React.createElement(\"button\",{className:\"btn-sm badge-light \"},\"Today\"),React.createElement(\"button\",{className:\"btn-sm badge-light\"},\"This Week\"),React.createElement(\"button\",{className:\"btn-sm badge-light\"},\"This Month\")),React.createElement(\"div\",{className:\"filter-by-type\"},React.createElement(\"button\",{className:\"btn-sm badge-light\",onClick:inboundCalls},\"Incoming Calls\"),React.createElement(\"button\",{className:\"btn-sm badge-light\",onClick:missedCallsCalls},\"Missed Calls\"),React.createElement(\"button\",{className:\"btn-sm badge-light\",onClick:outboundCalls},\"Dialed Calls\")),React.createElement(\"table\",{className:\"table table-sm table-striped table-bordered table-hover\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,React.createElement(FontAwesomeIcon,{color:\"green\",icon:faArrowLeft}),React.createElement(\"br\",null),React.createElement(FontAwesomeIcon,{color:\"orange\",icon:faArrowRight})),React.createElement(\"th\",null,\"Date/Time\"),React.createElement(\"th\",null,\"From\"),React.createElement(\"th\",null,\"To\"),React.createElement(\"th\",null,\"Duration\"))),React.createElement(\"tbody\",null,callType===\"inbound\"?React.createElement(IncomingCall,null):callType===\"outbound\"?React.createElement(DialledCalls,null):callType===\"missed\"?React.createElement(MissedCall,null):cdrsData===undefined?null:cdrsData.map(function(item,i){return React.createElement(\"tr\",{key:i},React.createElement(\"td\",null,item.direction===\"inbound\"?React.createElement(FontAwesomeIcon,{color:\"green\",icon:faArrowLeft}):item.direction===\"outbound\"?React.createElement(FontAwesomeIcon,{color:\"orange\",icon:faArrowRight}):React.createElement(FontAwesomeIcon,{color:\"red\",icon:faArrowRight})),React.createElement(\"td\",null,jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')),React.createElement(\"td\",null,item.from),React.createElement(\"td\",null,item.to),React.createElement(\"td\",null,item.duration_seconds));}))));};export default CallLogs;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","axios","getCookie","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","IncomingCall","DialledCalls","MissedCall","CallLogs","cdrsData","state","callType","moment","require","orgMoment","jalali","item","cdrData","getCdrData","inbounds","filterInbounds","dispatch","today","console","log","startOf","unix","todayCalls","get","endOf","Date","setUTCSeconds","headers","then","response","cdrs","push","data","setCdrsDataToReducer","catch","error","setCallType","type","inboundCalls","outboundCalls","missedCallsCalls","undefined","map","i","direction","unix_timestamp","format","from","to","duration_seconds"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport axios from \"axios\";\nimport {getCookie} from \"../../helper/functions\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\nimport IncomingCall from \"../inconming-call\";\nimport DialledCalls from \"../dialed-call\";\nimport MissedCall from \"../missed-calls\";\n\n\nconst CallLogs = () => {\n        const cdrsData = useSelector(state => state.cdrsData);\n        const callType = useSelector(state => state.callType);\n        const moment = require('persian-date');\n        const orgMoment = require('moment');\n        const jalali = require('moment-jalaali');\n        const [cdrData, getCdrData] = useState({item: []});\n        const [inbounds, filterInbounds] = useState({item: []});\n        // const [callType, setCallType] = useState('');\n        const dispatch = useDispatch();\n        let today = orgMoment();\n        console.log('today', today.startOf('day').unix());\n        const todayCalls = () => {\n            axios.get(\"http://77.104.116.187:8000/v2/accounts/\" + getCookie(\"accID\") + \"/users/\" + getCookie(\"owID\") + \"/cdrs/interaction?created_from=\" + today.startOf('day').unix() +\n                +\"&created_to=\" + today.endOf('day').unix() +\n                +\"&page_size=10&_=\" + new Date().setUTCSeconds(0), {\n                headers: {\n                    \"X-Auth-Token\": getCookie(\"monster_token\")\n                }\n            })\n                .then(response => {\n                    let cdrs = cdrData.item;\n                    cdrs.push(response.data)\n                    getCdrData({...cdrData, item: cdrs});\n                    setCdrsDataToReducer(cdrData.item[0].data);\n                    console.log(\"response.cdrs\", cdrData.item[0].data);\n                })\n                .catch(error => {\n\n                });\n        };\n\n        // daily api query\n\n        const setCallType = (callType) => {\n            dispatch({callType, type: \"SET_CALL_TYPE\"});\n            console.log(\"type\", callType)\n\n        }\n        const inboundCalls = () => {\n            setCallType(\"inbound\");\n        };\n\n        const outboundCalls = () => {\n            setCallType(\"outbound\");\n        };\n        const missedCallsCalls = () => {\n            setCallType(\"missed\");\n        };\n\n        /*------set CDRs per user data to reducer-----------------*/\n        const setCdrsDataToReducer = (cdrsData) => {\n            dispatch({cdrsData, type: 'GET_CDRS_DATA'})\n        };\n        /*------set CDRs per user data to reducer-----------------*/\n        return (\n            <React.Fragment>\n                <div className=\"filter-by-time\">\n                    <button className=\"btn-sm badge-light \">Today</button>\n                    <button className=\"btn-sm badge-light\">This Week</button>\n                    <button className=\"btn-sm badge-light\">This Month</button>\n                </div>\n                <div className=\"filter-by-type\">\n                    <button className=\"btn-sm badge-light\" onClick={inboundCalls}>Incoming Calls</button>\n                    <button className=\"btn-sm badge-light\" onClick={missedCallsCalls}>Missed Calls</button>\n                    <button className=\"btn-sm badge-light\" onClick={outboundCalls}>Dialed Calls</button>\n                </div>\n                <table className=\"table table-sm table-striped table-bordered table-hover\">\n                    <thead>\n                    <tr>\n                        <th>\n                            <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/><br/>\n                            <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/>\n                        </th>\n                        <th>Date/Time</th>\n                        <th>From</th>\n                        <th>To</th>\n                        <th>Duration</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        callType === \"inbound\" ? <IncomingCall/> : callType === \"outbound\" ?\n                            <DialledCalls/> : callType === \"missed\" ?\n                                <MissedCall/> : cdrsData === undefined ? null : cdrsData.map((item, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <td>\n                                                {\n                                                    item.direction === \"inbound\" ?\n                                                        <FontAwesomeIcon color=\"green\"\n                                                                         icon={faArrowLeft}/> : item.direction === \"outbound\" ?\n                                                        <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n                                                        <FontAwesomeIcon color=\"red\" icon={faArrowRight}/>\n\n                                                }\n                                            </td>\n                                            <td>\n\n                                                {\n                                                    jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n                                                }\n\n                                            </td>\n                                            <td>\n                                                {item.from}\n                                            </td>\n                                            <td>\n                                                {item.to}\n                                            </td>\n                                            <td>\n                                                {item.duration_seconds}\n                                            </td>\n                                        </tr>\n                                    )\n\n                                })\n                    }\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n\n    }\n;\n\n\nexport default CallLogs;\n"]},"metadata":{},"sourceType":"module"}