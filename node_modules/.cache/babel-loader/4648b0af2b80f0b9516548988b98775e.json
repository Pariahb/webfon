{"ast":null,"code":"import { $build, Strophe } from 'strophe.js';\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\n\nStrophe.RSM = function (options) {\n  this.attribs = ['max', 'first', 'last', 'after', 'before', 'index', 'count'];\n\n  if (typeof options.xml != 'undefined') {\n    this.fromXMLElement(options.xml);\n  } else {\n    for (var ii = 0; ii < this.attribs.length; ii++) {\n      var attrib = this.attribs[ii];\n      this[attrib] = options[attrib];\n    }\n  }\n};\n\nStrophe.RSM.prototype = {\n  toXML: function () {\n    var xml = $build('set', {\n      xmlns: Strophe.NS.RSM\n    });\n\n    for (var ii = 0; ii < this.attribs.length; ii++) {\n      var attrib = this.attribs[ii];\n\n      if (typeof this[attrib] != 'undefined') {\n        xml = xml.c(attrib).t(this[attrib].toString()).up();\n      }\n    }\n\n    return xml.tree();\n  },\n  next: function (max) {\n    var newSet = new Strophe.RSM({\n      max: max,\n      after: this.last\n    });\n    return newSet;\n  },\n  previous: function (max) {\n    var newSet = new Strophe.RSM({\n      max: max,\n      before: this.first\n    });\n    return newSet;\n  },\n  fromXMLElement: function (xmlElement) {\n    for (var ii = 0; ii < this.attribs.length; ii++) {\n      var attrib = this.attribs[ii];\n      var elem = xmlElement.getElementsByTagName(attrib)[0];\n\n      if (typeof elem != 'undefined' && elem !== null) {\n        this[attrib] = Strophe.getText(elem);\n\n        if (attrib == 'first') {\n          this.index = elem.getAttribute('index');\n        }\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}