{"ast":null,"code":"import _toConsumableArray from\"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var initialState={status:\"chat\",connection:new window.Strophe.Connection(\"http://77.104.116.225:5280/http-bind\"),$pres:window.$pres,$iq:window.$iq,$msg:window.$msg,strophe:window.Strophe,showMainPage:false,showCallPage:false,contacts:[],rosterStatus:[],selectedContact:'',rosterClicked:false,sendLastActivity:false,devicesData:[],loginData:[],callFlowsData:[],cdrsData:[],loadingStatus:true,newMessage:'',chatLog:[],callType:\"\"};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'MY_STATUS':{return _objectSpread({},state,{status:action.s});}case'SHOW_MAIN_PAGE':{return _objectSpread({},state,{showMainPage:action.showMainPage});}case'SHOW_CALL_PAGE':{return _objectSpread({},state,{showCallPage:action.showPage});}case'GET_CONTACTS':{return _objectSpread({},state,{contacts:action.contacts});}case'CHANGE_EACH_ROSTER_STATUS':{return _objectSpread({},state,{rosterStatus:state.rosterStatus.map(function(content,i){return content.id===action.rosterStatusItem.id?_objectSpread({},content,{status:action.rosterStatusItem.status}):content;})});}case'PUSH_ROSTER_STATUS_ITEM':{var rostersArray=state.rosterStatus;rostersArray.push(action.rosterStatusItem);return _objectSpread({},state,{rosterStatus:rostersArray});}case'SET_SELECTED_ROSTER':{return _objectSpread({},state,{selectedContact:action.contact});}case'CHECK_ROSTER_CLICK':{return _objectSpread({},state,{rosterClicked:action.rosterClicked});}case'GET_DEVICES_DATA':{return _objectSpread({},state,{devicesData:action.devicesData});}case'GET_LOGIN_DATA':{return _objectSpread({},state,{loginData:action.loginData});}case'GET_USER_CALLFLOWS_DATA':{return _objectSpread({},state,{callFlowsData:action.callFlowsData});}case'GET_CDRS_DATA':{return _objectSpread({},state,{cdrsData:action.cdrsData});}case'SET_CALL_TYPE':{return _objectSpread({},state,{callType:action.callType});}case'SET_LOADING_STATUS':{return _objectSpread({},state,{loadingStatus:action.loadingStatus});}case'GET_NEW_MESSAGE':{return _objectSpread({},state,{newMessage:action.newMessage});}case'FETCH_HISTORY_MESSAGES':{return _objectSpread({},state,{chatLog:action.historyMessages});}case'PUSH_HISTORY_MESSAGES':{var historyArray=state.chatLog;state.chatLog.push(action.newMessages);console.log(\"historyArray\");var test={text:\"test2\",stamp:'2019-11-10T13:05:04.053904Z',type:\"rec\"};return _objectSpread({},state,{chatLog:[].concat(_toConsumableArray(state.chatLog),[state.chatLog])});}default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/redux/reducer.js"],"names":["initialState","status","connection","window","Strophe","Connection","$pres","$iq","$msg","strophe","showMainPage","showCallPage","contacts","rosterStatus","selectedContact","rosterClicked","sendLastActivity","devicesData","loginData","callFlowsData","cdrsData","loadingStatus","newMessage","chatLog","callType","reducer","state","action","type","s","showPage","map","content","i","id","rosterStatusItem","rostersArray","push","contact","historyMessages","historyArray","newMessages","console","log","test","text","stamp"],"mappings":"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","sourcesContent":["const initialState = {\n    status: \"chat\",\n    connection: new window.Strophe.Connection(\n        \"http://77.104.116.225:5280/http-bind\"\n    ),\n    $pres: window.$pres,\n    $iq: window.$iq,\n    $msg: window.$msg,\n    strophe: window.Strophe,\n    showMainPage: false,\n    showCallPage: false,\n    contacts: [],\n    rosterStatus: [],\n    selectedContact: '',\n    rosterClicked: false,\n    sendLastActivity: false,\n    devicesData: [],\n    loginData: [],\n    callFlowsData: [],\n    cdrsData: [],\n    loadingStatus: true,\n    newMessage: '',\n    chatLog: [],\n    callType : \"\"\n};\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'MY_STATUS': {\n            return {\n                ...state,\n                status: action.s\n            };\n        }\n        case 'SHOW_MAIN_PAGE': {\n            return {\n                ...state,\n                showMainPage: action.showMainPage\n            };\n        }\n        case 'SHOW_CALL_PAGE': {\n\n            return {\n                ...state,\n                showCallPage: action.showPage\n            };\n        }\n        case 'GET_CONTACTS': {\n            return {\n                ...state,\n                contacts: action.contacts\n            };\n        }\n        case 'CHANGE_EACH_ROSTER_STATUS': {\n\n            return {\n                ...state,\n                rosterStatus: state.rosterStatus.map(\n                    (content, i) => content.id === action.rosterStatusItem.id ? {\n                            ...content,\n                            status: action.rosterStatusItem.status\n                        }\n                        : content\n                )\n            }\n\n        }\n        case 'PUSH_ROSTER_STATUS_ITEM': {\n            let rostersArray = state.rosterStatus;\n            rostersArray.push(action.rosterStatusItem)\n            return {\n                ...state,\n                rosterStatus: rostersArray\n            }\n        }\n        case 'SET_SELECTED_ROSTER': {\n            return {\n                ...state,\n                selectedContact: action.contact\n            };\n        }\n        case 'CHECK_ROSTER_CLICK': {\n\n            return {\n                ...state,\n                rosterClicked: action.rosterClicked\n            };\n        }\n        case 'GET_DEVICES_DATA': {\n            return {\n                ...state,\n                devicesData: action.devicesData\n            }\n        }\n        case 'GET_LOGIN_DATA': {\n            return {\n                ...state,\n                loginData: action.loginData\n            }\n        }\n        case 'GET_USER_CALLFLOWS_DATA': {\n            return {\n                ...state,\n                callFlowsData: action.callFlowsData\n            }\n        }\n        case 'GET_CDRS_DATA': {\n            return {\n                ...state,\n                cdrsData: action.cdrsData\n            }\n        }\n        case 'SET_CALL_TYPE': {\n            return {\n                ...state,\n                callType: action.callType\n            }\n        }\n        case 'SET_LOADING_STATUS': {\n            return {\n                ...state,\n                loadingStatus: action.loadingStatus\n            }\n        }\n        case 'GET_NEW_MESSAGE': {\n            return {\n                ...state,\n                newMessage: action.newMessage\n            }\n        }\n        case 'FETCH_HISTORY_MESSAGES': {\n\n            return {\n                ...state,\n                chatLog: action.historyMessages\n            }\n\n        }\n        case 'PUSH_HISTORY_MESSAGES': {\n            let historyArray = state.chatLog;\n            state.chatLog.push(action.newMessages);\n            console.log(\"historyArray\");\n\n            let test = {\n                text: \"test2\",\n                stamp: '2019-11-10T13:05:04.053904Z',\n                type: \"rec\"\n            }\n            return {\n                ...state,\n                chatLog: [...state.chatLog, state.chatLog]\n            }\n        }\n        default:\n            return state;\n    }\n};\nexport default reducer;"]},"metadata":{},"sourceType":"module"}