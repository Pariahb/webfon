{"ast":null,"code":"import _defineProperty from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { myTime } from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const jalali = require('moment-jalaali');\n\n  const _useState = useState({\n    item: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        allDates = _useState2[0],\n        getAllDates = _useState2[1];\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const checkSameDayObjects = array => {\n    for (let i = 0; i < array.length; i++) {\n      let date = moment.unix(array[i].unix_timestamp).utc().format('YYYY/M/D');\n      console.log(\"dates\", date);\n      let onlyDates = allDates.item;\n      onlyDates.push(date);\n      getAllDates(_objectSpread({}, allDates, {\n        item: onlyDates\n      }));\n    }\n  };\n\n  useEffect(() => {});\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, cdrsData.map((item, i) => {\n    return React.createElement(\"div\", {\n      className: \"call-info\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left-side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      className: \"direction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? React.createElement(FontAwesomeIcon, {\n      color: \"green\",\n      icon: faArrowLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }) : item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ? React.createElement(FontAwesomeIcon, {\n      color: \"orange\",\n      icon: faArrowRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }) : item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ? React.createElement(FontAwesomeIcon, {\n      color: \"red\",\n      icon: faBan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : null), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? item.callee_id_name + \"(\" + item.callee_id_number + \")\" : item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ? item.caller_id_name + \"(\" + item.caller_id_number + \")\" : item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ? item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null, React.createElement(\"div\", {\n      className: \"duration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Incoming call, \") : item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Outgoing call, \") : item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Missed call, \") : null, myTime(item.duration_seconds)))), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')));\n  }));\n};\n\nexport default GroupedLog;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js"],"names":["React","useEffect","useState","useSelector","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","myTime","GroupedLog","cdrsData","state","jalali","require","item","allDates","getAllDates","moment","orgMoment","checkSameDayObjects","array","i","length","date","unix","unix_timestamp","utc","format","console","log","onlyDates","push","map","direction","hangup_cause","callee_id_name","callee_id_number","caller_id_name","caller_id_number","duration_seconds"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\nimport {myTime} from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const jalali = require('moment-jalaali');\n    const [allDates, getAllDates] = useState({item: []});\n    const moment = require('persian-date');\n    const orgMoment = require('moment');\n\n    const checkSameDayObjects = (array) => {\n\n        for (let i = 0; i < array.length; i++) {\n            let date = moment.unix(array[i].unix_timestamp).utc().format('YYYY/M/D')\n            console.log(\"dates\", date);\n            let onlyDates = allDates.item;\n            onlyDates.push(date);\n            getAllDates({...allDates, item: onlyDates})\n        }\n    };\n    useEffect(() => {\n\n    })\n    return (\n        <React.Fragment>\n            {\n                cdrsData.map((item, i) => {\n                    return (\n                        <div className=\"call-info\" key={i}>\n                            <div className=\"left-side\"> <span className=\"direction\">\n                                {\n                                    item.direction === \"inbound\" ?\n                                        <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/> :\n                                        item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n                                            <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n                                            item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n                                                <FontAwesomeIcon color=\"red\" icon={faBan}/> : null\n                                }\n                            </span>\n                                <div className=\"name\">\n                                    {\n                                        item.direction === \"inbound\" ?\n                                            item.callee_id_name + \"(\" + item.callee_id_number + \")\" :\n                                            item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n                                                item.caller_id_name + \"(\" + item.caller_id_number + \")\" :\n                                                item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n                                                    item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null\n                                    }\n\n                                    <div className=\"duration\">\n\n                                        {\n                                            item.direction === \"inbound\" ?\n                                                <span>Incoming call, </span>\n                                                :\n                                                item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n                                                    <span>Outgoing call, </span>\n                                                    :\n                                                    item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n                                                        <span>Missed call, </span>\n                                                        : null\n\n                                        }\n                                        {myTime(item.duration_seconds)}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"date\">\n\n                                {\n                                    jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n                                }\n\n                            </div>\n\n\n                        </div>\n                    )\n\n                })\n            }\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default GroupedLog;\n"]},"metadata":{},"sourceType":"module"}