{"ast":null,"code":"import _defineProperty from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  status: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'MY_STATUS':\n      {\n        return _objectSpread({}, state, {\n          status: state.status\n        });\n      }\n\n    case 'SET_QUEUE':\n      {\n        return _objectSpread({}, state, {\n          queues: action.list\n        });\n      }\n\n    case 'SET_ASSIGNED_AGENTS':\n      {\n        return _objectSpread({}, state, {\n          assignedAgents: action.list\n        });\n      }\n\n    case 'SET_UNASSIGNED_AGENTS':\n      {\n        return _objectSpread({}, state, {\n          unAssignedAgents: action.list\n        });\n      }\n\n    case 'SET_ALL_AGENTS':\n      {\n        return _objectSpread({}, state, {\n          allAgents: action.list\n        });\n      }\n\n    case 'SET_AGENTS_STATS':\n      {\n        return _objectSpread({}, state, {\n          agentsStats: action.list\n        });\n      }\n\n    case 'SET_QUEUE_STATS':\n      {\n        return _objectSpread({}, state, {\n          queueStats: action.list\n        });\n      }\n\n    case 'SET_AGENTS_STATUS':\n      {\n        return _objectSpread({}, state, {\n          agentsStatus: action.list\n        });\n      }\n\n    case 'SET_EDIT_QUEUE':\n      {\n        return _objectSpread({}, state, {\n          queue: action.queue\n        });\n      }\n\n    case 'SHOW_TOAST':\n      {\n        return _objectSpread({}, state, {\n          toast: action.toast\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/redux/reducer.js"],"names":["initialState","status","reducer","state","action","type","queues","list","assignedAgents","unAssignedAgents","allAgents","agentsStats","queueStats","agentsStatus","queue","toast"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AAAkB;AACd,iCACOF,KADP;AAEIF,UAAAA,MAAM,EAAEE,KAAK,CAACF;AAFlB;AAIH;;AACD,SAAK,WAAL;AAAkB;AACd,iCACOE,KADP;AAEIG,UAAAA,MAAM,EAAEF,MAAM,CAACG;AAFnB;AAIH;;AACD,SAAK,qBAAL;AAA4B;AACxB,iCACOJ,KADP;AAEIK,UAAAA,cAAc,EAAEJ,MAAM,CAACG;AAF3B;AAIH;;AACD,SAAK,uBAAL;AAA8B;AAC1B,iCACOJ,KADP;AAEIM,UAAAA,gBAAgB,EAAEL,MAAM,CAACG;AAF7B;AAIH;;AACD,SAAK,gBAAL;AAAuB;AACnB,iCACOJ,KADP;AAEIO,UAAAA,SAAS,EAAEN,MAAM,CAACG;AAFtB;AAIH;;AACD,SAAK,kBAAL;AAAyB;AACrB,iCACOJ,KADP;AAEIQ,UAAAA,WAAW,EAAEP,MAAM,CAACG;AAFxB;AAIH;;AACD,SAAK,iBAAL;AAAwB;AACpB,iCACOJ,KADP;AAEIS,UAAAA,UAAU,EAAER,MAAM,CAACG;AAFvB;AAIH;;AACD,SAAK,mBAAL;AAA0B;AACtB,iCACOJ,KADP;AAEIU,UAAAA,YAAY,EAAET,MAAM,CAACG;AAFzB;AAIH;;AACD,SAAK,gBAAL;AAAuB;AACnB,iCACOJ,KADP;AAEIW,UAAAA,KAAK,EAAEV,MAAM,CAACU;AAFlB;AAIH;;AACD,SAAK,YAAL;AAAmB;AACf,iCACOX,KADP;AAEIY,UAAAA,KAAK,EAAEX,MAAM,CAACW;AAFlB;AAIH;;AACD;AACI,aAAOZ,KAAP;AA9DR;AAgEH,CAjED;;AAkEA,eAAeD,OAAf","sourcesContent":["const initialState = {\n    status: ''\n};\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'MY_STATUS': {\n            return {\n                ...state,\n                status: state.status\n            };\n        }\n        case 'SET_QUEUE': {\n            return {\n                ...state,\n                queues: action.list\n            };\n        }\n        case 'SET_ASSIGNED_AGENTS': {\n            return {\n                ...state,\n                assignedAgents: action.list\n            };\n        }\n        case 'SET_UNASSIGNED_AGENTS': {\n            return {\n                ...state,\n                unAssignedAgents: action.list\n            };\n        }\n        case 'SET_ALL_AGENTS': {\n            return {\n                ...state,\n                allAgents: action.list\n            };\n        }\n        case 'SET_AGENTS_STATS': {\n            return {\n                ...state,\n                agentsStats: action.list\n            };\n        }\n        case 'SET_QUEUE_STATS': {\n            return {\n                ...state,\n                queueStats: action.list\n            };\n        }\n        case 'SET_AGENTS_STATUS': {\n            return {\n                ...state,\n                agentsStatus: action.list\n            };\n        }\n        case 'SET_EDIT_QUEUE': {\n            return {\n                ...state,\n                queue: action.queue\n            };\n        }\n        case 'SHOW_TOAST': {\n            return {\n                ...state,\n                toast: action.toast\n            };\n        }\n        default:\n            return state;\n    }\n};\nexport default reducer;"]},"metadata":{},"sourceType":"module"}