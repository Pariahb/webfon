{"ast":null,"code":"import _defineProperty from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-history-detail/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport avatarImage from \"../../../images/avatar.jpg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport HistoryDetailLogs from \"../history-detail-logs\";\nimport \"./style.css\";\n\nconst CallHistoryDetail = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n  const selectedLogContact = useSelector(state => state.selectedLogContact);\n  const dispatch = useDispatch();\n\n  const renderLogs = group => {\n    return Object.keys(group).map((key, index) => React.createElement(\"div\", {\n      className: \"group\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, group[key].map((item, i) => (item.direction === \"inbound\" ? item.to : item.from) === selectedLogContact ? clearDuplicates(item) : null)));\n  };\n\n  const clearDuplicates = group => {\n    return Object.values(group).map((key, index) => {\n      const result = [...key.reduce((mp, o) => {\n        const key = JSON.stringify([o.direction, o.from]);\n        if (!mp.has(key)) mp.set(key, _objectSpread({}, o, {\n          count: 0\n        }));\n        mp.get(key).count++;\n        return mp;\n      }, new Map()).values()];\n      console.log(\"result\", result);\n    });\n  };\n\n  const closeDetail = () => {\n    setShowDetailLog(false);\n  };\n\n  const setShowDetailLog = showLogDetailPage => {\n    dispatch({\n      showLogDetailPage,\n      type: 'SHOW_LOG_DETAIL_PAGE'\n    });\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    onClick: closeDetail,\n    icon: faWindowClose,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"user-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"avatar\",\n    src: avatarImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"userName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, selectedLogContact), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, renderLogs(cdrsData)));\n};\n\nexport default CallHistoryDetail;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-history-detail/index.js"],"names":["React","useSelector","useDispatch","avatarImage","FontAwesomeIcon","faWindowClose","HistoryDetailLogs","CallHistoryDetail","cdrsData","state","selectedLogContact","dispatch","renderLogs","group","Object","keys","map","key","index","item","i","direction","to","from","clearDuplicates","values","result","reduce","mp","o","JSON","stringify","has","set","count","get","Map","console","log","closeDetail","setShowDetailLog","showLogDetailPage","type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport avatarImage from \"../../../images/avatar.jpg\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faWindowClose} from \"@fortawesome/free-solid-svg-icons\";\nimport HistoryDetailLogs from \"../history-detail-logs\";\nimport \"./style.css\"\n\nconst CallHistoryDetail = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const selectedLogContact = useSelector(state => state.selectedLogContact);\n    const dispatch = useDispatch();\n\n    const renderLogs = (group) => {\n        return (\n            Object\n                .keys(group)\n                .map((key, index) => (\n                    <div className=\"group\" key={index}>\n                        {group[key].map((item, i) => (\n                            (item.direction === \"inbound\" ?\n                                item.to : item.from) === selectedLogContact ?\n                                clearDuplicates(item)\n                                : null\n                        ))}\n                    </div>\n                ))\n        );\n    };\n    const clearDuplicates = (group) => {\n        return Object\n            .values(group)\n            .map((key, index) => {\n                    const result = [...key.reduce((mp, o) => {\n                        const key = JSON.stringify([o.direction, o.from]);\n                        if (!mp.has(key)) mp.set(key, {...o, count: 0});\n                        mp.get(key).count++;\n                        return mp;\n                    }, new Map).values()];\n\n                    console.log(\"result\",result);\n                }\n            )\n    }\n    const closeDetail = () => {\n        setShowDetailLog(false)\n    };\n    const setShowDetailLog = (showLogDetailPage) => {\n        dispatch({showLogDetailPage, type: 'SHOW_LOG_DETAIL_PAGE'})\n    };\n    return (\n        <React.Fragment>\n                <FontAwesomeIcon onClick={closeDetail} icon={faWindowClose} color=\"#fff\"/>\n\n                <div className=\"user-image\">\n\n                    <img alt=\"avatar\" src={avatarImage}/>\n                </div>\n                <div className=\"userName\">\n                    {selectedLogContact}\n                </div>\n                <div>\n                    {\n                        renderLogs(cdrsData)\n                    }\n                </div>\n        </React.Fragment>\n    )\n};\n\n\nexport default CallHistoryDetail;\n"]},"metadata":{},"sourceType":"module"}