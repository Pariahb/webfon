{"ast":null,"code":"import _defineProperty from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { getCookie } from \"../../helper/functions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\n\nconst CallLogs = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const jalali = require('moment-jalaali');\n\n  const _useState = useState({\n    item: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        cdrData = _useState2[0],\n        getCdrData = _useState2[1];\n\n  const _useState3 = useState({\n    item: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inbounds = _useState4[0],\n        filterInbounds = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        callType = _useState6[0],\n        setCallType = _useState6[1];\n\n  const dispatch = useDispatch();\n  let today = orgMoment();\n  console.log('today', today.startOf('day').unix());\n\n  const todayCalls = () => {\n    axios.get(\"http://77.104.116.187:8000/v2/accounts/\" + getCookie(\"accID\") + \"/users/\" + getCookie(\"owID\") + \"/cdrs\", {\n      headers: {\n        \"X-Auth-Token\": getCookie(\"monster_token\")\n      }\n    }).then(response => {\n      let cdrs = cdrData.item;\n      cdrs.push(response.data);\n      getCdrData(_objectSpread({}, cdrData, {\n        item: cdrs\n      }));\n      setCdrsDataToReducer(cdrData.item[0].data);\n      console.log(\"response.cdrs\", cdrData.item[0].data);\n    }).catch(error => {});\n  }; // daily api query\n  // interaction?created_from=\" + today.startOf('day').unix()\n  //     + \"&created_to=\" + today.endOf('day').unix()\n  //     + \"&page_size=10\" + \"&_=\" + new Date().setUTCSeconds(0)\n\n\n  const inboundCalls = () => {\n    setCallType(\"inbound\");\n    console.log(\"type\", callType);\n    const item = cdrsData.filter(i => i.direction === \"inbound\");\n    filterInbounds(_objectSpread({}, inbounds, {\n      item: item\n    }));\n    console.log(\"inbounds\", inbounds);\n  };\n  /*------set CDRs per user data to reducer-----------------*/\n\n\n  const setCdrsDataToReducer = cdrsData => {\n    dispatch({\n      cdrsData,\n      type: 'GET_CDRS_DATA'\n    });\n  };\n  /*------set CDRs per user data to reducer-----------------*/\n\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filter-by-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-sm badge-light \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Today\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"This Week\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"This Month\")), React.createElement(\"div\", {\n    className: \"filter-by-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    onClick: inboundCalls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Incoming Calls\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Missed Calls\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Dialed Calls\")), React.createElement(\"table\", {\n    className: \"table table-sm table-striped table-bordered table-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    color: \"green\",\n    icon: faArrowLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(FontAwesomeIcon, {\n    color: \"orange\",\n    icon: faArrowRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Date/Time\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"From\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"To\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Duration\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, callType === \"inbound\" ? inbounds === undefined ? null : inbounds.map((item, i) => {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? React.createElement(FontAwesomeIcon, {\n      color: \"green\",\n      icon: faArrowLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }) : item.direction === \"outbound\" ? React.createElement(FontAwesomeIcon, {\n      color: \"orange\",\n      icon: faArrowRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }) : React.createElement(FontAwesomeIcon, {\n      color: \"red\",\n      icon: faBan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, item.from), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, item.to), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, item.duration_seconds));\n  }) : cdrsData === undefined ? null : cdrsData.map((item, i) => {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? React.createElement(FontAwesomeIcon, {\n      color: \"green\",\n      icon: faArrowLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : item.direction === \"outbound\" ? React.createElement(FontAwesomeIcon, {\n      color: \"orange\",\n      icon: faArrowRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }) : React.createElement(FontAwesomeIcon, {\n      color: \"red\",\n      icon: faBan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, item.from), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, item.to), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, item.duration_seconds));\n  }))));\n};\n\nexport default CallLogs;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js"],"names":["React","useState","useDispatch","useSelector","axios","getCookie","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","CallLogs","cdrsData","state","moment","require","orgMoment","jalali","item","cdrData","getCdrData","inbounds","filterInbounds","callType","setCallType","dispatch","today","console","log","startOf","unix","todayCalls","get","headers","then","response","cdrs","push","data","setCdrsDataToReducer","catch","error","inboundCalls","filter","i","direction","type","undefined","map","unix_timestamp","format","from","to","duration_seconds"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport axios from \"axios\";\nimport {getCookie} from \"../../helper/functions\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst CallLogs = () => {\n        const cdrsData = useSelector(state => state.cdrsData);\n        const moment = require('persian-date');\n        const orgMoment = require('moment');\n        const jalali = require('moment-jalaali');\n        const [cdrData, getCdrData] = useState({item: []});\n        const [inbounds, filterInbounds] = useState({item: []});\n        const [callType, setCallType] = useState('');\n        const dispatch = useDispatch();\n        let today = orgMoment();\n        console.log('today', today.startOf('day').unix());\n        const todayCalls = () => {\n            axios.get(\"http://77.104.116.187:8000/v2/accounts/\" + getCookie(\"accID\") + \"/users/\" + getCookie(\"owID\") + \"/cdrs\", {\n                headers: {\n                    \"X-Auth-Token\": getCookie(\"monster_token\")\n                }\n            })\n                .then(response => {\n                    let cdrs = cdrData.item;\n                    cdrs.push(response.data)\n                    getCdrData({...cdrData, item: cdrs});\n                    setCdrsDataToReducer(cdrData.item[0].data);\n                    console.log(\"response.cdrs\", cdrData.item[0].data);\n                })\n                .catch(error => {\n\n                });\n        };\n\n        // daily api query\n        // interaction?created_from=\" + today.startOf('day').unix()\n        //     + \"&created_to=\" + today.endOf('day').unix()\n        //     + \"&page_size=10\" + \"&_=\" + new Date().setUTCSeconds(0)\n\n\n        const inboundCalls = () => {\n            setCallType(\"inbound\");\n            console.log(\"type\", callType)\n\n            const item = cdrsData.filter(i => i.direction === \"inbound\")\n            filterInbounds({...inbounds, item: item});\n            console.log(\"inbounds\", inbounds)\n\n        };\n\n\n        /*------set CDRs per user data to reducer-----------------*/\n        const setCdrsDataToReducer = (cdrsData) => {\n            dispatch({cdrsData, type: 'GET_CDRS_DATA'})\n        };\n        /*------set CDRs per user data to reducer-----------------*/\n        return (\n            <React.Fragment>\n                <div className=\"filter-by-time\">\n                    <button className=\"btn-sm badge-light \">Today</button>\n                    <button className=\"btn-sm badge-light\">This Week</button>\n                    <button className=\"btn-sm badge-light\">This Month</button>\n                </div>\n                <div className=\"filter-by-type\">\n                    <button className=\"btn-sm badge-light\" onClick={inboundCalls}>Incoming Calls</button>\n                    <button className=\"btn-sm badge-light\">Missed Calls</button>\n                    <button className=\"btn-sm badge-light\">Dialed Calls</button>\n                </div>\n                <table className=\"table table-sm table-striped table-bordered table-hover\">\n                    <thead>\n                    <tr>\n                        <th>\n                            <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/><br/>\n                            <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/>\n                        </th>\n                        <th>Date/Time</th>\n                        <th>From</th>\n                        <th>To</th>\n                        <th>Duration</th>\n                    </tr>\n                    </thead>\n                    <tbody>{\n                        callType === \"inbound\" ?\n                            inbounds === undefined ? null : inbounds.map((item, i) => {\n                                return (\n                                    <tr key={i}>\n                                        <td>\n                                            {\n                                                item.direction === \"inbound\" ?\n                                                    <FontAwesomeIcon color=\"green\"\n                                                                     icon={faArrowLeft}/> : item.direction === \"outbound\" ?\n                                                    <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n                                                    <FontAwesomeIcon color=\"red\" icon={faBan}/>\n\n                                            }\n                                        </td>\n                                        <td>\n\n                                            {\n                                                jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n                                            }\n\n                                        </td>\n                                        <td>\n                                            {item.from}\n                                        </td>\n                                        <td>\n                                            {item.to}\n                                        </td>\n                                        <td>\n                                            {item.duration_seconds}\n                                        </td>\n                                    </tr>\n                                )\n\n                            })\n\n\n                            : cdrsData === undefined ? null : cdrsData.map((item, i) => {\n                                return (\n                                    <tr key={i}>\n                                        <td>\n                                            {\n                                                item.direction === \"inbound\" ?\n                                                    <FontAwesomeIcon color=\"green\"\n                                                                     icon={faArrowLeft}/> : item.direction === \"outbound\" ?\n                                                    <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n                                                    <FontAwesomeIcon color=\"red\" icon={faBan}/>\n\n                                            }\n                                        </td>\n                                        <td>\n\n                                            {\n                                                jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n                                            }\n\n                                        </td>\n                                        <td>\n                                            {item.from}\n                                        </td>\n                                        <td>\n                                            {item.to}\n                                        </td>\n                                        <td>\n                                            {item.duration_seconds}\n                                        </td>\n                                    </tr>\n                                )\n\n                            })\n                    }\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n\n    }\n;\n\n\nexport default CallLogs;\n"]},"metadata":{},"sourceType":"module"}