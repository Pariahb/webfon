{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/log-item/index.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { myTime } from \"../../helper/functions\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport logAvatar from \"../../../images/avatar.jpg\";\nimport styles from \"./log_item.module.css\";\n\nconst LogItem = props => {\n  const jalali = require('moment-jalaali');\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const dispatch = useDispatch();\n\n  const handleContactClick = selectedLogContact => {\n    dispatch({\n      selectedLogContact,\n      type: \"SET_SELECTED_LOG_CONTACT\"\n    });\n    setShowDetailPage(true);\n  }; //Show Or hide setShowDetailPage.\n\n\n  const setShowDetailPage = showLogDetailPage => {\n    dispatch({\n      showLogDetailPage,\n      type: 'SHOW_LOG_DETAIL_PAGE'\n    });\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: () => handleContactClick(props.item.direction === \"inbound\" ? props.item.to : props.item.from),\n    className: styles.data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: styles.image,\n    src: logAvatar,\n    alt: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.item.direction === \"inbound\" ? props.item.callee_id_name !== \"\" ? props.item.callee_id_name : props.item.to : props.item.direction === \"outbound\" && props.item.hangup_cause !== \"NO_ANSWER\" ? props.item.caller_id_name !== \"\" ? props.item.caller_id_name : props.item.from : props.item.direction === \"outbound\" && props.item.hangup_cause === \"NO_ANSWER\" ? props.item.caller_id_name !== \"\" ? props.item.caller_id_name : props.item.from : null, \"(\", props.item.count, \")\", React.createElement(\"div\", {\n    className: styles.duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: styles.direction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.item.direction === \"inbound\" ? React.createElement(FontAwesomeIcon, {\n    color: \"orange\",\n    icon: faArrowRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : props.item.direction === \"outbound\" && props.item.hangup_cause !== \"NO_ANSWER\" ? React.createElement(FontAwesomeIcon, {\n    color: \"green\",\n    icon: faArrowLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }) : props.item.direction === \"outbound\" && props.item.hangup_cause === \"NO_ANSWER\" ? React.createElement(FontAwesomeIcon, {\n    color: \"red\",\n    icon: faBan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }) : null), props.item.direction === \"inbound\" ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Outgoing call, \") : props.item.direction === \"outbound\" && props.item.hangup_cause !== \"NO_ANSWER\" ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Incoming call, \") : props.item.direction === \"outbound\" && props.item.hangup_cause === \"NO_ANSWER\" ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Missed call, \") : null, myTime(props.item.duration_seconds)))));\n};\n\nexport default LogItem;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/log-item/index.js"],"names":["React","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","myTime","useDispatch","useSelector","logAvatar","styles","LogItem","props","jalali","require","moment","orgMoment","dispatch","handleContactClick","selectedLogContact","type","setShowDetailPage","showLogDetailPage","item","direction","to","from","data","image","name","callee_id_name","hangup_cause","caller_id_name","count","duration","duration_seconds"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\nimport {myTime} from \"../../helper/functions\";\nimport {useDispatch} from \"react-redux\";\nimport {useSelector} from \"react-redux\";\nimport logAvatar from \"../../../images/avatar.jpg\";\nimport styles from \"./log_item.module.css\"\n\nconst LogItem = (props) => {\n    const jalali = require('moment-jalaali');\n    const moment = require('persian-date');\n    const orgMoment = require('moment');\n    const dispatch = useDispatch();\n\n    const handleContactClick = (selectedLogContact) => {\n        dispatch({selectedLogContact, type: \"SET_SELECTED_LOG_CONTACT\"});\n        setShowDetailPage(true);\n    };\n    //Show Or hide setShowDetailPage.\n    const setShowDetailPage = (showLogDetailPage) => {\n        dispatch({showLogDetailPage, type: 'SHOW_LOG_DETAIL_PAGE'})\n    };\n    return (\n        <React.Fragment>\n\n            <div onClick={() => handleContactClick((props.item.direction === \"inbound\" ?\n                props.item.to : props.item.from))} className={styles.data}>\n\n                    <div>\n                        <img className={styles.image} src={logAvatar} alt=\"avatar\"/>\n\n                    </div>\n                    <div className={styles.name}>\n                        {\n                            props.item.direction === \"inbound\" ?\n                                props.item.callee_id_name !== \"\" ? props.item.callee_id_name : props.item.to\n                                : props.item.direction === \"outbound\" && props.item.hangup_cause !== \"NO_ANSWER\" ?\n                                props.item.caller_id_name !== \"\" ? props.item.caller_id_name : props.item.from :\n                                props.item.direction === \"outbound\" && props.item.hangup_cause === \"NO_ANSWER\" ?\n                                    props.item.caller_id_name !== \"\" ? props.item.caller_id_name : props.item.from\n                                    : null\n                        }\n\n                        ({props.item.count})\n\n                        <div className={styles.duration}>\n                         <span className={styles.direction}>\n                            {\n                                props.item.direction === \"inbound\" ?\n                                    <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n                                    props.item.direction === \"outbound\" && props.item.hangup_cause !== \"NO_ANSWER\" ?\n                                        <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/> :\n                                        props.item.direction === \"outbound\" && props.item.hangup_cause === \"NO_ANSWER\" ?\n                                            <FontAwesomeIcon color=\"red\" icon={faBan}/> : null\n                            }\n                        </span>\n                            {\n                                props.item.direction === \"inbound\" ?\n                                    <span>Outgoing call, </span>\n                                    :\n                                    props.item.direction === \"outbound\" && props.item.hangup_cause !== \"NO_ANSWER\" ?\n                                        <span>Incoming call, </span>\n                                        :\n                                        props.item.direction === \"outbound\" && props.item.hangup_cause === \"NO_ANSWER\" ?\n                                            <span>Missed call, </span>\n                                            : null\n\n                            }\n                            {myTime(props.item.duration_seconds)}\n                        </div>\n                    </div>\n\n                {/*<div className=\"date\">*/}\n\n                {/*    {*/}\n                {/*        jalali.unix(props.item.unix_timestamp).format('HH:mm:ss')*/}\n                {/*    }*/}\n\n                {/*</div>*/}\n            </div>\n\n        </React.Fragment>\n    )\n};\n\n\nexport default LogItem;\n"]},"metadata":{},"sourceType":"module"}