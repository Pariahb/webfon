{"ast":null,"code":"import _defineProperty from\"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useDebugValue,useEffect,useState}from\"react\";import MessagePopUp from\"../message-popup\";import\"./style.css\";import $ from\"jquery\";import{useSelector}from\"react-redux\";import{useDispatch}from\"react-redux\";import{fetchHistoryMessages}from\"../../../redux/action\";var ChatBox=function ChatBox(){var selectedContact=useSelector(function(state){return state.selectedContact;});var historyMessages=useSelector(function(state){return state.historyMessages;});var newMessage=useSelector(function(state){return state.newMessage;});var strophe=useSelector(function(state){return state.strophe;});var rosterStatus=useSelector(function(state){return state.rosterStatus;});var $iq=useSelector(function(state){return state.$iq;});var $msg=useSelector(function(state){return state.$msg;});var connection=useSelector(function(state){return state.connection;});var _useState=useState({item:[]}),_useState2=_slicedToArray(_useState,2),allMessages=_useState2[0],setAllMessages=_useState2[1];var _useState3=useState({item:[]}),_useState4=_slicedToArray(_useState3,2),recMessages=_useState4[0],setRecMessages=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),messageText=_useState6[0],changeMessageText=_useState6[1];var _useState7=useState({from:'',time:''}),_useState8=_slicedToArray(_useState7,2),lastActivity=_useState8[0],setLastActivity=_useState8[1];var dispatch=useDispatch();var _useState9=useState({item:[]}),_useState10=_slicedToArray(_useState9,2),messageList=_useState10[0],setMessageList=_useState10[1];var scrollToBottom=function scrollToBottom(){var chatDiv=document.querySelector(\".all-messages\");chatDiv.scrollTo(0,chatDiv.scrollHeight);console.log(\"hi\");};useEffect(function(){getLog();},[selectedContact]);var getLog=function getLog(){var mySentMessages,myRecMessages,recHistory=[],sentHistory=[];connection.mam.query(connection.jid.split(\"/\",1)[0],{with:selectedContact,onMessage:function onMessage(message){console.log(\"mam\");$(message).each(function(){if($(this).find(\"forwarded message\").attr(\"from\").split(\"/\",1)[0]===selectedContact){myRecMessages={text:$(this).find(\"forwarded message body\").text(),stamp:$(this).find(\"delay\").attr(\"stamp\"),type:\"rec\"};recHistory=messageList.item;recHistory.push(myRecMessages);setMessageList(_objectSpread({},messageList,{item:recHistory}));}else if($(this).find(\"forwarded message\").attr(\"to\").split(\"/\",1)[0]===selectedContact){mySentMessages={text:$(this).find(\"forwarded message body\").text(),stamp:$(this).find(\"delay\").attr(\"stamp\"),type:\"sent\"};sentHistory=messageList.item;sentHistory.push(mySentMessages);setMessageList(_objectSpread({},messageList,{item:sentHistory}));}});dispatch({historyMessages:sentHistory,type:\"FETCH_HISTORY_MESSAGES\"});return true;},onComplete:function onComplete(response){scrollToBottom();}});};var handleChangeMsg=function handleChangeMsg(event){changeMessageText(event.target.value);};var handleSubmit=function handleSubmit(){console.log(\"selectedContact\",selectedContact);var txtJID=selectedContact,txtMsg=messageText,message,sents=[];if(txtMsg===undefined||txtMsg===\"\")alert(\"Empty Message, please type something\");else{message={to:txtJID,message:txtMsg,time:new Date(),type:\"sent\"};var newMsg={text:message.message,stamp:message.time.toString(),type:message.type};var reply=$msg({to:message.to,from:connection.jid,type:\"chat\",id:\"message-1\"}).c(\"body\").t(message.message);connection.send(reply.tree());var text=message.message;dispatch({newMessage:text,type:'GET_NEW_MESSAGE'});dispatch({newMessage:newMsg,type:'PUSH_HISTORY_MESSAGES'});scrollToBottom();sents=allMessages.item;sents.push(message);setAllMessages(_objectSpread({},allMessages,{item:sents}));}};// const handler = () => {\n//     connection.addHandler(onReceiveMessage, null, \"message\", null, null);\n// };\n// useEffect(() => {\n//     handler();\n// }, [newMessage]);\n/*----------------RECENT ACTIVITY------------------*/var onLastActivity=function onLastActivity(iq){var from=$(iq).attr(\"from\");// the jabber_id of the contact\\+\nvar lastActivityObj;var errorType=$(iq).attr('type');$(iq).find(\"query\").each(function(){if(errorType===\"result\"){var lastActivityTime=$(iq).find(\"query\").attr('seconds');lastActivityObj={from:from,time:lastActivityTime,type:errorType,errorMessage:null};setLastActivity(_objectSpread({},lastActivity,{from:lastActivityObj.from,time:lastActivityObj.time,type:lastActivityObj.type,errorMessage:lastActivityObj.errorMessage}));}if(errorType===\"error\"){var errorMessage=$(iq).find(\"text\").text();lastActivityObj={from:from,time:null,type:errorType,errorMessage:errorMessage};setLastActivity(_objectSpread({},lastActivity,{from:lastActivityObj.from,time:lastActivityObj.time,type:lastActivityObj.type,errorMessage:lastActivityObj.errorMessage}));}});return true;};var getLastActivity=function getLastActivity(){var iq=$iq({type:\"get\",from:connection.jid,to:selectedContact,id:\"last1\"}).c(\"query\",{xmlns:\"jabber:iq:last\"});connection.sendIQ(iq);connection.addHandler(onLastActivity,null,\"iq\",null,null,null);};useEffect(function(){getLastActivity();},[selectedContact]);useEffect(function(){getLastActivity();},[rosterStatus]);return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"userInfo-bar\"},React.createElement(\"p\",{className:\"userId\"},selectedContact),React.createElement(\"p\",null,lastActivity.type===\"error\"?\"Last seen recently\":lastActivity.time===\"0\"?\"online\":lastActivity.time<60?\"last seen \"+lastActivity.time+\" seconds ago\":Math.floor(lastActivity.time/60)<60?\"last seen \"+Math.floor(lastActivity.time/60)+\" minutes ago\":Math.floor(lastActivity.time/3600)<24?\"last seen \"+Math.floor(lastActivity.time/3600)+\" hours ago\":Math.floor(lastActivity.time/86400)<7?\"last seen \"+Math.floor(lastActivity.time/86400)+\" days ago\":\"last seen over a week ago\")),React.createElement(\"div\",{className:\"all-messages\"},React.createElement(\"div\",{className:\"archive\"},historyMessages.length>0?historyMessages.map(function(item,i){return React.createElement(MessagePopUp,{key:i,sentMsg:item.text,type:item.type});}):null)),React.createElement(\"div\",{className:\"textbox\"},React.createElement(\"input\",{type:\"text\",id:\"msg-here\",className:\"form-control\",placeholder:\"Message here...\",rows:\"4\",value:messageText,onChange:handleChangeMsg}),React.createElement(\"button\",{type:\"button\",value:\"send\",className:\"primary\",id:\"sendButton\",onClick:handleSubmit},\"send\")));};export default ChatBox;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/chat/chat-box/index.js"],"names":["React","useDebugValue","useEffect","useState","MessagePopUp","$","useSelector","useDispatch","fetchHistoryMessages","ChatBox","selectedContact","state","historyMessages","newMessage","strophe","rosterStatus","$iq","$msg","connection","item","allMessages","setAllMessages","recMessages","setRecMessages","messageText","changeMessageText","from","time","lastActivity","setLastActivity","dispatch","messageList","setMessageList","scrollToBottom","chatDiv","document","querySelector","scrollTo","scrollHeight","console","log","getLog","mySentMessages","myRecMessages","recHistory","sentHistory","mam","query","jid","split","with","onMessage","message","each","find","attr","text","stamp","type","push","onComplete","response","handleChangeMsg","event","target","value","handleSubmit","txtJID","txtMsg","sents","undefined","alert","to","Date","newMsg","toString","reply","id","c","t","send","tree","onLastActivity","iq","lastActivityObj","errorType","lastActivityTime","errorMessage","getLastActivity","xmlns","sendIQ","addHandler","Math","floor","length","map","i"],"mappings":"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","sourcesContent":["import React, {useDebugValue, useEffect, useState} from \"react\";\nimport MessagePopUp from \"../message-popup\";\nimport \"./style.css\";\nimport $ from \"jquery\";\nimport {useSelector} from \"react-redux\";\nimport {useDispatch} from \"react-redux\";\nimport {fetchHistoryMessages} from \"../../../redux/action\";\n\nconst ChatBox = () => {\n    const selectedContact = useSelector(state => state.selectedContact);\n    const historyMessages = useSelector(state => state.historyMessages);\n    const newMessage = useSelector(state => state.newMessage);\n    const strophe = useSelector(state => state.strophe);\n    const rosterStatus = useSelector(state => state.rosterStatus);\n    const $iq = useSelector(state => state.$iq);\n    const $msg = useSelector(state => state.$msg);\n    const connection = useSelector(state => state.connection);\n    const [allMessages, setAllMessages] = useState({item: []});\n    const [recMessages, setRecMessages] = useState({item: []});\n    const [messageText, changeMessageText] = useState(\"\");\n    const [lastActivity, setLastActivity] = useState({from: '', time: ''});\n    const dispatch = useDispatch();\n\n    const [messageList, setMessageList] = useState({item: []});\n\n\n    const scrollToBottom = () => {\n        let chatDiv = document.querySelector(\".all-messages\");\n        chatDiv.scrollTo(0, chatDiv.scrollHeight);\n        console.log(\"hi\")\n    };\n    useEffect(() => {\n        getLog();\n    }, [selectedContact]);\n\n\n    const getLog = () => {\n        let mySentMessages,\n            myRecMessages,\n            recHistory = [],\n            sentHistory = [];\n\n        connection.mam.query(connection.jid.split(\"/\", 1)[0], {\n            with: selectedContact,\n            onMessage: function (message) {\n                console.log(\"mam\");\n                $(message).each(function () {\n\n                    if (\n                        $(this)\n                            .find(\"forwarded message\")\n                            .attr(\"from\")\n                            .split(\"/\", 1)[0] === selectedContact\n                    ) {\n                        myRecMessages = {\n                            text: $(this)\n                                .find(\"forwarded message body\")\n                                .text(),\n                            stamp: $(this)\n                                .find(\"delay\")\n                                .attr(\"stamp\"),\n                            type: \"rec\"\n                        };\n                        recHistory = messageList.item;\n                        recHistory.push(myRecMessages);\n                        setMessageList({...messageList, item: recHistory});\n                    } else if (\n                        $(this)\n                            .find(\"forwarded message\")\n                            .attr(\"to\")\n                            .split(\"/\", 1)[0] === selectedContact\n                    ) {\n                        mySentMessages = {\n                            text: $(this)\n                                .find(\"forwarded message body\")\n                                .text(),\n                            stamp: $(this)\n                                .find(\"delay\")\n                                .attr(\"stamp\"),\n                            type: \"sent\"\n                        };\n                        sentHistory = messageList.item;\n                        sentHistory.push(mySentMessages);\n                        setMessageList({...messageList, item: sentHistory});\n                    }\n\n\n                });\n\n                dispatch({historyMessages: sentHistory, type: \"FETCH_HISTORY_MESSAGES\"});\n\n                return true;\n            },\n            onComplete: function (response) {\n                scrollToBottom();\n\n            }\n        });\n    };\n\n    const handleChangeMsg = (event) => {\n        changeMessageText(event.target.value)\n    };\n\n    const handleSubmit = () => {\n\n        console.log(\"selectedContact\", selectedContact);\n        let txtJID = selectedContact,\n            txtMsg = messageText,\n            message,\n            sents = [];\n\n        if (txtMsg === undefined || txtMsg === \"\")\n            alert(\"Empty Message, please type something\");\n        else {\n\n            message = {\n                to: txtJID,\n                message: txtMsg,\n                time: new Date(),\n                type: \"sent\"\n            };\n            let newMsg = {\n                text: message.message,\n                stamp: message.time.toString(),\n                type: message.type\n            };\n            let reply = $msg({\n                to: message.to,\n                from: connection.jid,\n                type: \"chat\",\n                id: \"message-1\"\n            })\n                .c(\"body\")\n                .t(message.message);\n            connection.send(reply.tree());\n            const text = message.message\n            dispatch({newMessage: text, type: 'GET_NEW_MESSAGE'})\n            dispatch({newMessage: newMsg, type: 'PUSH_HISTORY_MESSAGES'});\n            scrollToBottom();\n\n            sents = allMessages.item;\n            sents.push(message);\n            setAllMessages({...allMessages, item: sents});\n        }\n\n    };\n    // const handler = () => {\n    //     connection.addHandler(onReceiveMessage, null, \"message\", null, null);\n    // };\n    // useEffect(() => {\n    //     handler();\n    // }, [newMessage]);\n\n\n    /*----------------RECENT ACTIVITY------------------*/\n    const onLastActivity = (iq) => {\n\n        let from = $(iq).attr(\"from\"); // the jabber_id of the contact\\+\n        let lastActivityObj;\n        let errorType = $(iq).attr('type');\n        $(iq).find(\"query\").each(function () {\n\n            if (errorType === \"result\") {\n                let lastActivityTime = $(iq).find(\"query\").attr('seconds');\n                lastActivityObj = {\n                    from: from,\n                    time: lastActivityTime,\n                    type: errorType,\n                    errorMessage: null\n                };\n                setLastActivity({\n                    ...lastActivity, from: lastActivityObj.from,\n                    time: lastActivityObj.time,\n                    type: lastActivityObj.type,\n                    errorMessage: lastActivityObj.errorMessage\n                });\n            }\n            if (errorType === \"error\") {\n                let errorMessage = $(iq).find(\"text\").text();\n                lastActivityObj = {\n                    from: from,\n                    time: null,\n                    type: errorType,\n                    errorMessage: errorMessage\n                };\n                setLastActivity({\n                    ...lastActivity,\n                    from: lastActivityObj.from,\n                    time: lastActivityObj.time,\n                    type: lastActivityObj.type,\n                    errorMessage: lastActivityObj.errorMessage\n                });\n\n            }\n\n        });\n        return true\n\n    };\n    const getLastActivity = () => {\n        const iq = $iq({\n            type: \"get\",\n            from: connection.jid,\n            to: selectedContact,\n            id: \"last1\"\n        }).c(\"query\", {xmlns: \"jabber:iq:last\"});\n        connection.sendIQ(iq);\n        connection.addHandler(onLastActivity, null, \"iq\", null, null, null);\n    };\n    useEffect(() => {\n        getLastActivity();\n    }, [selectedContact]);\n\n    useEffect(() => {\n        getLastActivity();\n    }, [rosterStatus]);\n\n    return (\n        <React.Fragment>\n            <div className=\"userInfo-bar\">\n                <p className=\"userId\">{selectedContact}</p>\n                <p>{lastActivity.type === \"error\" ? \"Last seen recently\" : lastActivity.time === \"0\" ? \"online\"\n                    : lastActivity.time < 60 ? \"last seen \" + lastActivity.time + \" seconds ago\"\n                        : Math.floor(lastActivity.time / 60) < 60 ? \"last seen \" + Math.floor(lastActivity.time / 60) + \" minutes ago\"\n                            : Math.floor(lastActivity.time / 3600) < 24 ? \"last seen \" + Math.floor(lastActivity.time / 3600) + \" hours ago\"\n                                : Math.floor(lastActivity.time / 86400) < 7 ? \"last seen \" + Math.floor(lastActivity.time / 86400) + \" days ago\" : \"last seen over a week ago\"\n                }</p>\n            </div>\n\n            {/*<div className=\"search-bar\">*/}\n            {/*    <Search items={historyMessages}/>*/}\n            {/*</div>*/}\n\n            <div className=\"all-messages\">\n                <div className=\"archive\">\n\n                    {\n                        historyMessages.length > 0 ? historyMessages.map((item, i) => {\n                            return (\n                                <MessagePopUp\n                                    key={i}\n                                    sentMsg={item.text}\n                                    type={item.type}\n                                />\n                            );\n                        }) : null\n                    }\n                </div>\n\n            </div>\n\n            <div className=\"textbox\">\n                <input\n                    type=\"text\"\n                    id=\"msg-here\"\n                    className=\"form-control\"\n                    placeholder=\"Message here...\"\n                    rows=\"4\"\n                    value={messageText}\n                    onChange={handleChangeMsg}\n                />\n\n                <button\n                    type=\"button\"\n                    value=\"send\"\n                    className=\"primary\"\n                    id=\"sendButton\"\n                    onClick={handleSubmit}\n                >send\n                </button>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nexport default ChatBox;\n"]},"metadata":{},"sourceType":"module"}