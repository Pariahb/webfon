{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/status-detector/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst StatusDetector = () => {\n  const status = useSelector(state => state.status);\n  const connection = useSelector(state => state.connection);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        statusColor = _useState2[0],\n        setStatusColor = _useState2[1];\n\n  const rosterStatus = useSelector(state => state.rosterStatus);\n\n  const _useState3 = useState('chat'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        rosterStatusColor = _useState4[0],\n        setRosterStatusColor = _useState4[1];\n\n  useEffect(() => {\n    setRosterStatusColor(rosterStatus);\n    console.log(\"test\");\n  }, [rosterStatus]);\n\n  const changeStatusColor = () => {\n    setStatusColor(status);\n  };\n\n  useEffect(() => {\n    changeStatusColor();\n  }, [status]);\n  useEffect(() => {\n    changeStatusColor();\n  }, [rosterStatus]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: statusColor === \"xa\" ? \"offline\" : statusColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, connection.jid.split(\"@\", 1)));\n};\n\nexport default StatusDetector;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/status-detector/index.js"],"names":["React","useEffect","useState","useSelector","StatusDetector","status","state","connection","statusColor","setStatusColor","rosterStatus","rosterStatusColor","setRosterStatusColor","console","log","changeStatusColor","jid","split"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA1B;AACA,QAAME,UAAU,GAAGJ,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAA9B;;AAFyB,oBAGaL,QAAQ,CAAC,EAAD,CAHrB;AAAA;AAAA,QAGlBM,WAHkB;AAAA,QAGLC,cAHK;;AAIzB,QAAMC,YAAY,GAAGP,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACI,YAAhB,CAAhC;;AAJyB,qBAKyBR,QAAQ,CAAC,MAAD,CALjC;AAAA;AAAA,QAKlBS,iBALkB;AAAA,QAKCC,oBALD;;AAOzBX,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,oBAAoB,CAACF,YAAD,CAApB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEH,GAJQ,EAIN,CAACJ,YAAD,CAJM,CAAT;;AAMA,QAAMK,iBAAiB,GAAG,MAAM;AAC5BN,IAAAA,cAAc,CAACJ,MAAD,CAAd;AACH,GAFD;;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,CAACV,MAAD,CAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,CAACL,YAAD,CAFM,CAAT;AAIA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAM,IAAA,SAAS,EAAEF,WAAW,KAAK,IAAhB,GAAuB,SAAvB,GAAmCA,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkED,UAAU,CAACS,GAAX,CAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAlE,CAFJ,CADJ;AAMH,CA/BD;;AAkCA,eAAeb,cAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst StatusDetector = () => {\n    const status = useSelector(state => state.status)\n    const connection = useSelector(state => state.connection)\n    const [statusColor, setStatusColor] = useState('')\n    const rosterStatus = useSelector(state => state.rosterStatus);\n    const [rosterStatusColor, setRosterStatusColor] = useState('chat');\n\n    useEffect(() => {\n        setRosterStatusColor(rosterStatus)\n        console.log(\"test\")\n\n    }, [rosterStatus]);\n\n    const changeStatusColor = () => {\n        setStatusColor(status)\n    };\n\n    useEffect(() => {\n        changeStatusColor()\n    }, [status]);\n\n    useEffect(() => {\n        changeStatusColor()\n    }, [rosterStatus]);\n\n    return (\n        <React.Fragment>\n\n            <span className={statusColor === \"xa\" ? \"offline\" : statusColor}>{connection.jid.split(\"@\", 1)}</span>\n        </React.Fragment>\n    );\n}\n\n\nexport default StatusDetector;\n"]},"metadata":{},"sourceType":"module"}