{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { myTime } from \"../../helper/functions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\n\nconst GroupedLog = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const jalali = require('moment-jalaali');\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const _renderLogs = group => {\n    console.log(\"cdrsData\", cdrsData);\n    return Object.keys(group).map((key, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, key.replace('Logs', '')), group[key].map((item, i) => React.createElement(\"div\", {\n      className: \"call-info\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left-side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"direction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? React.createElement(FontAwesomeIcon, {\n      color: \"orange\",\n      icon: faArrowRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }) : item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ? React.createElement(FontAwesomeIcon, {\n      color: \"green\",\n      icon: faArrowLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }) : item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ? React.createElement(FontAwesomeIcon, {\n      color: \"red\",\n      icon: faBan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }) : null), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? item.callee_id_name + \"(\" + item.callee_id_number + \")\" : item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ? item.caller_id_name + \"(\" + item.caller_id_number + \")\" : item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ? item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null, React.createElement(\"div\", {\n      className: \"duration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Incoming call, \") : item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Outgoing call, \") : item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Missed call, \") : null, myTime(item.duration_seconds)))), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, jalali.unix(item.unix_timestamp).format('HH:mm:ss'))))));\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, _renderLogs(cdrsData));\n};\n\nexport default GroupedLog;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js"],"names":["React","useEffect","useState","useSelector","myTime","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","GroupedLog","cdrsData","state","jalali","require","moment","orgMoment","_renderLogs","group","console","log","Object","keys","map","key","index","replace","item","i","direction","hangup_cause","callee_id_name","callee_id_number","caller_id_name","caller_id_number","duration_seconds","unix","unix_timestamp","format"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {myTime} from \"../../helper/functions\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\n\nconst GroupedLog = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const jalali = require('moment-jalaali');\n    const moment = require('persian-date');\n    const orgMoment = require('moment');\n\n    const _renderLogs = (group) => {\n        console.log(\"cdrsData\",cdrsData)\n        return Object\n            .keys(group)\n            .map((key, index) => (\n                <div key={index}>\n                    <p>{key.replace('Logs', '')}</p>\n                    {group[key].map((item, i) => (\n                        <div className=\"call-info\" key={i}>\n                            <div className=\"left-side\">\n\n                        <span className=\"direction\">\n                        {\n                            item.direction === \"inbound\" ?\n                                <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n                                item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ?\n                                    <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/> :\n                                    item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ?\n                                        <FontAwesomeIcon color=\"red\" icon={faBan}/> : null\n                        }\n                        </span>\n                                <div className=\"name\">\n                                    {\n                                        item.direction === \"inbound\" ?\n                                            item.callee_id_name + \"(\" + item.callee_id_number + \")\" :\n                                            item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ?\n                                                item.caller_id_name + \"(\" + item.caller_id_number + \")\" :\n                                                item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ?\n                                                    item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null\n                                    }\n\n                                    <div className=\"duration\">\n\n                                        {\n                                            item.direction === \"inbound\" ?\n                                                <span>Incoming call, </span>\n                                                :\n                                                item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ?\n                                                    <span>Outgoing call, </span>\n                                                    :\n                                                    item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ?\n                                                        <span>Missed call, </span>\n                                                        : null\n\n                                        }\n                                        {myTime(item.duration_seconds)}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"date\">\n\n                                {\n                                    jalali.unix(item.unix_timestamp).format('HH:mm:ss')\n                                }\n\n                            </div>\n\n\n                        </div>))}\n                </div>\n            ));\n    }\n\n    return (\n        <React.Fragment>\n            {\n                _renderLogs(cdrsData)\n            }\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default GroupedLog;\n"]},"metadata":{},"sourceType":"module"}