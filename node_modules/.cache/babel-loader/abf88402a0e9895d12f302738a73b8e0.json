{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/make-call/index.js\";\nimport React from \"react\";\nimport \"./style.css\";\nimport { UA } from \"@evercall/react-sip\";\n\nconst MakeCall = () => {\n  let configuration = {\n    'uri': '704@admin',\n    // FILL SIP URI HERE like sip:sip-user@your-domain.bwapp.bwsip.io\n    'password': '704704',\n    // FILL PASSWORD HERE,\n    'ws_servers': 'wss://77.104.116.187:7000'\n  };\n  let incomingCallAudio = new window.Audio('https://code.bandwidth.com/media/incoming_alert.mp3');\n  incomingCallAudio.loop = true;\n  let remoteAudio = new window.Audio();\n  remoteAudio.autoplay = true;\n  let callOptions = {\n    mediaConstraints: {\n      audio: true,\n      video: false\n    }\n  };\n  let phone;\n\n  if (configuration.uri && configuration.password) {\n    UA.debug.enable('JsSIP:*'); // more detailed debug output\n\n    phone = new UA(configuration);\n    phone.on('registrationFailed', function (ev) {\n      alert('Registering on SIP server failed with error: ' + ev.cause);\n      configuration.uri = null;\n      configuration.password = null;\n    });\n    phone.on('newRTCSession', function (ev) {\n      var newSession = ev.session;\n      console.log(newSession);\n    });\n    phone.start();\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"callControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"to\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"toField\",\n    type: \"text\",\n    placeholder: \"Enter number here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"connectCall\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n};\n\nexport default MakeCall;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/make-call/index.js"],"names":["React","UA","MakeCall","configuration","incomingCallAudio","window","Audio","loop","remoteAudio","autoplay","callOptions","mediaConstraints","audio","video","phone","uri","password","debug","enable","on","ev","alert","cause","newSession","session","console","log","start"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAAQC,EAAR,QAAiB,qBAAjB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,MAAIC,aAAa,GAAG;AAChB,WAAO,WADS;AACI;AACpB,gBAAY,QAFI;AAEM;AACtB,kBAAc;AAHE,GAApB;AAMA,MAAIC,iBAAiB,GAAG,IAAIC,MAAM,CAACC,KAAX,CAAiB,qDAAjB,CAAxB;AACAF,EAAAA,iBAAiB,CAACG,IAAlB,GAAyB,IAAzB;AACA,MAAIC,WAAW,GAAG,IAAIH,MAAM,CAACC,KAAX,EAAlB;AACAE,EAAAA,WAAW,CAACC,QAAZ,GAAuB,IAAvB;AAEA,MAAIC,WAAW,GAAG;AACdC,IAAAA,gBAAgB,EAAE;AAACC,MAAAA,KAAK,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE;AAArB;AADJ,GAAlB;AAIA,MAAIC,KAAJ;;AACA,MAAGX,aAAa,CAACY,GAAd,IAAqBZ,aAAa,CAACa,QAAtC,EAA+C;AAC3Cf,IAAAA,EAAE,CAACgB,KAAH,CAASC,MAAT,CAAgB,SAAhB,EAD2C,CACf;;AAC5BJ,IAAAA,KAAK,GAAG,IAAIb,EAAJ,CAAOE,aAAP,CAAR;AACAW,IAAAA,KAAK,CAACK,EAAN,CAAS,oBAAT,EAA+B,UAASC,EAAT,EAAY;AACvCC,MAAAA,KAAK,CAAC,kDAAkDD,EAAE,CAACE,KAAtD,CAAL;AACAnB,MAAAA,aAAa,CAACY,GAAd,GAAoB,IAApB;AACAZ,MAAAA,aAAa,CAACa,QAAd,GAAyB,IAAzB;AACH,KAJD;AAKAF,IAAAA,KAAK,CAACK,EAAN,CAAS,eAAT,EAAyB,UAASC,EAAT,EAAY;AACjC,UAAIG,UAAU,GAAGH,EAAE,CAACI,OAApB;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACF,KAHD;AAIAT,IAAAA,KAAK,CAACa,KAAN;AACH;;AACD,SAEI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,EAAE,EAAC,SAAV;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,WAAW,EAAC,mBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CAJJ,CADJ,CAFJ;AAaH,CA5CD;;AA8CA,eAAezB,QAAf","sourcesContent":["import React from \"react\";\nimport \"./style.css\"\nimport {UA} from \"@evercall/react-sip\"\n\nconst MakeCall = () => {\n    let configuration = {\n        'uri': '704@admin', // FILL SIP URI HERE like sip:sip-user@your-domain.bwapp.bwsip.io\n        'password': '704704', // FILL PASSWORD HERE,\n        'ws_servers': 'wss://77.104.116.187:7000'\n    };\n\n    let incomingCallAudio = new window.Audio('https://code.bandwidth.com/media/incoming_alert.mp3');\n    incomingCallAudio.loop = true;\n    let remoteAudio = new window.Audio();\n    remoteAudio.autoplay = true;\n\n    let callOptions = {\n        mediaConstraints: {audio: true, video: false}\n    };\n\n    let phone;\n    if(configuration.uri && configuration.password){\n        UA.debug.enable('JsSIP:*'); // more detailed debug output\n        phone = new UA(configuration);\n        phone.on('registrationFailed', function(ev){\n            alert('Registering on SIP server failed with error: ' + ev.cause);\n            configuration.uri = null;\n            configuration.password = null;\n        });\n        phone.on('newRTCSession',function(ev){\n            var newSession = ev.session;\n           console.log(newSession)\n        });\n        phone.start();\n    }\n    return (\n\n        <React.Fragment>\n            <div id=\"callControl\">\n                <div id=\"to\">\n                    <input id=\"toField\" type=\"text\" placeholder=\"Enter number here\"/>\n                </div>\n                <div id=\"connectCall\"><i className=\"fa fa-phone\"></i>\n\n                </div>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default MakeCall;\n"]},"metadata":{},"sourceType":"module"}