{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { getCookie } from \"../../helper/functions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport IncomingCall from \"../inconming-call\";\nimport DialledCalls from \"../dialed-call\";\nimport MissedCall from \"../missed-calls\";\nimport TodayCalls from \"../today-calls\";\n\nconst CallLogs = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n  const callType = useSelector(state => state.callType);\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const jalali = require('moment-jalaali');\n\n  const _useState = useState({\n    item: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        cdrData = _useState2[0],\n        getCdrData = _useState2[1];\n\n  const _useState3 = useState({\n    item: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todayCdr = _useState4[0],\n        getTodayCdr = _useState4[1];\n\n  const _useState5 = useState({\n    item: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        inbounds = _useState6[0],\n        filterInbounds = _useState6[1];\n\n  const dispatch = useDispatch();\n  let today = orgMoment();\n\n  const setCallType = callType => {\n    dispatch({\n      callType,\n      type: \"SET_CALL_TYPE\"\n    });\n    console.log(\"type\", callType);\n    console.log(\"cdrsData\", cdrsData);\n  };\n\n  const inboundCalls = () => {\n    setCallType(\"inbound\");\n  };\n\n  const outboundCalls = () => {\n    setCallType(\"outbound\");\n  };\n\n  const missedCallsCalls = () => {\n    setCallType(\"missed\");\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filter-by-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    onClick: inboundCalls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Incoming Calls\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    onClick: missedCallsCalls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Missed Calls\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    onClick: outboundCalls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Dialed Calls\")), callType === \"inbound\" ? React.createElement(IncomingCall, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }) : callType === \"outbound\" ? React.createElement(DialledCalls, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }) : callType === \"missed\" ? React.createElement(MissedCall, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"no records to display\"));\n};\n\nexport default CallLogs;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","axios","getCookie","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","IncomingCall","DialledCalls","MissedCall","TodayCalls","CallLogs","cdrsData","state","callType","moment","require","orgMoment","jalali","item","cdrData","getCdrData","todayCdr","getTodayCdr","inbounds","filterInbounds","dispatch","today","setCallType","type","console","log","inboundCalls","outboundCalls","missedCallsCalls"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,WAAR,EAAqBC,YAArB,EAAmCC,KAAnC,QAA+C,mCAA/C;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,QAAQ,GAAGd,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA5B;;AACA,QAAMC,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AACA,QAAMC,SAAS,GAAGD,OAAO,CAAC,QAAD,CAAzB;;AACA,QAAME,MAAM,GAAGF,OAAO,CAAC,gBAAD,CAAtB;;AALe,oBAMelB,QAAQ,CAAC;AAACqB,IAAAA,IAAI,EAAE;AAAP,GAAD,CANvB;AAAA;AAAA,QAMRC,OANQ;AAAA,QAMCC,UAND;;AAAA,qBAOiBvB,QAAQ,CAAC;AAACqB,IAAAA,IAAI,EAAE;AAAP,GAAD,CAPzB;AAAA;AAAA,QAORG,QAPQ;AAAA,QAOEC,WAPF;;AAAA,qBAQoBzB,QAAQ,CAAC;AAACqB,IAAAA,IAAI,EAAE;AAAP,GAAD,CAR5B;AAAA;AAAA,QAQRK,QARQ;AAAA,QAQEC,cARF;;AASf,QAAMC,QAAQ,GAAG3B,WAAW,EAA5B;AACA,MAAI4B,KAAK,GAAGV,SAAS,EAArB;;AAEA,QAAMW,WAAW,GAAId,QAAD,IAAc;AAC9BY,IAAAA,QAAQ,CAAC;AAACZ,MAAAA,QAAD;AAAWe,MAAAA,IAAI,EAAE;AAAjB,KAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBjB,QAApB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBnB,QAAxB;AACH,GAJD;;AAKA,QAAMoB,YAAY,GAAG,MAAM;AACvBJ,IAAAA,WAAW,CAAC,SAAD,CAAX;AACH,GAFD;;AAGA,QAAMK,aAAa,GAAG,MAAM;AACxBL,IAAAA,WAAW,CAAC,UAAD,CAAX;AACH,GAFD;;AAGA,QAAMM,gBAAgB,GAAG,MAAM;AAC3BN,IAAAA,WAAW,CAAC,QAAD,CAAX;AACH,GAFD;;AAKA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAuC,IAAA,OAAO,EAAEI,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAuC,IAAA,OAAO,EAAEE,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAuC,IAAA,OAAO,EAAED,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CAFJ,EAQYnB,QAAQ,KAAK,SAAb,GAAyB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,GAA2CA,QAAQ,KAAK,UAAb,GACvC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADuC,GACrBA,QAAQ,KAAK,QAAb,GACd,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAVpC,CADJ;AAkBH,CA9CL;;AAkDA,eAAeH,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport axios from \"axios\";\nimport {getCookie} from \"../../helper/functions\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\nimport IncomingCall from \"../inconming-call\";\nimport DialledCalls from \"../dialed-call\";\nimport MissedCall from \"../missed-calls\";\nimport TodayCalls from \"../today-calls\";\n\nconst CallLogs = () => {\n        const cdrsData = useSelector(state => state.cdrsData);\n        const callType = useSelector(state => state.callType);\n        const moment = require('persian-date');\n        const orgMoment = require('moment');\n        const jalali = require('moment-jalaali');\n        const [cdrData, getCdrData] = useState({item: []});\n        const [todayCdr, getTodayCdr] = useState({item: []});\n        const [inbounds, filterInbounds] = useState({item: []});\n        const dispatch = useDispatch();\n        let today = orgMoment();\n\n        const setCallType = (callType) => {\n            dispatch({callType, type: \"SET_CALL_TYPE\"});\n            console.log(\"type\", callType)\n            console.log(\"cdrsData\", cdrsData)\n        };\n        const inboundCalls = () => {\n            setCallType(\"inbound\");\n        };\n        const outboundCalls = () => {\n            setCallType(\"outbound\");\n        };\n        const missedCallsCalls = () => {\n            setCallType(\"missed\");\n        };\n\n\n        return (\n            <React.Fragment>\n\n                <div className=\"filter-by-type\">\n                    <button className=\"btn-sm badge-light\" onClick={inboundCalls}>Incoming Calls</button>\n                    <button className=\"btn-sm badge-light\" onClick={missedCallsCalls}>Missed Calls</button>\n                    <button className=\"btn-sm badge-light\" onClick={outboundCalls}>Dialed Calls</button>\n                </div>\n                    {\n                        callType === \"inbound\" ? <IncomingCall/> : callType === \"outbound\" ?\n                            <DialledCalls/> : callType === \"missed\" ?\n                                <MissedCall/> : <p>no records to display</p>\n\n                    }\n\n            </React.Fragment>\n        )\n\n    }\n;\n\n\nexport default CallLogs;\n"]},"metadata":{},"sourceType":"module"}