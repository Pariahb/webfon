{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DailyLog from \"../daily-log\";\nimport { myTime } from \"../../helper/functions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\n\nconst GroupedLog = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        myData = _useState2[0],\n        setMyData = _useState2[1];\n\n  const jalali = require('moment-jalaali');\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const getKeyByValue = (object, value) => {\n    return Object.keys(object).find(key => object[key] === value);\n    console.log(\"sss\", object + value);\n  };\n\n  const getObjects = () => {\n    console.log(\"cdrsData\", cdrsData);\n    Object.keys(cdrsData).forEach(e => {\n      console.log(\"key=\".concat(e, \"  value=\").concat(cdrsData[e]));\n    });\n  };\n\n  const _renderPics = group => {\n    return Object.keys(group).map((key, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, key.replace('Pics', '')), group[key].map((item, i) => React.createElement(\"div\", {\n      className: \"call-info\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, item.from), React.createElement(\"div\", {\n      className: \"left-side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"direction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? React.createElement(FontAwesomeIcon, {\n      color: \"green\",\n      icon: faArrowLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }) : item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ? React.createElement(FontAwesomeIcon, {\n      color: \"orange\",\n      icon: faArrowRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ? React.createElement(FontAwesomeIcon, {\n      color: \"red\",\n      icon: faBan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : null), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? item.callee_id_name + \"(\" + item.callee_id_number + \")\" : item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ? item.caller_id_name + \"(\" + item.caller_id_number + \")\" : item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ? item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null, React.createElement(\"div\", {\n      className: \"duration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Incoming call, \") : item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Outgoing call, \") : item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Missed call, \") : null, myTime(item.duration_seconds)))), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss'))))));\n  };\n\n  useEffect(() => {\n    getObjects();\n    setMyData(cdrsData);\n  }, [cdrsData]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, _renderPics(cdrsData));\n};\n\nexport default GroupedLog;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js"],"names":["React","useEffect","useState","useSelector","DailyLog","myTime","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","GroupedLog","cdrsData","state","myData","setMyData","jalali","require","moment","orgMoment","getKeyByValue","object","value","Object","keys","find","key","console","log","getObjects","forEach","e","_renderPics","group","map","index","replace","item","i","from","direction","hangup_cause","callee_id_name","callee_id_number","caller_id_name","caller_id_number","duration_seconds","unix","unix_timestamp","format"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nimport DailyLog from \"../daily-log\";\nimport {myTime} from \"../../helper/functions\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\n\nconst GroupedLog = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const [myData, setMyData] = useState([]);\n    const jalali = require('moment-jalaali');\n    const moment = require('persian-date');\n    const orgMoment = require('moment');\n    const getKeyByValue = (object, value) => {\n        return Object.keys(object).find(key =>\n            object[key] === value);\n        console.log(\"sss\", object + value)\n    };\n    const getObjects = () => {\n        console.log(\"cdrsData\", cdrsData);\n        Object.keys(cdrsData).forEach(\n            (e) => {\n                console.log(`key=${e}  value=${cdrsData[e]}`)\n            }\n        )\n    };\n\n    const _renderPics = (group) => {\n        return Object\n            .keys(group)\n            .map((key, index) => (\n                <div key={index}>\n                    <h3>{key.replace('Pics', '')}</h3>\n                    {group[key].map((item, i) => (\n                        <div className=\"call-info\" key={i}>\n                            <p>{item.from}</p>\n\n                            <div className=\"left-side\">\n\n                        <span className=\"direction\">\n                        {\n                            item.direction === \"inbound\" ?\n                                <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/> :\n                                item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ?\n                                    <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n                                    item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ?\n                                        <FontAwesomeIcon color=\"red\" icon={faBan}/> : null\n                        }\n                        </span>\n                                <div className=\"name\">\n                                    {\n                                        item.direction === \"inbound\" ?\n                                            item.callee_id_name + \"(\" + item.callee_id_number + \")\" :\n                                            item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ?\n                                                item.caller_id_name + \"(\" + item.caller_id_number + \")\" :\n                                                item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ?\n                                                    item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null\n                                    }\n\n                                    <div className=\"duration\">\n\n                                        {\n                                            item.direction === \"inbound\" ?\n                                                <span>Incoming call, </span>\n                                                :\n                                                item.direction === \"outbound\" && item.hangup_cause !== \"NO_ANSWER\" ?\n                                                    <span>Outgoing call, </span>\n                                                    :\n                                                    item.direction === \"outbound\" && item.hangup_cause === \"NO_ANSWER\" ?\n                                                        <span>Missed call, </span>\n                                                        : null\n\n                                        }\n                                        {myTime(item.duration_seconds)}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"date\">\n\n                                {\n                                    jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n                                }\n\n                            </div>\n\n\n                        </div>))}\n                </div>\n            ));\n    }\n    useEffect(() => {\n        getObjects();\n        setMyData(cdrsData);\n\n    }, [cdrsData])\n\n    return (\n        <React.Fragment>\n            {\n                _renderPics(cdrsData)\n            }\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default GroupedLog;\n"]},"metadata":{},"sourceType":"module"}