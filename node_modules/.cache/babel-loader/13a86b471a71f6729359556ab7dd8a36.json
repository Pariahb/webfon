{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/inconming-call/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\n\nconst IncomingCall = props => {\n  const callType = useSelector(state => state.callType);\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const jalali = require('moment-jalaali');\n\n  const myTime = time => {\n    var hr = ~~(time / 3600);\n    var min = ~~(time % 3600 / 60);\n    var sec = time % 60;\n    var sec_min = \"\";\n\n    if (hr > 0) {\n      sec_min += \"\" + hr + \":\" + (min < 10 ? \"0\" : \"\");\n    }\n\n    sec_min += \"\" + min + \":\" + (sec < 10 ? \"0\" : \"\");\n    sec_min += \"\" + sec;\n    return sec_min + \" min\";\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, cdrsData === undefined ? null : cdrsData.filter(i => i.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\").map((item, i) => {\n    return React.createElement(\"div\", {\n      className: \"call-info\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left-side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      className: \"direction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      color: \"orange\",\n      icon: faArrowRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, item.caller_id_name + \"(\" + item.caller_id_number + \")\", React.createElement(\"div\", {\n      className: \"duration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, item.duration_seconds <= 60 ? \"00:\" + item.duration_seconds : item.duration_seconds <= 3600 ? myTime(item.duration_seconds) : item.duration_seconds))), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')));\n  }));\n};\n\nexport default IncomingCall;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/inconming-call/index.js"],"names":["React","useEffect","useState","useSelector","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","IncomingCall","props","callType","state","cdrsData","jalali","require","myTime","time","hr","min","sec","sec_min","undefined","filter","i","direction","hangup_cause","map","item","caller_id_name","caller_id_number","duration_seconds","unix","unix_timestamp","format"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\n\nconst IncomingCall = (props) => {\n    const callType = useSelector(state => state.callType);\n    const cdrsData = useSelector(state => state.cdrsData);\n    const jalali = require('moment-jalaali');\n\n    const myTime = (time) => {\n        var hr = ~~(time / 3600);\n        var min = ~~((time % 3600) / 60);\n        var sec = time % 60;\n        var sec_min = \"\";\n        if (hr > 0) {\n            sec_min += \"\" + hr + \":\" + (min < 10 ? \"0\" : \"\");\n        }\n        sec_min += \"\" + min + \":\" + (sec < 10 ? \"0\" : \"\");\n        sec_min += \"\" + sec;\n        return sec_min + \" min\";\n    };\n    return (\n        <React.Fragment>\n            {\n                cdrsData === undefined ? null : cdrsData.filter(i => i.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\").map((item, i) => {\n                    return (\n                        <div className=\"call-info\" key={i}>\n                            <div className=\"left-side\"> <span className=\"direction\">\n                                {\n                                    <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/>\n\n                                }\n                            </span>\n                                <div className=\"name\">\n\n\n                                    {item.caller_id_name + \"(\" + item.caller_id_number + \")\"}\n                                    <div className=\"duration\">\n                                        {item.duration_seconds <= 60 ? \"00:\" + item.duration_seconds :\n                                            item.duration_seconds <= 3600 ? myTime(item.duration_seconds) : item.duration_seconds}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"date\">\n\n                                {\n                                    jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n                                }\n\n                            </div>\n\n\n                        </div>\n                    )\n\n                })\n            }\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default IncomingCall;\n"]},"metadata":{},"sourceType":"module"}