{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/contact-item/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport avatarImage from \"../../images/avatar.jpg\";\nimport \"./style.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RosterStatusDetector from \"../roster-status-detector\";\n\nconst ContactItem = props => {\n  const dispatch = useDispatch();\n  const connection = useSelector(state => state.connection);\n  const $iq = useSelector(state => state.$iq);\n  const showMainPage = useSelector(state => state.showMainPage);\n\n  const handleRosterClick = contact => {\n    console.log(contact);\n    dispatch({\n      contact,\n      type: \"SET_SELECTED_ROSTER\"\n    });\n  };\n\n  const getLastActivity = () => {\n    let iq = $iq({\n      type: \"get\",\n      from: connection.jid,\n      to: props.item.jid,\n      id: \"last1\"\n    }).c(\"query\", {\n      xmlns: \"jabber:iq:last\"\n    });\n    connection.sendIQ(iq);\n  };\n\n  useEffect(() => {\n    getLastActivity();\n  }, [showMainPage]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: getLastActivity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"last activity\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    onClick: () => handleRosterClick(props.item.jid),\n    className: \"row item\",\n    id: props.item.jid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(RosterStatusDetector, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    alt: \"avatar\",\n    src: avatarImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"right-side\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"extension\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"112\")), React.createElement(\"div\", {\n    className: \"contact-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.item.name)))));\n};\n\nexport default ContactItem;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/contact-item/index.js"],"names":["React","useEffect","useState","avatarImage","useDispatch","useSelector","RosterStatusDetector","ContactItem","props","dispatch","connection","state","$iq","showMainPage","handleRosterClick","contact","console","log","type","getLastActivity","iq","from","jid","to","item","id","c","xmlns","sendIQ","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAO,aAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAME,GAAG,GAAGP,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,GAAhB,CAAvB;AACA,QAAMC,YAAY,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACE,YAAhB,CAAhC;;AACA,QAAMC,iBAAiB,GAAIC,OAAD,IAAa;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAN,IAAAA,QAAQ,CAAC;AAACM,MAAAA,OAAD;AAAUG,MAAAA,IAAI,EAAE;AAAhB,KAAD,CAAR;AACH,GAHD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAIC,EAAE,GAAGR,GAAG,CAAC;AACTM,MAAAA,IAAI,EAAE,KADG;AAETG,MAAAA,IAAI,EAAEX,UAAU,CAACY,GAFR;AAGTC,MAAAA,EAAE,EAAEf,KAAK,CAACgB,IAAN,CAAWF,GAHN;AAITG,MAAAA,EAAE,EAAE;AAJK,KAAD,CAAH,CAKNC,CALM,CAKJ,OALI,EAKK;AAACC,MAAAA,KAAK,EAAE;AAAR,KALL,CAAT;AAMAjB,IAAAA,UAAU,CAACkB,MAAX,CAAkBR,EAAlB;AACH,GARD;;AASAnB,EAAAA,SAAS,CAAC,MAAI;AACVkB,IAAAA,eAAe;AAClB,GAFQ,EAEP,CAACN,YAAD,CAFO,CAAT;AAGA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEM,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AACI,IAAA,OAAO,EAAE,MAAML,iBAAiB,CAACN,KAAK,CAACgB,IAAN,CAAWF,GAAZ,CADpC;AAEI,IAAA,SAAS,EAAC,UAFd;AAGI,IAAA,EAAE,EAAEd,KAAK,CAACgB,IAAN,CAAWF,GAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,GAAG,EAAC,QAAT;AAAkB,IAAA,GAAG,EAAEnB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CALJ,EAUI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIK,KAAK,CAACgB,IAAN,CAAWK,IAAf,CADJ,CALJ,CAVJ,CAHJ,CADJ;AA4BH,CAjDD;;AAoDA,eAAetB,WAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport avatarImage from \"../../images/avatar.jpg\";\nimport \"./style.css\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport RosterStatusDetector from \"../roster-status-detector\";\n\nconst ContactItem = (props) => {\n    const dispatch = useDispatch();\n    const connection = useSelector(state => state.connection);\n    const $iq = useSelector(state => state.$iq);\n    const showMainPage = useSelector(state => state.showMainPage);\n    const handleRosterClick = (contact) => {\n        console.log(contact);\n        dispatch({contact, type: \"SET_SELECTED_ROSTER\"});\n    };\n    const getLastActivity = () => {\n        let iq = $iq({\n            type: \"get\",\n            from: connection.jid,\n            to: props.item.jid,\n            id: \"last1\"\n        }).c(\"query\", {xmlns: \"jabber:iq:last\"})\n        connection.sendIQ(iq);\n    };\n    useEffect(()=>{\n        getLastActivity()\n    },[showMainPage]);\n    return (\n        <React.Fragment>\n            <button onClick={getLastActivity}>last activity</button>\n            <p></p>\n            <div\n                onClick={() => handleRosterClick(props.item.jid)}\n                className=\"row item\"\n                id={props.item.jid}\n            >\n                <div className=\"avatar\">\n\n                    <RosterStatusDetector/>\n                    <img alt=\"avatar\" src={avatarImage}/>\n                </div>\n                <div className=\"right-side\">\n                    <div className=\"extension\">\n                        <p>112</p>\n                    </div>\n\n                    <div className=\"contact-name\">\n                        <p>{props.item.name}</p>\n                    </div>\n                </div>\n            </div>\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default ContactItem;\n"]},"metadata":{},"sourceType":"module"}