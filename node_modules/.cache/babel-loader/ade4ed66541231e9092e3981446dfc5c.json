{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"strophe.js/dist/strophe.js\";\nimport \"strophejs-plugin-rsm/lib/strophe.rsm.js\";\nimport \"strophejs-plugin-mam/lib/strophe.mam.js\";\nimport \"strophejs-plugin-pubsub/src/strophe.pubsub.js\";\nimport \"jssip\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { SipProvider } from \"react-sip\";\nReactDOM.render(React.createElement(SipProvider, {\n  host: \"77.104.116.187\",\n  port: 7000,\n  pathname: \"/ws\" // Path in socket URI (e.g. wss://sip.example.com:7443/ws); \"\" by default\n  ,\n  user: \"704@admin\",\n  password: \"704704\" // usually required (e.g. from ENV or props)\n  ,\n  autoRegister: true // true by default, see jssip.UA option register\n  ,\n  autoAnswer: false // automatically answer incoming calls; false by default\n  ,\n  iceRestart: false // force ICE session to restart on every WebRTC call; false by default\n  ,\n  sessionTimersExpires: 120 // value for Session-Expires header; 120 by default\n  ,\n  debug: false // whether to output events to console; false by default\n  ,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","SipProvider","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AACA,OAAO,wCAAP;AACA,OAAO,4BAAP;AACA,OAAO,yCAAP;AACA,OAAO,yCAAP;AACA,OAAO,+CAAP;AACA,OAAO,OAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAAQC,WAAR,QAA0B,WAA1B;AAGAH,QAAQ,CAACI,MAAT,CACI,oBAAC,WAAD;AACI,EAAA,IAAI,EAAC,gBADT;AAEI,EAAA,IAAI,EAAE,IAFV;AAGI,EAAA,QAAQ,EAAC,KAHb,CAGmB;AAHnB;AAII,EAAA,IAAI,EAAC,WAJT;AAKI,EAAA,QAAQ,EAAC,QALb,CAKsB;AALtB;AAMI,EAAA,YAAY,EAAE,IANlB,CAMwB;AANxB;AAOI,EAAA,UAAU,EAAE,KAPhB,CAOuB;AAPvB;AAQI,EAAA,UAAU,EAAE,KARhB,CAQuB;AARvB;AASI,EAAA,oBAAoB,EAAE,GAT1B,CAS+B;AAT/B;AAWI,EAAA,KAAK,EAAE,KAXX,CAWkB;AAXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAaI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAbJ,CADJ,EAgBIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAhBJ,E,CAoBA;AACA;AACA;;AACAJ,aAAa,CAACK,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"strophe.js/dist/strophe.js\";\nimport \"strophejs-plugin-rsm/lib/strophe.rsm.js\";\nimport \"strophejs-plugin-mam/lib/strophe.mam.js\";\nimport \"strophejs-plugin-pubsub/src/strophe.pubsub.js\";\nimport \"jssip\"\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport {SipProvider} from \"react-sip\";\n\n\nReactDOM.render(\n    <SipProvider\n        host=\"77.104.116.187\"\n        port={7000}\n        pathname=\"/ws\" // Path in socket URI (e.g. wss://sip.example.com:7443/ws); \"\" by default\n        user=\"704@admin\"\n        password=\"704704\" // usually required (e.g. from ENV or props)\n        autoRegister={true} // true by default, see jssip.UA option register\n        autoAnswer={false} // automatically answer incoming calls; false by default\n        iceRestart={false} // force ICE session to restart on every WebRTC call; false by default\n        sessionTimersExpires={120} // value for Session-Expires header; 120 by default\n\n        debug={false} // whether to output events to console; false by default\n    >\n        <App/>\n    </SipProvider>,\n    document.getElementById(\"root\"),\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}