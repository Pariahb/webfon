{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nconst CallLogs = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n  const loading = useSelector(state => state.loadingStatus);\n  const dispatch = useDispatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadingStatus = _useState2[0],\n        setLoadingStatus = _useState2[1];\n\n  useEffect(() => {\n    setLoadingStatus(true);\n    dispatch({\n      loadingStatus,\n      type: \"SET_LOADING_STATUS\"\n    });\n  }, [cdrsData]);\n  return React.createElement(\"table\", {\n    className: \"table table-sm table-striped table-bordered table-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Date/Time\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"From\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"To\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Duration\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, cdrsData === undefined ? null : cdrsData.map((item, i) => {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, loading ? React.createElement(FontAwesomeIcon, {\n      color: \"green\",\n      icon: faCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : React.createElement(FontAwesomeIcon, {\n      color: \"red\",\n      icon: faCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) + item.unix_timestamp), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, item.from), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, item.to), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, item.duration_seconds));\n  })));\n};\n\nexport default CallLogs;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","FontAwesomeIcon","faCheck","CallLogs","cdrsData","state","loading","loadingStatus","dispatch","setLoadingStatus","type","undefined","map","item","i","unix_timestamp","from","to","duration_seconds"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,OAAR,QAAsB,mCAAtB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,OAAO,GAAGN,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACE,aAAhB,CAA3B;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAHmB,oBAIuBD,QAAQ,CAAC,KAAD,CAJ/B;AAAA;AAAA,QAIZS,aAJY;AAAA,QAIGE,gBAJH;;AAKnBZ,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAD,IAAAA,QAAQ,CAAC;AAACD,MAAAA,aAAD;AAAgBG,MAAAA,IAAI,EAAE;AAAtB,KAAD,CAAR;AACH,GAHQ,EAGN,CAACN,QAAD,CAHM,CAAT;AAIA,SAEI;AAAO,IAAA,SAAS,EAAC,yDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADA,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,QAAQ,KAAKO,SAAb,GAAyB,IAAzB,GAAgCP,QAAQ,CAACQ,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AAEtD,WACI;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,OAAO,GAAG,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAA+B,MAAA,IAAI,EAAEJ,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GACJ,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,KAAvB;AAA6B,MAAA,IAAI,EAAEA,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDW,IAAI,CAACE,cAF7D,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACG,IADV,CAPJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,IAAI,CAACI,EADV,CAVJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,IAAI,CAACK,gBADV,CAbJ,CADJ;AAoBH,GAtB+B,CAFpC,CATJ,CAFJ;AAyCH,CAlDD;;AAqDA,eAAef,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\n\nconst CallLogs = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const loading = useSelector(state => state.loadingStatus);\n    const dispatch = useDispatch();\n    const [loadingStatus, setLoadingStatus] = useState(false);\n    useEffect(() => {\n        setLoadingStatus(true);\n        dispatch({loadingStatus, type: \"SET_LOADING_STATUS\"});\n    }, [cdrsData]);\n    return (\n\n        <table className=\"table table-sm table-striped table-bordered table-hover\">\n            <thead>\n            <tr>\n                <th>Date/Time</th>\n                <th>From</th>\n                <th>To</th>\n                <th>Duration</th>\n            </tr>\n            </thead>\n            <tbody>{\n\n                cdrsData === undefined ? null : cdrsData.map((item, i) => {\n\n                    return (\n                        <tr key={i}>\n\n                            <td>\n                                {loading ? <FontAwesomeIcon color=\"green\" icon={faCheck}/> :\n                                    <FontAwesomeIcon color=\"red\" icon={faCheck}/> + item.unix_timestamp}\n\n                            </td>\n                            <td>\n                                {item.from}\n                            </td>\n                            <td>\n                                {item.to}\n                            </td>\n                            <td>\n                                {item.duration_seconds}\n                            </td>\n                        </tr>\n                    )\n\n                })\n            }\n            </tbody>\n        </table>\n    )\n\n};\n\n\nexport default CallLogs;\n"]},"metadata":{},"sourceType":"module"}