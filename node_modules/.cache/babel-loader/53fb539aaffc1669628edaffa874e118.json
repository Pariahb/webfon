{"ast":null,"code":"/* XEP-0313: Message Archive Management\n * Copyright (C) 2012 Kim Alvefur\n *\n * This file is MIT/X11 licensed. Please see the\n * LICENSE.txt file in the source package for more information.\n *\n * Modified by: Chris Tunbridge (github.com/Destreyf/)\n * Updated to support v0.3 of the XMPP XEP-0313 standard\n * http://xmpp.org/extensions/xep-0313.html\n *\n */\nimport { $iq, Strophe } from 'strophe.js';\nStrophe.addConnectionPlugin('mam', {\n  _c: null,\n  _p: ['with', 'start', 'end'],\n  init: function (conn) {\n    this._c = conn;\n    Strophe.addNamespace('MAM', 'urn:xmpp:mam:2');\n  },\n  query: function (jid, options) {\n    var _p = this._p;\n    var attr = {\n      type: 'set',\n      to: jid\n    };\n    options = options || {};\n    var mamAttr = {\n      xmlns: Strophe.NS.MAM\n    };\n\n    if (!!options.queryid) {\n      mamAttr.queryid = options.queryid;\n      delete options.queryid;\n    }\n\n    var iq = $iq(attr).c('query', mamAttr).c('x', {\n      xmlns: 'jabber:x:data',\n      type: 'submit'\n    });\n    iq.c('field', {\n      var: 'FORM_TYPE',\n      type: 'hidden'\n    }).c('value').t(Strophe.NS.MAM).up().up();\n    var i;\n\n    for (i = 0; i < this._p.length; i++) {\n      var pn = _p[i];\n      var p = options[pn];\n      delete options[pn];\n\n      if (!!p) {\n        iq.c('field', {\n          var: pn\n        }).c('value').t(p).up().up();\n      }\n    }\n\n    iq.up();\n    var onMessage = options.onMessage;\n    delete options.onMessage;\n    var onComplete = options.onComplete;\n    delete options.onComplete;\n    iq.cnode(new Strophe.RSM(options).toXML());\n    var _c = this._c;\n\n    var handler = _c.addHandler(onMessage, Strophe.NS.MAM, 'message', null);\n\n    return this._c.sendIQ(iq, function () {\n      _c.deleteHandler(handler);\n\n      onComplete.apply(this, arguments);\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}