{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"strophe.js/dist/strophe.js\";\nimport \"strophejs-plugin-rsm/lib/strophe.rsm.js\";\nimport \"strophejs-plugin-mam/lib/strophe.mam.js\";\nimport \"strophejs-plugin-pubsub/src/strophe.pubsub.js\";\nimport SipProvider from \"@evercall/react-sip/dist/components/SipProvider\";\nimport '@evercall/react-sip';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(React.createElement(SipProvider, {\n  host: \"77.104.116.187\",\n  port: 7443,\n  pathname: \"/ws\" // Path in socket URI (e.g. wss://sip.example.com:7443/ws); \"\" by default\n  ,\n  user: \"704@admin\",\n  password: \"704704\" // usually required (e.g. from ENV or props)\n  ,\n  autoRegister: true // true by default, see jssip.UA option register\n  ,\n  autoAnswer: false // automatically answer incoming calls; false by default\n  ,\n  iceRestart: false // force ICE session to restart on every WebRTC call; false by default\n  ,\n  sessionTimersExpires: 120 // value for Session-Expires header; 120 by default\n  ,\n  extraHeaders: {\n    // optional sip headers to send\n    register: ['X-Foo: foo', 'X-Bar: bar'],\n    invite: ['X-Foo: foo2', 'X-Bar: bar2']\n  },\n  iceServers: [// optional\n  {\n    urls: ['stun:a.example.com', 'stun:b.example.com']\n  }, {\n    urls: 'turn:example.com',\n    username: 'foo',\n    credential: '1234'\n  }],\n  debug: false // whether to output events to console; false by default\n  ,\n  incomingAudioDeviceId: \"default\" // default, or a deviceId obtained from navigator.mediaDevices.enumerateDevices()\n  ,\n  outboundAudioDeviceId: \"default\" // default, or a deviceId obtained from navigator.mediaDevices.enumerateDevices()\n  ,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/index.js"],"names":["React","ReactDOM","SipProvider","App","serviceWorker","render","register","invite","urls","username","credential","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AACA,OAAO,wCAAP;AACA,OAAO,4BAAP;AACA,OAAO,yCAAP;AACA,OAAO,yCAAP;AACA,OAAO,+CAAP;AACA,OAAOC,WAAP,MAAwB,iDAAxB;AACA,OAAO,qBAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAH,QAAQ,CAACI,MAAT,CAAgB,oBAAC,WAAD;AACZ,EAAA,IAAI,EAAC,gBADO;AAEZ,EAAA,IAAI,EAAE,IAFM;AAGZ,EAAA,QAAQ,EAAC,KAHG,CAGG;AAHH;AAIZ,EAAA,IAAI,EAAC,WAJO;AAKZ,EAAA,QAAQ,EAAC,QALG,CAKM;AALN;AAMZ,EAAA,YAAY,EAAE,IANF,CAMQ;AANR;AAOZ,EAAA,UAAU,EAAE,KAPA,CAOO;AAPP;AAQZ,EAAA,UAAU,EAAE,KARA,CAQO;AARP;AASZ,EAAA,oBAAoB,EAAE,GATV,CASe;AATf;AAUZ,EAAA,YAAY,EAAE;AAAE;AACZC,IAAAA,QAAQ,EAAE,CAAC,YAAD,EAAe,YAAf,CADA;AAEVC,IAAAA,MAAM,EAAE,CAAC,aAAD,EAAgB,aAAhB;AAFE,GAVF;AAcZ,EAAA,UAAU,EAAE,CAAE;AACV;AAACC,IAAAA,IAAI,EAAE,CAAC,oBAAD,EAAuB,oBAAvB;AAAP,GADQ,EAER;AAACA,IAAAA,IAAI,EAAE,kBAAP;AAA2BC,IAAAA,QAAQ,EAAE,KAArC;AAA4CC,IAAAA,UAAU,EAAE;AAAxD,GAFQ,CAdA;AAkBZ,EAAA,KAAK,EAAE,KAlBK,CAkBE;AAlBF;AAmBZ,EAAA,qBAAqB,EAAE,SAnBX,CAmBsB;AAnBtB;AAoBZ,EAAA,qBAAqB,EAAE,SApBX,CAoBsB;AApBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAsBZ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAtBY,CAAhB,EAuBgBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAvBhB,E,CAyBA;AACA;AACA;;AACAR,aAAa,CAACS,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"strophe.js/dist/strophe.js\";\nimport \"strophejs-plugin-rsm/lib/strophe.rsm.js\";\nimport \"strophejs-plugin-mam/lib/strophe.mam.js\";\nimport \"strophejs-plugin-pubsub/src/strophe.pubsub.js\";\nimport SipProvider from \"@evercall/react-sip/dist/components/SipProvider\";\nimport '@evercall/react-sip'\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<SipProvider\n    host=\"77.104.116.187\"\n    port={7443}\n    pathname=\"/ws\" // Path in socket URI (e.g. wss://sip.example.com:7443/ws); \"\" by default\n    user=\"704@admin\"\n    password=\"704704\" // usually required (e.g. from ENV or props)\n    autoRegister={true} // true by default, see jssip.UA option register\n    autoAnswer={false} // automatically answer incoming calls; false by default\n    iceRestart={false} // force ICE session to restart on every WebRTC call; false by default\n    sessionTimersExpires={120} // value for Session-Expires header; 120 by default\n    extraHeaders={{ // optional sip headers to send\n        register: ['X-Foo: foo', 'X-Bar: bar'],\n        invite: ['X-Foo: foo2', 'X-Bar: bar2']\n    }}\n    iceServers={[ // optional\n        {urls: ['stun:a.example.com', 'stun:b.example.com']},\n        {urls: 'turn:example.com', username: 'foo', credential: '1234'}\n    ]}\n    debug={false} // whether to output events to console; false by default\n    incomingAudioDeviceId={\"default\"} // default, or a deviceId obtained from navigator.mediaDevices.enumerateDevices()\n    outboundAudioDeviceId={\"default\"} // default, or a deviceId obtained from navigator.mediaDevices.enumerateDevices()\n>\n    <App/>\n</SipProvider>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}