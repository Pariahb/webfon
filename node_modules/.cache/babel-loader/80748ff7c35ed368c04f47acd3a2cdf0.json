{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-information/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Device from \"../Device\";\nimport Extension from \"../extension\";\nimport CallLogs from \"../call-log\";\nimport Modal from \"../../modal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport MakeCall from \"../make-call\";\nimport RegisterDevice from \"../register-device\";\nimport { getCookie } from \"../../helper/functions\";\nimport axios from \"axios\";\nimport \"./style.css\";\n\nconst CallInformation = () => {\n  const loading = useSelector(state => state.loadingStatus);\n  const showMainPage = useSelector(state => state.showMainPage);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadingStatus = _useState2[0],\n        setLoadingStatus = _useState2[1];\n\n  const callFlowsData = useSelector(state => state.callFlowsData);\n  const showCallPage = useSelector(state => state.showCallPage);\n  const dispatch = useDispatch();\n\n  const setChangePassStatus = showChangePasswordPage => {\n    dispatch({\n      showChangePasswordPage,\n      type: 'SHOW_CHANGE_PASS_PAGE'\n    });\n  };\n\n  const handleChangePassPage = () => {\n    setShowCallApp(false);\n    setChangePassStatus(true);\n  }; //Show Or hide Main page.\n\n\n  const setShowCallApp = showPage => {\n    console.log(\"showPage\", showPage);\n    dispatch({\n      showPage,\n      type: 'SHOW_CALL_PAGE'\n    });\n  };\n\n  const delete_cookie = function (name) {\n    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n  };\n\n  const handleSubmit = () => {\n    delete_cookie(\"monster_token\");\n    setShowCallApp(false);\n  };\n\n  useEffect(() => {\n    setLoadingStatus(false);\n    dispatch({\n      loadingStatus,\n      type: \"SET_LOADING_STATUS\"\n    });\n  }, [callFlowsData]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    id: \"connect\",\n    value: \"Logout\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Log out From Kazoo\"), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    onClick: handleChangePassPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Change Password\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, loading ? React.createElement(\"div\", {\n    className: \"call-spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"fas fa-spinner fa-spin\",\n    icon: faSpinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Device, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(CallLogs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))));\n};\n\nexport default CallInformation;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-information/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Device","Extension","CallLogs","Modal","FontAwesomeIcon","faSpinner","MakeCall","RegisterDevice","getCookie","axios","CallInformation","loading","state","loadingStatus","showMainPage","setLoadingStatus","callFlowsData","showCallPage","dispatch","setChangePassStatus","showChangePasswordPage","type","handleChangePassPage","setShowCallApp","showPage","console","log","delete_cookie","name","document","cookie","handleSubmit"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Device from \"../Device\";\nimport Extension from \"../extension\";\nimport CallLogs from \"../call-log\";\nimport Modal from \"../../modal\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSpinner} from \"@fortawesome/free-solid-svg-icons\";\nimport MakeCall from \"../make-call\";\nimport RegisterDevice from \"../register-device\";\nimport {getCookie} from \"../../helper/functions\";\nimport axios from \"axios\";\nimport \"./style.css\"\n\nconst CallInformation = () => {\n    const loading = useSelector(state => state.loadingStatus);\n    const showMainPage = useSelector(state => state.showMainPage);\n    const [loadingStatus, setLoadingStatus] = useState(true);\n    const callFlowsData = useSelector(state => state.callFlowsData);\n    const showCallPage = useSelector(state => state.showCallPage);\n    const dispatch = useDispatch();\n\n\n    const setChangePassStatus = (showChangePasswordPage) => {\n        dispatch({showChangePasswordPage, type: 'SHOW_CHANGE_PASS_PAGE'})\n    };\n    const handleChangePassPage = () => {\n        setShowCallApp(false);\n        setChangePassStatus(true);\n\n    };\n    //Show Or hide Main page.\n    const setShowCallApp = (showPage) => {\n        console.log(\"showPage\", showPage)\n        dispatch({showPage, type: 'SHOW_CALL_PAGE'})\n    };\n    const delete_cookie = function (name) {\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    };\n    const handleSubmit = () => {\n        delete_cookie(\"monster_token\");\n        setShowCallApp(false)\n    };\n    useEffect(() => {\n        setLoadingStatus(false);\n        dispatch({loadingStatus, type: \"SET_LOADING_STATUS\"});\n    }, [callFlowsData]);\n\n    return (\n\n        <React.Fragment>\n            <div className=\"container\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    id=\"connect\"\n                    value=\"Logout\"\n                    onClick={handleSubmit}\n                >Log out From Kazoo\n                </button>\n                <button type=\"submit\" className=\"btn btn-primary\"\n                        onClick={handleChangePassPage}>Change Password\n                </button>\n                {/*<div><Modal/></div>*/}\n                {/*<div><MakeCall/></div>*/}\n                <div>{\n                    loading ?\n                        <div className=\"call-spinner\">\n                            <FontAwesomeIcon className=\"fas fa-spinner fa-spin\" icon={faSpinner}/>\n                        </div> :\n                        <div className=\"info\">\n\n                            <div>\n                                <Device/>\n                                {/*<Extension/>*/}\n                            </div>\n                            <CallLogs/>\n                        </div>\n                }</div>\n            </div>\n        </React.Fragment>\n    )\n};\n\n\nexport default CallInformation;\n"]},"metadata":{},"sourceType":"module"}