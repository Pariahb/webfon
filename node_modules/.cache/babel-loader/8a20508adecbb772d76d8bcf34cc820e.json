{"ast":null,"code":"import _slicedToArray from\"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useSelector}from\"react-redux\";var StatusDetector=function StatusDetector(){var status=useSelector(function(state){return state.status;});var connection=useSelector(function(state){return state.connection;});var _useState=useState(''),_useState2=_slicedToArray(_useState,2),statusColor=_useState2[0],setStatusColor=_useState2[1];var changeStatusColor=function changeStatusColor(){setStatusColor(status);};useEffect(function(){changeStatusColor();},[status]);return React.createElement(React.Fragment,null,React.createElement(\"span\",{className:statusColor===\"xa\"?\"offline\":statusColor},connection.jid.split(\"@\",1)));};export default StatusDetector;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/chat/status-detector/index.js"],"names":["React","useEffect","useState","useSelector","StatusDetector","status","state","connection","statusColor","setStatusColor","changeStatusColor","jid","split"],"mappings":"kIAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAAQC,WAAR,KAA0B,aAA1B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,GAAMC,CAAAA,MAAM,CAAGF,WAAW,CAAC,SAAAG,KAAK,QAAIA,CAAAA,KAAK,CAACD,MAAV,EAAN,CAA1B,CACA,GAAME,CAAAA,UAAU,CAAGJ,WAAW,CAAC,SAAAG,KAAK,QAAIA,CAAAA,KAAK,CAACC,UAAV,EAAN,CAA9B,CAFyB,cAGaL,QAAQ,CAAC,EAAD,CAHrB,wCAGlBM,WAHkB,eAGLC,cAHK,eAKzB,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5BD,cAAc,CAACJ,MAAD,CAAd,CACH,CAFD,CAGAJ,SAAS,CAAC,UAAM,CACZS,iBAAiB,GACpB,CAFQ,CAEN,CAACL,MAAD,CAFM,CAAT,CAIA,MACI,qBAAC,KAAD,CAAO,QAAP,MACI,4BAAM,SAAS,CAAEG,WAAW,GAAK,IAAhB,CAAuB,SAAvB,CAAmCA,WAApD,EAAkED,UAAU,CAACI,GAAX,CAAeC,KAAf,CAAqB,GAArB,CAA0B,CAA1B,CAAlE,CADJ,CADJ,CAKH,CAjBD,CAoBA,cAAeR,CAAAA,cAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst StatusDetector = () => {\n    const status = useSelector(state => state.status)\n    const connection = useSelector(state => state.connection)\n    const [statusColor, setStatusColor] = useState('')\n\n    const changeStatusColor = () => {\n        setStatusColor(status)\n    };\n    useEffect(() => {\n        changeStatusColor()\n    }, [status]);\n\n    return (\n        <React.Fragment>\n            <span className={statusColor === \"xa\" ? \"offline\" : statusColor}>{connection.jid.split(\"@\", 1)}</span>\n        </React.Fragment>\n    );\n}\n\n\nexport default StatusDetector;\n"]},"metadata":{},"sourceType":"module"}