{"ast":null,"code":"import _defineProperty from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport LogItem from \"../log-item\";\n\nconst GroupedLog = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const jalali = require('moment-jalaali');\n\n  const _renderLogs = group => {\n    let key;\n    return Object.keys(group).map((key, index) => React.createElement(\"div\", {\n      className: \"col-4 grouped\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, key), [group[key].reduce((mp, o) => {\n      if (JSON.stringify([o.direction === \"outbound\"])) {\n        key = JSON.stringify([o.direction, o.from]);\n      } else {\n        key = JSON.stringify([o.direction, o.to]);\n      }\n\n      if (!mp.has(key)) mp.set(key, _objectSpread({}, o, {\n        count: 0\n      }));\n      mp.get(key).count++;\n      return mp;\n    }, new Map()).entries()].map((item, i) => React.createElement(\"div\", {\n      className: \"all\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, Array.from(item, ([key, value]) => React.createElement(LogItem, {\n      key: i + 1,\n      item: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))))));\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, _renderLogs(cdrsData));\n};\n\nexport default GroupedLog;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js"],"names":["React","useEffect","useState","useSelector","LogItem","GroupedLog","cdrsData","state","jalali","require","_renderLogs","group","key","Object","keys","map","index","reduce","mp","o","JSON","stringify","direction","from","to","has","set","count","get","Map","entries","item","i","Array","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;;AACA,QAAME,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAIC,GAAJ;AACA,WAAOC,MAAM,CACRC,IADE,CACGH,KADH,EAEFI,GAFE,CAEE,CAACH,GAAD,EAAMI,KAAN,KAED;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAEA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,GAAJ,CADJ,EAGQ,CAACD,KAAK,CAACC,GAAD,CAAL,CAAWK,MAAX,CAAkB,CAACC,EAAD,EAAKC,CAAL,KAAW;AAC1B,UAAIC,IAAI,CAACC,SAAL,CAAe,CAACF,CAAC,CAACG,SAAF,KAAgB,UAAjB,CAAf,CAAJ,EAAkD;AAC9CV,QAAAA,GAAG,GAAGQ,IAAI,CAACC,SAAL,CAAe,CAACF,CAAC,CAACG,SAAH,EAAcH,CAAC,CAACI,IAAhB,CAAf,CAAN;AACH,OAFD,MAEO;AACHX,QAAAA,GAAG,GAAGQ,IAAI,CAACC,SAAL,CAAe,CAACF,CAAC,CAACG,SAAH,EAAcH,CAAC,CAACK,EAAhB,CAAf,CAAN;AACH;;AACD,UAAI,CAACN,EAAE,CAACO,GAAH,CAAOb,GAAP,CAAL,EAAkBM,EAAE,CAACQ,GAAH,CAAOd,GAAP,oBAAgBO,CAAhB;AAAmBQ,QAAAA,KAAK,EAAE;AAA1B;AAClBT,MAAAA,EAAE,CAACU,GAAH,CAAOhB,GAAP,EAAYe,KAAZ;AACA,aAAOT,EAAP;AACH,KATA,EASE,IAAIW,GAAJ,EATF,EASWC,OATX,EAAD,EASuBf,GATvB,CAS2B,CAACgB,IAAD,EAAOC,CAAP,KACvB;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAEA,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,KAAK,CAACV,IAAN,CAAWQ,IAAX,EAAiB,CAAC,CAACnB,GAAD,EAAMsB,KAAN,CAAD,KACd,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEF,CAAC,GAAC,CAAhB;AAAmB,MAAA,IAAI,EAAEE,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CAVJ,CAHR,CAJD,CAAP;AA2BH,GA7BD;;AA+BA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQxB,WAAW,CAACJ,QAAD,CAFnB,CADJ;AAQH,CA3CD;;AA8CA,eAAeD,UAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport LogItem from \"../log-item\";\n\nconst GroupedLog = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const jalali = require('moment-jalaali');\n\n    const _renderLogs = (group) => {\n        let key;\n        return Object\n            .keys(group)\n            .map((key, index) => (\n\n                <div className=\"col-4 grouped\" key={index}>\n                    <p>{key}</p>\n                    {\n                        [group[key].reduce((mp, o) => {\n                            if (JSON.stringify([o.direction === \"outbound\"])) {\n                                key = JSON.stringify([o.direction, o.from]);\n                            } else {\n                                key = JSON.stringify([o.direction, o.to]);\n                            }\n                            if (!mp.has(key)) mp.set(key, {...o, count: 0});\n                            mp.get(key).count++;\n                            return mp;\n                        }, new Map).entries()].map((item, i) => (\n                            <div className=\"all\" key={i}>\n                                {Array.from(item, ([key, value]) =>\n                                    <LogItem key={i+1} item={value}/>\n                                )}\n                            </div>\n\n                        ))\n                    }\n                </div>\n            ));\n    };\n\n    return (\n        <React.Fragment>\n            {\n                _renderLogs(cdrsData)\n            }\n        </React.Fragment>\n    );\n\n};\n\n\nexport default GroupedLog;\n"]},"metadata":{},"sourceType":"module"}