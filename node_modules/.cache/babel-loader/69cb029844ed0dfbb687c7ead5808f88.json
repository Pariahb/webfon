{"ast":null,"code":"import _slicedToArray from\"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import avatarImage from\"../../../images/avatar.jpg\";import{useDispatch,useSelector}from\"react-redux\";import RosterStatusDetector from\"../roster-status-detector\";import\"./style.css\";var ContactItem=function ContactItem(props){var dispatch=useDispatch();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),userStatus=_useState2[0],setUserStatus=_useState2[1];var rosterStatus=useSelector(function(state){return state.rosterStatus;});var handleRosterClick=function handleRosterClick(contact){dispatch({contact:contact,type:\"SET_SELECTED_ROSTER\"});};/*----------find status for specific user------------------*/var findRosterStatus=function findRosterStatus(){var item=rosterStatus.filter(function(i){return i.id===props.item.jid;})[0];setUserStatus(item);};/*--------------/find status for specific user------------------*/useEffect(function(){findRosterStatus();},[rosterStatus]);return React.createElement(React.Fragment,null,React.createElement(\"div\",{onClick:function onClick(){return handleRosterClick(props.item.jid);},className:\"row item\",id:props.item.jid},React.createElement(\"div\",{className:\"avatar\"},userStatus!==undefined?React.createElement(RosterStatusDetector,{status:userStatus.status}):React.createElement(\"span\",{className:\"offline\"}),React.createElement(\"img\",{alt:\"avatar\",src:avatarImage})),React.createElement(\"div\",{className:\"right-side\"},React.createElement(\"div\",{className:\"extension\"},React.createElement(\"p\",null,\"112\")),React.createElement(\"div\",{className:\"contact-name\"},React.createElement(\"p\",null,props.item.name)))));};export default ContactItem;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/chat/contact-item/index.js"],"names":["React","useEffect","useState","avatarImage","useDispatch","useSelector","RosterStatusDetector","ContactItem","props","dispatch","userStatus","setUserStatus","rosterStatus","state","handleRosterClick","contact","type","findRosterStatus","item","filter","i","id","jid","undefined","status","name"],"mappings":"kIAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,MAAOC,CAAAA,oBAAP,KAAiC,2BAAjC,CACA,MAAO,aAAP,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3B,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CAD2B,cAESF,QAAQ,CAAC,EAAD,CAFjB,wCAEpBQ,UAFoB,eAERC,aAFQ,eAG3B,GAAMC,CAAAA,YAAY,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACD,YAAV,EAAN,CAAhC,CAEA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,OAAD,CAAa,CACnCN,QAAQ,CAAC,CAACM,OAAO,CAAPA,OAAD,CAAUC,IAAI,CAAE,qBAAhB,CAAD,CAAR,CACH,CAFD,CAIA,6DACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3B,GAAMC,CAAAA,IAAI,CAAGN,YAAY,CAACO,MAAb,CAAoB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,EAAF,GAASb,KAAK,CAACU,IAAN,CAAWI,GAAxB,EAArB,EAAkD,CAAlD,CAAb,CACAX,aAAa,CAACO,IAAD,CAAb,CACH,CAHD,CAIA,kEAGAjB,SAAS,CAAC,UAAM,CACZgB,gBAAgB,GACnB,CAFQ,CAEN,CAACL,YAAD,CAFM,CAAT,CAKA,MACI,qBAAC,KAAD,CAAO,QAAP,MACI,2BACI,OAAO,CAAE,yBAAME,CAAAA,iBAAiB,CAACN,KAAK,CAACU,IAAN,CAAWI,GAAZ,CAAvB,EADb,CAEI,SAAS,CAAC,UAFd,CAGI,EAAE,CAAEd,KAAK,CAACU,IAAN,CAAWI,GAHnB,EAKI,2BAAK,SAAS,CAAC,QAAf,EAEQZ,UAAU,GAAKa,SAAf,CAA2B,oBAAC,oBAAD,EAAsB,MAAM,CAAEb,UAAU,CAACc,MAAzC,EAA3B,CACI,4BAAM,SAAS,CAAC,SAAhB,EAHZ,CAKI,2BAAK,GAAG,CAAC,QAAT,CAAkB,GAAG,CAAErB,WAAvB,EALJ,CALJ,CAYI,2BAAK,SAAS,CAAC,YAAf,EACI,2BAAK,SAAS,CAAC,WAAf,EACI,mCADJ,CADJ,CAKI,2BAAK,SAAS,CAAC,cAAf,EACI,6BAAIK,KAAK,CAACU,IAAN,CAAWO,IAAf,CADJ,CALJ,CAZJ,CADJ,CADJ,CA4BH,CAlDD,CAqDA,cAAelB,CAAAA,WAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport avatarImage from \"../../../images/avatar.jpg\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport RosterStatusDetector from \"../roster-status-detector\";\nimport \"./style.css\";\n\nconst ContactItem = (props) => {\n    const dispatch = useDispatch();\n    const [userStatus, setUserStatus] = useState({})\n    const rosterStatus = useSelector(state => state.rosterStatus);\n\n    const handleRosterClick = (contact) => {\n        dispatch({contact, type: \"SET_SELECTED_ROSTER\"});\n    };\n\n    /*----------find status for specific user------------------*/\n    const findRosterStatus = () => {\n        const item = rosterStatus.filter(i => i.id === props.item.jid)[0]\n        setUserStatus(item);\n    };\n    /*--------------/find status for specific user------------------*/\n\n\n    useEffect(() => {\n        findRosterStatus()\n    }, [rosterStatus]);\n\n\n    return (\n        <React.Fragment>\n            <div\n                onClick={() => handleRosterClick(props.item.jid)}\n                className=\"row item\"\n                id={props.item.jid}\n            >\n                <div className=\"avatar\">\n                    {\n                        userStatus !== undefined ? <RosterStatusDetector status={userStatus.status}/> :\n                            <span className=\"offline\"></span>\n                    }\n                    <img alt=\"avatar\" src={avatarImage}/>\n                </div>\n                <div className=\"right-side\">\n                    <div className=\"extension\">\n                        <p>112</p>\n                    </div>\n\n                    <div className=\"contact-name\">\n                        <p>{props.item.name}</p>\n                    </div>\n                </div>\n            </div>\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default ContactItem;\n"]},"metadata":{},"sourceType":"module"}