{"ast":null,"code":"import _defineProperty from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  status: \"chat\",\n  connection: new window.Strophe.Connection(\"http://77.104.116.225:5280/http-bind\"),\n  $pres: window.$pres,\n  $iq: window.$iq,\n  $msg: window.$msg,\n  strophe: window.Strophe,\n  showMainPage: false,\n  contacts: [],\n  rosterStatus: [{\n    id: 'maral@ejabberd/1496470170155449255492226',\n    status: 'chat'\n  }],\n  selectedContact: '',\n  rosterClicked: false,\n  lastActivity: []\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(\"connection\", state.connection);\n\n  switch (action.type) {\n    case 'MY_STATUS':\n      {\n        return _objectSpread({}, state, {\n          status: action.s\n        });\n      }\n\n    case 'SHOW_MAIN_PAGE':\n      {\n        return _objectSpread({}, state, {\n          showMainPage: action.showMainPage\n        });\n      }\n\n    case 'GET_CONTACTS':\n      {\n        return _objectSpread({}, state, {\n          contacts: action.contacts\n        });\n      }\n    // case 'CHANGE_EACH_ROSTER_STATUS': {\n    //     debugger\n    //     return state.rosterStatus.map((item, index) => {\n    //         if (item.id === action.rosterStatusItem.id) {\n    //             // This isn't the item we care about - keep it as-is\n    //             return {...item, ...action.rosterStatusItem}\n    //         }\n    //         return item\n    //     })\n    //\n    // }\n\n    case 'SET_SELECTED_ROSTER':\n      {\n        return _objectSpread({}, state, {\n          selectedContact: action.contact\n        });\n      }\n\n    case 'CHECK_ROSTER_CLICK':\n      {\n        return _objectSpread({}, state, {\n          rosterClicked: action.rosterClicked\n        });\n      }\n\n    case 'GET_LAST_SEEN':\n      {\n        return _objectSpread({}, state, {\n          lastActivity: action.lastActivity\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/redux/reducer.js"],"names":["initialState","status","connection","window","Strophe","Connection","$pres","$iq","$msg","strophe","showMainPage","contacts","rosterStatus","id","selectedContact","rosterClicked","lastActivity","reducer","state","action","console","log","type","s","contact"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,MADS;AAEjBC,EAAAA,UAAU,EAAE,IAAIC,MAAM,CAACC,OAAP,CAAeC,UAAnB,CACR,sCADQ,CAFK;AAKjBC,EAAAA,KAAK,EAAEH,MAAM,CAACG,KALG;AAMjBC,EAAAA,GAAG,EAAEJ,MAAM,CAACI,GANK;AAOjBC,EAAAA,IAAI,EAAEL,MAAM,CAACK,IAPI;AAQjBC,EAAAA,OAAO,EAAEN,MAAM,CAACC,OARC;AASjBM,EAAAA,YAAY,EAAE,KATG;AAUjBC,EAAAA,QAAQ,EAAE,EAVO;AAWjBC,EAAAA,YAAY,EAAE,CAAC;AACXC,IAAAA,EAAE,EAAE,0CADO;AAEXZ,IAAAA,MAAM,EAAE;AAFG,GAAD,CAXG;AAejBa,EAAAA,eAAe,EAAE,EAfA;AAgBjBC,EAAAA,aAAa,EAAE,KAhBE;AAiBjBC,EAAAA,YAAY,EAAE;AAjBG,CAArB;;AAoBA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGlB,YAAT,EAAuBmB,MAAvB,KAAkC;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,KAAK,CAAChB,UAAhC;;AAEA,UAAQiB,MAAM,CAACG,IAAf;AACI,SAAK,WAAL;AAAkB;AACd,iCACOJ,KADP;AAEIjB,UAAAA,MAAM,EAAEkB,MAAM,CAACI;AAFnB;AAIH;;AACD,SAAK,gBAAL;AAAuB;AACnB,iCACOL,KADP;AAEIR,UAAAA,YAAY,EAAES,MAAM,CAACT;AAFzB;AAIH;;AACD,SAAK,cAAL;AAAqB;AACjB,iCACOQ,KADP;AAEIP,UAAAA,QAAQ,EAAEQ,MAAM,CAACR;AAFrB;AAIH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAK,qBAAL;AAA4B;AAExB,iCACOO,KADP;AAEIJ,UAAAA,eAAe,EAAEK,MAAM,CAACK;AAF5B;AAIH;;AACD,SAAK,oBAAL;AAA2B;AAEvB,iCACON,KADP;AAEIH,UAAAA,aAAa,EAAEI,MAAM,CAACJ;AAF1B;AAIH;;AACD,SAAK,eAAL;AAAsB;AAElB,iCACOG,KADP;AAEIF,UAAAA,YAAY,EAAEG,MAAM,CAACH;AAFzB;AAIH;;AACD;AACI,aAAOE,KAAP;AArDR;AAuDH,CA1DD;;AA2DA,eAAeD,OAAf","sourcesContent":["const initialState = {\n    status: \"chat\",\n    connection: new window.Strophe.Connection(\n        \"http://77.104.116.225:5280/http-bind\"\n    ),\n    $pres: window.$pres,\n    $iq: window.$iq,\n    $msg: window.$msg,\n    strophe: window.Strophe,\n    showMainPage: false,\n    contacts: [],\n    rosterStatus: [{\n        id: 'maral@ejabberd/1496470170155449255492226',\n        status: 'chat'\n    }],\n    selectedContact: '',\n    rosterClicked: false,\n    lastActivity: []\n\n};\nconst reducer = (state = initialState, action) => {\n    console.log(\"connection\", state.connection)\n\n    switch (action.type) {\n        case 'MY_STATUS': {\n            return {\n                ...state,\n                status: action.s\n            };\n        }\n        case 'SHOW_MAIN_PAGE': {\n            return {\n                ...state,\n                showMainPage: action.showMainPage\n            };\n        }\n        case 'GET_CONTACTS': {\n            return {\n                ...state,\n                contacts: action.contacts\n            };\n        }\n        // case 'CHANGE_EACH_ROSTER_STATUS': {\n        //     debugger\n        //     return state.rosterStatus.map((item, index) => {\n        //         if (item.id === action.rosterStatusItem.id) {\n        //             // This isn't the item we care about - keep it as-is\n        //             return {...item, ...action.rosterStatusItem}\n        //         }\n        //         return item\n        //     })\n        //\n        // }\n\n        case 'SET_SELECTED_ROSTER': {\n\n            return {\n                ...state,\n                selectedContact: action.contact\n            };\n        }\n        case 'CHECK_ROSTER_CLICK': {\n\n            return {\n                ...state,\n                rosterClicked: action.rosterClicked\n            };\n        }\n        case 'GET_LAST_SEEN': {\n\n            return {\n                ...state,\n                lastActivity: action.lastActivity\n            };\n        }\n        default:\n            return state;\n    }\n};\nexport default reducer;"]},"metadata":{},"sourceType":"module"}