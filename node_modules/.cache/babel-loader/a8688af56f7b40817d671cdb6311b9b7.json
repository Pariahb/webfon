{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DailyLog from \"../daily-log\";\nimport { myTime } from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        myData = _useState2[0],\n        setMyData = _useState2[1];\n\n  const getKeyByValue = (object, value) => {\n    return Object.keys(object).find(key => object[key] === value);\n    console.log(\"sss\", object + value);\n  };\n\n  const getObjects = () => {\n    console.log(\"cdrsData\", cdrsData);\n    Object.keys(cdrsData).forEach(e => {\n      console.log(\"key=\".concat(e, \"  value=\").concat(cdrsData[e]));\n    });\n  };\n\n  const _renderPics = group => {\n    return Object.keys(group).map((key, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, key.replace('Pics', '')), group[key].map((pic, i) => React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"title: \", pic.direction, \", url: \", myTime(pic.duration_seconds)))));\n  };\n\n  useEffect(() => {\n    getObjects();\n    setMyData(cdrsData);\n  }, [cdrsData]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, _renderPics(cdrsData));\n};\n\nexport default GroupedLog;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js"],"names":["React","useEffect","useState","useSelector","DailyLog","myTime","GroupedLog","cdrsData","state","myData","setMyData","getKeyByValue","object","value","Object","keys","find","key","console","log","getObjects","forEach","e","_renderPics","group","map","index","replace","pic","i","direction","duration_seconds"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAAQC,MAAR,QAAqB,wBAArB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;;AADqB,oBAEOL,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,QAEdO,MAFc;AAAA,QAENC,SAFM;;AAGrB,QAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrC,WAAOC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,IAApB,CAAyBC,GAAG,IAC/BL,MAAM,CAACK,GAAD,CAAN,KAAgBJ,KADb,CAAP;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,MAAM,GAAGC,KAA5B;AACH,GAJD;;AAKA,QAAMO,UAAU,GAAG,MAAM;AACrBF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBZ,QAAxB;AACAO,IAAAA,MAAM,CAACC,IAAP,CAAYR,QAAZ,EAAsBc,OAAtB,CACKC,CAAD,IAAO;AACHJ,MAAAA,OAAO,CAACC,GAAR,eAAmBG,CAAnB,qBAA+Bf,QAAQ,CAACe,CAAD,CAAvC;AACH,KAHL;AAKH,GAPD;;AASA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,WAAOV,MAAM,CACRC,IADE,CACGS,KADH,EAEFC,GAFE,CAEE,CAACR,GAAD,EAAMS,KAAN,KACD;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,GAAG,CAACU,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAL,CADJ,EAEKH,KAAK,CAACP,GAAD,CAAL,CAAWQ,GAAX,CAAe,CAACG,GAAD,EAAMC,CAAN,KACZ;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqBD,GAAG,CAACE,SAAzB,aAA2CzB,MAAM,CAACuB,GAAG,CAACG,gBAAL,CAAjD,CADH,CAFL,CAHD,CAAP;AAUH,GAXD;;AAYA9B,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,UAAU;AACVV,IAAAA,SAAS,CAACH,QAAD,CAAT;AAEH,GAJQ,EAIN,CAACA,QAAD,CAJM,CAAT;AAMA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQgB,WAAW,CAAChB,QAAD,CAFnB,CADJ;AASH,CA5CD;;AA+CA,eAAeD,UAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nimport DailyLog from \"../daily-log\";\nimport {myTime} from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const [myData, setMyData] = useState([])\n    const getKeyByValue = (object, value) => {\n        return Object.keys(object).find(key =>\n            object[key] === value);\n        console.log(\"sss\", object + value)\n    };\n    const getObjects = () => {\n        console.log(\"cdrsData\", cdrsData);\n        Object.keys(cdrsData).forEach(\n            (e) => {\n                console.log(`key=${e}  value=${cdrsData[e]}`)\n            }\n        )\n    };\n\n    const _renderPics = (group) => {\n        return Object\n            .keys(group)\n            .map((key, index) => (\n                <div key={index}>\n                    <h3>{key.replace('Pics', '')}</h3>\n                    {group[key].map((pic, i) => (\n                        <div key={i}>title: {pic.direction}, url: {myTime(pic.duration_seconds)}</div>\n                    ))}\n                </div>\n            ));\n    }\n    useEffect(() => {\n        getObjects();\n        setMyData(cdrsData);\n\n    }, [cdrsData])\n\n    return (\n        <React.Fragment>\n            {\n                _renderPics(cdrsData)\n            }\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default GroupedLog;\n"]},"metadata":{},"sourceType":"module"}