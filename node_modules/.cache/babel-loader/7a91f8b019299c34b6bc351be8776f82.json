{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/user-extensions/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst ExtensionsList = () => {\n  const devicesData = useSelector(state => state.devicesData);\n  const loginData = useSelector(state => state.loginData);\n  const showCallPage = useSelector(state => state.showCallPage);\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        myExtensions = _useState2[0],\n        getMyExtensions = _useState2[1];\n\n  const findRosterStatus = () => {\n    // const items = extensionsList.item.filter(i => i.owner_id === loginData.item[0].data.owner_id);\n    getMyExtensions(devicesData);\n    console.log(\"myExtensions\", myExtensions);\n  };\n\n  useEffect(() => {\n    findRosterStatus();\n  }, [devicesData]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nexport default ExtensionsList;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/user-extensions/index.js"],"names":["React","useEffect","useState","useSelector","ExtensionsList","devicesData","state","loginData","showCallPage","myExtensions","getMyExtensions","findRosterStatus","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAGA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B;AACA,QAAME,SAAS,GAAGJ,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,SAAhB,CAA7B;AACA,QAAMC,YAAY,GAAGL,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACE,YAAhB,CAAhC;;AAHyB,oBAKeN,QAAQ,CAAC,EAAD,CALvB;AAAA;AAAA,QAKlBO,YALkB;AAAA,QAKJC,eALI;;AAMzB,QAAMC,gBAAgB,GAAG,MAAM;AAC3B;AACAD,IAAAA,eAAe,CAACL,WAAD,CAAf;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BJ,YAA3B;AACH,GAJD;;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,gBAAgB;AACnB,GAFQ,EAEP,CAACN,WAAD,CAFO,CAAT;AAGA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAOH,CArBD;;AAwBA,eAAeD,cAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\n\n\nconst ExtensionsList = () => {\n    const devicesData = useSelector(state => state.devicesData);\n    const loginData = useSelector(state => state.loginData);\n    const showCallPage = useSelector(state => state.showCallPage);\n\n    const [myExtensions, getMyExtensions] = useState({});\n    const findRosterStatus = () => {\n        // const items = extensionsList.item.filter(i => i.owner_id === loginData.item[0].data.owner_id);\n        getMyExtensions(devicesData);\n        console.log(\"myExtensions\",myExtensions)\n    };\n    useEffect(() => {\n        findRosterStatus()\n    },[devicesData]);\n    return (\n        <React.Fragment>\n            <ul>\n\n            </ul>\n        </React.Fragment>\n    )\n}\n\n\nexport default ExtensionsList;\n"]},"metadata":{},"sourceType":"module"}