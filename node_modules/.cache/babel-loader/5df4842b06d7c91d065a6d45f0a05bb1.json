{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/recovey-password-form/index.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { getCookie } from \"../../helper/functions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst RecoveryPassword = () => {\n  const successMessage = useSelector(state => state.successMessage);\n  const dispatch = useDispatch();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        realm = _useState2[0],\n        setRealm = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  };\n\n  const handleSubmit = event => {\n    let error = document.getElementById(\"recovery-error-message\");\n    error.textContent = \"\";\n    event.preventDefault();\n\n    if (email === undefined || email === \"\") {\n      error.textContent = \"please enter email address\";\n    } else if (realm === undefined || realm === \"\") error.textContent = \"please enter realm\";else {\n      // changeLoginButton(\"Sign in\")\n      axios.put(\"http://77.104.116.187:8000/v2/user_auth/recovery\", {\n        data: {\n          \"account_realm\": realm,\n          \"username\": email,\n          \"ui_url\": \"http://77.104.116.187\"\n        }\n      }, {\n        headers: {\n          \"X-Auth-Token\": getCookie(\"monster_token\")\n        }\n      }).then(response => {\n        console.log(\"yes\");\n      }).catch(error => {\n        console.log(error);\n        error.textContent = \"متاسفانه خطایی رخ داده است\";\n      });\n    }\n  };\n\n  const handleChangeRealm = event => {\n    setRealm(event.target.value);\n  };\n\n  const handleChangeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-9 col-md-7 col-lg-5 mx-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card card-change my-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-title text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Recover Your Password\"), React.createElement(\"form\", {\n    className: \"form-change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-label-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control\",\n    size: \"col-sm-10\",\n    type: \"text\",\n    id: \"inputAccountName\",\n    placeholder: \"Realm\",\n    onChange: handleChangeRealm,\n    value: realm,\n    onKeyDown: handleKeyDown,\n    required: true,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"inputAccountName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Realm\")), React.createElement(\"div\", {\n    className: \"form-label-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"inputEmail\",\n    size: \"col-sm-10\",\n    type: \"text\",\n    placeholder: \"Email\",\n    onChange: handleChangeEmail,\n    value: email,\n    onKeyDown: handleKeyDown,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"inputEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Email\")), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-lg btn-primary btn-block text-uppercase\",\n    id: \"changePass\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"recover\"))), React.createElement(\"p\", {\n    id: \"recovery-error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })))));\n};\n\nexport default RecoveryPassword;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/recovey-password-form/index.js"],"names":["React","useState","axios","getCookie","useDispatch","useSelector","FontAwesomeIcon","faArrowCircleLeft","RecoveryPassword","successMessage","state","dispatch","realm","setRealm","email","setEmail","handleKeyDown","event","key","handleSubmit","error","document","getElementById","textContent","preventDefault","undefined","put","data","headers","then","response","console","log","catch","handleChangeRealm","target","value","handleChangeEmail"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport {getCookie} from \"../../helper/functions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowCircleLeft} from \"@fortawesome/free-solid-svg-icons\";\n\nconst RecoveryPassword = () => {\n    const successMessage = useSelector(state => state.successMessage);\n    const dispatch = useDispatch();\n    const [realm, setRealm] = useState('');\n    const [email, setEmail] = useState('');\n\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            handleSubmit(event);\n        }\n\n    };\n    const handleSubmit = (event) => {\n        let error = document.getElementById(\"recovery-error-message\");\n        error.textContent = \"\";\n        event.preventDefault();\n        if (email === undefined || email === \"\") {\n            error.textContent = \"please enter email address\";\n        } else if (realm === undefined || realm === \"\")\n            error.textContent = \"please enter realm\";\n        else {\n            // changeLoginButton(\"Sign in\")\n            axios.put(\"http://77.104.116.187:8000/v2/user_auth/recovery\",\n                {\n                    data: {\n                        \"account_realm\": realm,\n                        \"username\": email,\n                        \"ui_url\": \"http://77.104.116.187\"\n                    }\n                }, {\n                    headers: {\n                        \"X-Auth-Token\": getCookie(\"monster_token\")\n                    }\n                }\n            )\n                .then(response => {\n                    console.log(\"yes\");\n                })\n                .catch(error => {\n                    console.log(error);\n                    error.textContent = \"متاسفانه خطایی رخ داده است\";\n\n                });\n        }\n    };\n\n\n    const handleChangeRealm = (event) => {\n        setRealm(event.target.value)\n\n    };\n    const handleChangeEmail = (event) => {\n        setEmail(event.target.value)\n\n    };\n\n    return (\n        <React.Fragment>\n      \n            <div className=\"row\">\n                <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n                    <div className=\"card card-change my-5\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title text-center\">Recover Your Password</h5>\n\n                            <form className=\"form-change\">\n                                <div className=\"form-label-group\">\n                                    <input\n                                        className=\"form-control\"\n                                        size=\"col-sm-10\"\n                                        type=\"text\"\n                                        id=\"inputAccountName\"\n                                        placeholder=\"Realm\"\n                                        onChange={handleChangeRealm}\n                                        value={realm}\n                                        onKeyDown={handleKeyDown}\n                                        required autoFocus\n                                    />\n                                    <label htmlFor=\"inputAccountName\">Realm</label>\n                                </div>\n\n                                <div className=\"form-label-group\">\n                                    <input\n                                        className=\"form-control\"\n                                        id=\"inputEmail\"\n                                        size=\"col-sm-10\"\n                                        type=\"text\"\n                                        placeholder=\"Email\"\n                                        onChange={handleChangeEmail}\n                                        value={email}\n                                        onKeyDown={handleKeyDown}\n                                        required\n                                    />\n\n                                    <label htmlFor=\"inputEmail\">Email</label>\n                                </div>\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\n                                    id=\"changePass\"\n                                    onClick={handleSubmit}\n                                >recover\n                                </button>\n\n                            </form>\n                        </div>\n                        <p id=\"recovery-error-message\"></p>\n\n                    </div>\n\n                </div>\n            </div>\n        </React.Fragment>\n    );\n\n}\n\n\nexport default RecoveryPassword;\n"]},"metadata":{},"sourceType":"module"}