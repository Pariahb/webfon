{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/login/index.js\";\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst KazooLogin = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        userName = _useState2[0],\n        setUserName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState('connect'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loginButton = _useState6[0],\n        changeLoginButton = _useState6[1];\n\n  const showCallPage = useSelector(state => state.showCallPage);\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        accId = _useState8[0],\n        getAccId = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        authToken = _useState10[0],\n        setAuthToken = _useState10[1];\n\n  const dispatch = useDispatch();\n\n  const onKazooConnect = () => {\n    axios.put('http://docker.nexfon.ir:8000/v2/user_auth', {\n      data: {\n        \"account_name\": userName.split(\"/\", 1)[0],\n        \"credentials\": \"d2abaa37a7c3db1137d385e1d8c15fd2\"\n      }\n    }).then(response => {\n      console.log(response.data);\n      setShowCallApp(true);\n      let account_id = response.data.data.account_id;\n      let auth_token = response.data.auth_token;\n      getAccId(account_id);\n      setAuthToken(auth_token);\n      getDevicesList();\n      console.log(\"accId\", accId);\n      console.log(\"auth_token\", auth_token);\n      document.cookie = \"monster_token=\" + auth_token;\n    }).catch(error => {\n      console.log(error);\n      setShowCallApp(false);\n    });\n  };\n\n  const getDevicesList = () => {\n    axios.put(\"http://docker.nexfon.ir:8000/v2/accounts/\" + accId + \"/devices/\", {\n      data: {\n        \"X-Auth-Token\": authToken\n      }\n    }).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  /*---------------------------------*/\n  //Show Or hide Main page.\n\n\n  const setShowCallApp = showPage => {\n    console.log(\"showPage\", showPage);\n    dispatch({\n      showPage,\n      type: 'SHOW_CALL_PAGE'\n    });\n  };\n  /*---------------------------------*/\n  //action for login form\n\n\n  const handleChangeJID = event => {\n    setUserName(event.target.value);\n  };\n\n  const handleChangePass = event => {\n    // console.log(\"passValue\", event.target.value)\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (userName === undefined || userName === \"\") {\n      alert(\"Blank userName\");\n    } else if (password === undefined || password === \"\") alert(\"Empty pass, please type password\");else {\n      if (loginButton === \"connect\") {\n        changeLoginButton(\"disconnect\");\n        onKazooConnect();\n      } else {\n        changeLoginButton(\"connect\");\n      }\n    }\n  };\n  /*-----------------------------------*/\n\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    label: \"JID\",\n    className: \"col-sm-2 col-form-label\",\n    size: \"col-sm-10\",\n    type: \"text\",\n    placeholder: \"enter your JID...\",\n    onChange: handleChangeJID,\n    value: userName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    label: \"Password\",\n    className: \"col-sm-2 col-form-label\",\n    size: \"col-sm-10\",\n    type: \"password\",\n    placeholder: \"enter your password...\",\n    onChange: handleChangePass,\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    id: \"connect\",\n    value: loginButton,\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, loginButton)))));\n};\n\nexport default KazooLogin;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/login/index.js"],"names":["React","useState","axios","useDispatch","useSelector","KazooLogin","userName","setUserName","password","setPassword","loginButton","changeLoginButton","showCallPage","state","accId","getAccId","authToken","setAuthToken","dispatch","onKazooConnect","put","data","split","then","response","console","log","setShowCallApp","account_id","auth_token","getDevicesList","document","cookie","catch","error","showPage","type","handleChangeJID","event","target","value","handleChangePass","handleSubmit","preventDefault","undefined","alert"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport axios from 'axios';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nconst KazooLogin = () => {\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n    const [loginButton, changeLoginButton] = useState('connect');\n    const showCallPage = useSelector(state => state.showCallPage);\n    const [accId, getAccId] = useState('')\n    const [authToken, setAuthToken] = useState('')\n    const dispatch = useDispatch();\n    const onKazooConnect = () => {\n\n        axios.put('http://docker.nexfon.ir:8000/v2/user_auth', {\n            data: {\n                \"account_name\": userName.split(\"/\", 1)[0],\n                \"credentials\": \"d2abaa37a7c3db1137d385e1d8c15fd2\"\n            }\n        })\n            .then(response => {\n                console.log(response.data);\n                setShowCallApp(true);\n                let account_id = response.data.data.account_id;\n                let auth_token = response.data.auth_token;\n                getAccId(account_id);\n                setAuthToken(auth_token);\n                getDevicesList();\n                console.log(\"accId\", accId);\n                console.log(\"auth_token\", auth_token);\n                document.cookie = \"monster_token=\" + auth_token;\n\n            })\n            .catch(error => {\n                console.log(error);\n                setShowCallApp(false);\n            });\n    };\n    const getDevicesList = () => {\n\n        axios.put(\"http://docker.nexfon.ir:8000/v2/accounts/\" + accId + \"/devices/\", {\n            data: {\n                \"X-Auth-Token\": authToken\n            }\n        })\n            .then(response => {\n                console.log(response.data);\n            })\n            .catch(error => {\n                console.log(error);\n\n            });\n    }\n    /*---------------------------------*/\n    //Show Or hide Main page.\n    const setShowCallApp = (showPage) => {\n        console.log(\"showPage\", showPage)\n\n        dispatch({showPage, type: 'SHOW_CALL_PAGE'})\n    };\n    /*---------------------------------*/\n    //action for login form\n    const handleChangeJID = (event) => {\n        setUserName(event.target.value)\n    };\n    const handleChangePass = (event) => {\n        // console.log(\"passValue\", event.target.value)\n        setPassword(event.target.value)\n    };\n    const handleSubmit = (event) => {\n\n        event.preventDefault();\n        if (userName === undefined || userName === \"\") {\n            alert(\"Blank userName\");\n        } else if (password === undefined || password === \"\")\n            alert(\"Empty pass, please type password\");\n        else {\n\n            if (loginButton === \"connect\") {\n                changeLoginButton(\"disconnect\")\n                onKazooConnect();\n            } else {\n                changeLoginButton(\"connect\")\n\n            }\n        }\n    };\n    /*-----------------------------------*/\n\n    return (\n        <React.Fragment>\n\n            <div className=\"row\">\n                <div className=\"col\">\n                    <form>\n                        <input\n                            label=\"JID\"\n                            className=\"col-sm-2 col-form-label\"\n                            size=\"col-sm-10\"\n                            type=\"text\"\n                            placeholder=\"enter your JID...\"\n                            onChange={handleChangeJID}\n                            value={userName}\n                        />\n                        <input\n                            label=\"Password\"\n                            className=\"col-sm-2 col-form-label\"\n                            size=\"col-sm-10\"\n                            type=\"password\"\n                            placeholder=\"enter your password...\"\n                            onChange={handleChangePass}\n                            value={password}\n                        />\n\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            id=\"connect\"\n                            value={loginButton}\n                            onClick={handleSubmit}\n                        >{loginButton}</button>\n                    </form>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\n\nexport default KazooLogin;\n\n\n"]},"metadata":{},"sourceType":"module"}