{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { myTime } from \"../../helper/functions\";\nimport { convert } from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const jalali = require('moment-jalaali');\n\n  const _useState = useState({\n    list: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        allDates = _useState2[0],\n        getAllDates = _useState2[1];\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const renderLogs = () => {\n    return cdrsData !== undefined ? console.log(\"cdrsData\", cdrsData) : null // cdrsData !== undefined ?\n    //     Object.values(cdrsData.forEach((obj, index) => {\n    //         if (obj !== undefined)\n    //             console.log(\"obj[index]\", obj)\n    //         // console.log(\"obj[index]\",typeof(obj))\n    //         return (obj !== undefined ? obj.map((item, i) => {\n    //                 console.log('tttt', item)\n    //                 return (<React.Fragment>\n    //                         <p>{item.id}</p>\n    //                         <div className=\"call-info\" key={i}>\n    //\n    //                             <div className=\"left-side\">\n    //\n    //                             <span className=\"direction\">\n    //                     {\n    //                         item.direction === \"inbound\" ?\n    //                             <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/> :\n    //                             item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n    //                                 <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n    //                                 item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n    //                                     <FontAwesomeIcon color=\"red\" icon={faBan}/> : null\n    //                     }\n    //                 </span>\n    //                                 <div className=\"name\">\n    //                                     {\n    //                                         item.direction === \"inbound\" ?\n    //                                             item.callee_id_name + \"(\" + item.callee_id_number + \")\" :\n    //                                             item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n    //                                                 item.caller_id_name + \"(\" + item.caller_id_number + \")\" :\n    //                                                 item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n    //                                                     item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null\n    //                                     }\n    //\n    //                                     <div className=\"duration\">\n    //\n    //                                         {\n    //                                             item.direction === \"inbound\" ?\n    //                                                 <span>Incoming call, </span>\n    //                                                 :\n    //                                                 item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n    //                                                     <span>Outgoing call, </span>\n    //                                                     :\n    //                                                     item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n    //                                                         <span>Missed call, </span>\n    //                                                         : null\n    //\n    //                                         }\n    //                                         {myTime(item.duration_seconds)}\n    //                                     </div>\n    //                                 </div>\n    //                             </div>\n    //                             <div className=\"date\">\n    //\n    //                                 {\n    //                                     jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n    //                                 }\n    //\n    //                             </div>\n    //\n    //\n    //                         </div>\n    //                     </React.Fragment>\n    //                 )\n    //             }) : null\n    //         )\n    //         // console.log(\"item\", obj)\n    //\n    //     })\n    //     : null\n    ;\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, renderLogs());\n};\n\nexport default GroupedLog;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js"],"names":["React","useEffect","useState","useSelector","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","myTime","convert","GroupedLog","cdrsData","state","jalali","require","list","allDates","getAllDates","moment","orgMoment","renderLogs","undefined","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,WAAR,EAAqBC,YAArB,EAAmCC,KAAnC,QAA+C,mCAA/C;AACA,SAAQC,MAAR,QAAqB,wBAArB;AACA,SAAQC,OAAR,QAAsB,wBAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;;AACA,QAAME,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AAFqB,oBAGWZ,QAAQ,CAAC;AAACa,IAAAA,IAAI,EAAE;AAAP,GAAD,CAHnB;AAAA;AAAA,QAGdC,QAHc;AAAA,QAGJC,WAHI;;AAIrB,QAAMC,MAAM,GAAGJ,OAAO,CAAC,cAAD,CAAtB;;AACA,QAAMK,SAAS,GAAGL,OAAO,CAAC,QAAD,CAAzB;;AAEA,QAAMM,UAAU,GAAG,MAAM;AACrB,WACIT,QAAQ,KAAKU,SAAb,GAAyBC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBZ,QAAxB,CAAzB,GAA6D,IADjE,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEJ;AAyEH,GA1ED;;AA6EA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQS,UAAU,EAFlB,CADJ;AASH,CA7FD;;AAgGA,eAAeV,UAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\nimport {myTime} from \"../../helper/functions\";\nimport {convert} from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const jalali = require('moment-jalaali');\n    const [allDates, getAllDates] = useState({list: []});\n    const moment = require('persian-date');\n    const orgMoment = require('moment');\n\n    const renderLogs = () => {\n        return (\n            cdrsData !== undefined ? console.log(\"cdrsData\", cdrsData) : null\n\n            // cdrsData !== undefined ?\n            //     Object.values(cdrsData.forEach((obj, index) => {\n            //         if (obj !== undefined)\n            //             console.log(\"obj[index]\", obj)\n            //         // console.log(\"obj[index]\",typeof(obj))\n            //         return (obj !== undefined ? obj.map((item, i) => {\n            //                 console.log('tttt', item)\n            //                 return (<React.Fragment>\n            //                         <p>{item.id}</p>\n            //                         <div className=\"call-info\" key={i}>\n            //\n            //                             <div className=\"left-side\">\n            //\n            //                             <span className=\"direction\">\n            //                     {\n            //                         item.direction === \"inbound\" ?\n            //                             <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/> :\n            //                             item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n            //                                 <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n            //                                 item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n            //                                     <FontAwesomeIcon color=\"red\" icon={faBan}/> : null\n            //                     }\n            //                 </span>\n            //                                 <div className=\"name\">\n            //                                     {\n            //                                         item.direction === \"inbound\" ?\n            //                                             item.callee_id_name + \"(\" + item.callee_id_number + \")\" :\n            //                                             item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n            //                                                 item.caller_id_name + \"(\" + item.caller_id_number + \")\" :\n            //                                                 item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n            //                                                     item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null\n            //                                     }\n            //\n            //                                     <div className=\"duration\">\n            //\n            //                                         {\n            //                                             item.direction === \"inbound\" ?\n            //                                                 <span>Incoming call, </span>\n            //                                                 :\n            //                                                 item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n            //                                                     <span>Outgoing call, </span>\n            //                                                     :\n            //                                                     item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n            //                                                         <span>Missed call, </span>\n            //                                                         : null\n            //\n            //                                         }\n            //                                         {myTime(item.duration_seconds)}\n            //                                     </div>\n            //                                 </div>\n            //                             </div>\n            //                             <div className=\"date\">\n            //\n            //                                 {\n            //                                     jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n            //                                 }\n            //\n            //                             </div>\n            //\n            //\n            //                         </div>\n            //                     </React.Fragment>\n            //                 )\n            //             }) : null\n            //         )\n            //         // console.log(\"item\", obj)\n            //\n            //     })\n            //     : null\n        )\n    };\n\n\n    return (\n        <React.Fragment>\n            {\n                renderLogs()\n            }\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default GroupedLog;\n"]},"metadata":{},"sourceType":"module"}