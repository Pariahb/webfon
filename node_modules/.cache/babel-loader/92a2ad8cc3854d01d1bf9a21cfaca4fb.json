{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst CallLogs = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const moment = require('moment');\n\n  const convertTimeStampToTime = timestamp => {\n    moment().format(); // Months array\n\n    let months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // Convert timestamp to milliseconds\n\n    let date = new Date(timestamp * 1000); // Year\n\n    let year = date.getFullYear(); // Month\n\n    let month = months_arr[date.getMonth()]; // Day\n\n    let day = date.getDate(); // Hours\n\n    let hours = date.getHours(); // Minutes\n\n    let minutes = \"0\" + date.getMinutes(); // Seconds\n\n    let seconds = \"0\" + date.getSeconds(); // Display date time in MM-dd-yyyy h:m:s format\n\n    let convdataTime = month + '-' + day + '-' + year + ' ' + hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n    return convdataTime;\n  };\n\n  return React.createElement(\"table\", {\n    className: \"table table-sm table-striped table-bordered table-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Date/Time\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"From\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"To\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Duration\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, cdrsData === undefined ? null : cdrsData.map((item, i) => {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, convertTimeStampToTime(item.unix_timestamp)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, item.from), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, item.to), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, item.duration_seconds));\n  })));\n};\n\nexport default CallLogs;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js"],"names":["React","useSelector","CallLogs","cdrsData","state","moment","require","convertTimeStampToTime","timestamp","format","months_arr","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","convdataTime","substr","undefined","map","item","i","unix_timestamp","from","to","duration_seconds"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;;AACA,QAAME,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,QAAMC,sBAAsB,GAAIC,SAAD,IAAe;AAC1CH,IAAAA,MAAM,GAAGI,MAAT,GAD0C,CAE1C;;AACA,QAAIC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAjB,CAH0C,CAK1C;;AACA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASJ,SAAS,GAAG,IAArB,CAAX,CAN0C,CAQ1C;;AACA,QAAIK,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAX,CAT0C,CAW1C;;AACA,QAAIC,KAAK,GAAGL,UAAU,CAACC,IAAI,CAACK,QAAL,EAAD,CAAtB,CAZ0C,CAc1C;;AACA,QAAIC,GAAG,GAAGN,IAAI,CAACO,OAAL,EAAV,CAf0C,CAiB1C;;AACA,QAAIC,KAAK,GAAGR,IAAI,CAACS,QAAL,EAAZ,CAlB0C,CAoB1C;;AACA,QAAIC,OAAO,GAAG,MAAMV,IAAI,CAACW,UAAL,EAApB,CArB0C,CAuB1C;;AACA,QAAIC,OAAO,GAAG,MAAMZ,IAAI,CAACa,UAAL,EAApB,CAxB0C,CA0B1C;;AACA,QAAIC,YAAY,GAAGV,KAAK,GAAG,GAAR,GAAcE,GAAd,GAAoB,GAApB,GAA0BJ,IAA1B,GAAiC,GAAjC,GAAuCM,KAAvC,GAA+C,GAA/C,GAAqDE,OAAO,CAACK,MAAR,CAAe,CAAC,CAAhB,CAArD,GAA0E,GAA1E,GAAgFH,OAAO,CAACG,MAAR,CAAe,CAAC,CAAhB,CAAnG;AAEA,WAAOD,YAAP;AACH,GA9BD;;AA+BA,SAEI;AAAO,IAAA,SAAS,EAAC,yDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADA,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEItB,QAAQ,KAAKwB,SAAb,GAAyB,IAAzB,GAAgCxB,QAAQ,CAACyB,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AAEtD,WACI;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKvB,sBAAsB,CAACsB,IAAI,CAACE,cAAN,CAD3B,CAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACG,IADV,CANJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,IAAI,CAACI,EADV,CATJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,IAAI,CAACK,gBADV,CAZJ,CADJ;AAmBH,GArB+B,CAFpC,CATJ,CAFJ;AAwCH,CA3ED;;AA8EA,eAAehC,QAAf","sourcesContent":["import React from \"react\";\nimport {useSelector} from \"react-redux\";\n\n\nconst CallLogs = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const moment = require('moment');\n\n    const convertTimeStampToTime = (timestamp) => {\n        moment().format()\n        // Months array\n        let months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n        // Convert timestamp to milliseconds\n        let date = new Date(timestamp * 1000);\n\n        // Year\n        let year = date.getFullYear();\n\n        // Month\n        let month = months_arr[date.getMonth()];\n\n        // Day\n        let day = date.getDate();\n\n        // Hours\n        let hours = date.getHours();\n\n        // Minutes\n        let minutes = \"0\" + date.getMinutes();\n\n        // Seconds\n        let seconds = \"0\" + date.getSeconds();\n\n        // Display date time in MM-dd-yyyy h:m:s format\n        let convdataTime = month + '-' + day + '-' + year + ' ' + hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\n        return convdataTime;\n    };\n    return (\n\n        <table className=\"table table-sm table-striped table-bordered table-hover\">\n            <thead>\n            <tr>\n                <th>Date/Time</th>\n                <th>From</th>\n                <th>To</th>\n                <th>Duration</th>\n            </tr>\n            </thead>\n            <tbody>{\n\n                cdrsData === undefined ? null : cdrsData.map((item, i) => {\n\n                    return (\n                        <tr key={i}>\n\n                            <td>\n                                {convertTimeStampToTime(item.unix_timestamp)}\n\n                            </td>\n                            <td>\n                                {item.from}\n                            </td>\n                            <td>\n                                {item.to}\n                            </td>\n                            <td>\n                                {item.duration_seconds}\n                            </td>\n                        </tr>\n                    )\n\n                })\n            }\n            </tbody>\n        </table>\n    )\n\n};\n\n\nexport default CallLogs;\n"]},"metadata":{},"sourceType":"module"}