{"ast":null,"code":"import _defineProperty from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { getCookie } from \"../../helper/functions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport IncomingCall from \"../inconming-call\";\nimport DialledCalls from \"../dialed-call\";\nimport MissedCall from \"../missed-calls\";\n\nconst CallLogs = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n  const callType = useSelector(state => state.callType);\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const jalali = require('moment-jalaali');\n\n  const _useState = useState({\n    item: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        cdrData = _useState2[0],\n        getCdrData = _useState2[1];\n\n  const _useState3 = useState({\n    item: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todayCdr = _useState4[0],\n        getTodayCdr = _useState4[1];\n\n  const _useState5 = useState({\n    item: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        inbounds = _useState6[0],\n        filterInbounds = _useState6[1]; // const [callType, setCallType] = useState('');\n\n\n  let today = orgMoment();\n\n  const todayCalls = () => {\n    axios.get(\"http://77.104.116.187:8000/v2/accounts/\" + getCookie(\"accID\") + \"/users/\" + getCookie(\"owID\") + \"/cdrs/interaction?created_from=\" + (today.startOf('day').unix() + 62167219200) + \"&created_to=\" + (today.endOf('day').unix() + 62167219200), {\n      headers: {\n        \"X-Auth-Token\": getCookie(\"monster_token\")\n      }\n    }).then(response => {\n      let cdrs = cdrData.item;\n      cdrs.push(response.data);\n      getTodayCdr(_objectSpread({}, todayCdr, {\n        item: cdrs\n      }));\n      setCdrsDataToReducer(todayCdr.item[0].data);\n      console.log(\"response.cdrs\", todayCdr.item[0].data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const dispatch = useDispatch();\n\n  const setCallType = callType => {\n    dispatch({\n      callType,\n      type: \"SET_CALL_TYPE\"\n    });\n    console.log(\"type\", callType);\n  };\n\n  const inboundCalls = () => {\n    setCallType(\"inbound\");\n  };\n\n  const outboundCalls = () => {\n    setCallType(\"outbound\");\n  };\n\n  const missedCallsCalls = () => {\n    setCallType(\"missed\");\n  };\n  /*------set CDRs per user data to reducer-----------------*/\n\n\n  const setCdrsDataToReducer = todayCdrs => {\n    dispatch({\n      todayCdrs,\n      type: 'GET_TODAY_CDRS_DATA'\n    });\n  };\n  /*------set CDRs per user data to reducer-----------------*/\n\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filter-by-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    onClick: todayCalls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Today\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"This Week\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"This Month\")), React.createElement(\"div\", {\n    className: \"filter-by-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    onClick: inboundCalls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Incoming Calls\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    onClick: missedCallsCalls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Missed Calls\"), React.createElement(\"button\", {\n    className: \"btn-sm badge-light\",\n    onClick: outboundCalls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Dialed Calls\")), React.createElement(\"table\", {\n    className: \"table table-sm table-striped table-bordered table-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    color: \"green\",\n    icon: faArrowLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(FontAwesomeIcon, {\n    color: \"orange\",\n    icon: faArrowRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Date/Time\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"From\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"To\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Duration\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, callType === \"inbound\" ? React.createElement(IncomingCall, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }) : callType === \"outbound\" ? React.createElement(DialledCalls, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }) : callType === \"missed\" ? React.createElement(MissedCall, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }) : cdrsData === undefined ? null : cdrsData.map((item, i) => {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, item.direction === \"inbound\" ? React.createElement(FontAwesomeIcon, {\n      color: \"green\",\n      icon: faArrowLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }) : item.direction === \"outbound\" ? React.createElement(FontAwesomeIcon, {\n      color: \"orange\",\n      icon: faArrowRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }) : React.createElement(FontAwesomeIcon, {\n      color: \"red\",\n      icon: faArrowRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, item.caller_id_name + \"(\" + item.caller_id_number + \")\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, item.callee_id_name + \"(\" + item.callee_id_number + \")\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, item.duration_seconds));\n  }))));\n};\n\nexport default CallLogs;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","axios","getCookie","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","IncomingCall","DialledCalls","MissedCall","CallLogs","cdrsData","state","callType","moment","require","orgMoment","jalali","item","cdrData","getCdrData","todayCdr","getTodayCdr","inbounds","filterInbounds","today","todayCalls","get","startOf","unix","endOf","headers","then","response","cdrs","push","data","setCdrsDataToReducer","console","log","catch","error","dispatch","setCallType","type","inboundCalls","outboundCalls","missedCallsCalls","todayCdrs","undefined","map","i","direction","unix_timestamp","format","caller_id_name","caller_id_number","callee_id_name","callee_id_number","duration_seconds"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport axios from \"axios\";\nimport {getCookie} from \"../../helper/functions\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\nimport IncomingCall from \"../inconming-call\";\nimport DialledCalls from \"../dialed-call\";\nimport MissedCall from \"../missed-calls\";\n\nconst CallLogs = () => {\n        const cdrsData = useSelector(state => state.cdrsData);\n        const callType = useSelector(state => state.callType);\n        const moment = require('persian-date');\n        const orgMoment = require('moment');\n        const jalali = require('moment-jalaali');\n        const [cdrData, getCdrData] = useState({item: []});\n        const [todayCdr, getTodayCdr] = useState({item: []});\n        const [inbounds, filterInbounds] = useState({item: []});\n        // const [callType, setCallType] = useState('');\n        let today = orgMoment();\n        const todayCalls = () => {\n            axios.get(\"http://77.104.116.187:8000/v2/accounts/\" + getCookie(\"accID\")\n                + \"/users/\" + getCookie(\"owID\")\n                + \"/cdrs/interaction?created_from=\"\n                + (today.startOf('day').unix() + 62167219200)\n                + \"&created_to=\"\n                + (today.endOf('day').unix() + 62167219200)\n                , {\n                    headers: {\n                        \"X-Auth-Token\": getCookie(\"monster_token\")\n                    }\n                })\n                .then(response => {\n                    let cdrs = cdrData.item;\n                    cdrs.push(response.data)\n                    getTodayCdr({...todayCdr, item: cdrs});\n                    setCdrsDataToReducer(todayCdr.item[0].data);\n                    console.log(\"response.cdrs\", todayCdr.item[0].data);\n                })\n                .catch(error => {\n                    console.log(error)\n                });\n        };\n        const dispatch = useDispatch();\n\n\n        const setCallType = (callType) => {\n            dispatch({callType, type: \"SET_CALL_TYPE\"});\n            console.log(\"type\", callType)\n\n        };\n        const inboundCalls = () => {\n            setCallType(\"inbound\");\n        };\n\n        const outboundCalls = () => {\n            setCallType(\"outbound\");\n        };\n        const missedCallsCalls = () => {\n            setCallType(\"missed\");\n        };\n\n        /*------set CDRs per user data to reducer-----------------*/\n        const setCdrsDataToReducer = (todayCdrs) => {\n            dispatch({todayCdrs, type: 'GET_TODAY_CDRS_DATA'})\n        };\n        /*------set CDRs per user data to reducer-----------------*/\n        return (\n            <React.Fragment>\n                <div className=\"filter-by-time\">\n                    <button className=\"btn-sm badge-light\" onClick={todayCalls}>Today</button>\n                    <button className=\"btn-sm badge-light\">This Week</button>\n                    <button className=\"btn-sm badge-light\">This Month</button>\n                </div>\n                <div className=\"filter-by-type\">\n                    <button className=\"btn-sm badge-light\" onClick={inboundCalls}>Incoming Calls</button>\n                    <button className=\"btn-sm badge-light\" onClick={missedCallsCalls}>Missed Calls</button>\n                    <button className=\"btn-sm badge-light\" onClick={outboundCalls}>Dialed Calls</button>\n                </div>\n                <table className=\"table table-sm table-striped table-bordered table-hover\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">\n                            <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/><br/>\n                            <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/>\n                        </th>\n                        <th scope=\"col\">Date/Time</th>\n                        <th scope=\"col\">From</th>\n                        <th scope=\"col\">To</th>\n\n                        <th scope=\"col\">Duration</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        callType === \"inbound\" ? <IncomingCall/> : callType === \"outbound\" ?\n                            <DialledCalls/> : callType === \"missed\" ?\n                                <MissedCall/> : cdrsData === undefined ? null : cdrsData.map((item, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <td>\n                                                {\n                                                    item.direction === \"inbound\" ?\n                                                        <FontAwesomeIcon color=\"green\"\n                                                                         icon={faArrowLeft}/> : item.direction === \"outbound\" ?\n                                                        <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n                                                        <FontAwesomeIcon color=\"red\" icon={faArrowRight}/>\n\n                                                }\n                                            </td>\n                                            <td>\n\n                                                {\n                                                    jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n                                                }\n\n                                            </td>\n                                            <td>\n                                                {item.caller_id_name + \"(\" + item.caller_id_number + \")\"}\n                                            </td>\n                                            <td>\n                                                {item.callee_id_name + \"(\" + item.callee_id_number + \")\"}\n                                            </td>\n                                            <td>\n                                                {item.duration_seconds}\n                                            </td>\n                                        </tr>\n                                    )\n\n                                })\n                    }\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n\n    }\n;\n\n\nexport default CallLogs;\n"]},"metadata":{},"sourceType":"module"}