{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/Device/index.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faSpinner, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Device = props => {\n  const devicesData = useSelector(state => state.devicesData);\n  const loading = useSelector(state => state.loadingStatus);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadingStatus = _useState2[0],\n        setLoadingStatus = _useState2[1];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setLoadingStatus(false);\n    dispatch({\n      loadingStatus,\n      type: \"SET_LOADING_STATUS\"\n    });\n  }, [devicesData]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, loading ? React.createElement(FontAwesomeIcon, {\n    className: \"fas fa-spinner fa-spin\",\n    icon: faSpinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }) : React.createElement(\"table\", {\n    className: \"table table-sm table-striped table-bordered table-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Device Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Enabled\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, devicesData === undefined ? null : devicesData.map((item, i) => {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, item.enabled ? React.createElement(FontAwesomeIcon, {\n      color: \"green\",\n      icon: faCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }) : React.createElement(FontAwesomeIcon, {\n      color: \"red\",\n      icon: faTimes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }))));\n};\n\nexport default Device;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/Device/index.js"],"names":["FontAwesomeIcon","faCheck","faSpinner","faTimes","React","useEffect","useState","useDispatch","useSelector","Device","props","devicesData","state","loading","loadingStatus","setLoadingStatus","dispatch","type","undefined","map","item","i","name","enabled"],"mappings":";;AAAA,SAAQA,eAAR,QAA8B,gCAA9B;AACA,SAAQC,OAAR,EAAiBC,SAAjB,EAA4BC,OAA5B,QAA0C,mCAA1C;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,WAAW,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B;AACA,QAAME,OAAO,GAAGL,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACE,aAAhB,CAA3B;;AAFsB,oBAGoBR,QAAQ,CAAC,IAAD,CAH5B;AAAA;AAAA,QAGfQ,aAHe;AAAA,QAGAC,gBAHA;;AAKtB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAC,IAAAA,QAAQ,CAAC;AAACF,MAAAA,aAAD;AAAgBG,MAAAA,IAAI,EAAE;AAAtB,KAAD,CAAR;AACH,GAHQ,EAGN,CAACN,WAAD,CAHM,CAAT;AAIA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,OAAO,GAAG,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,wBAA3B;AAAoD,IAAA,IAAI,EAAEX,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAEH;AAAO,IAAA,SAAS,EAAC,yDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADA,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIS,WAAW,KAAKO,SAAhB,GAA4B,IAA5B,GAAmCP,WAAW,CAACQ,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAE5D,WACI;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,CAACE,IADV,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKF,IAAI,CAACG,OAAL,GAAe,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAA+B,MAAA,IAAI,EAAEtB,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,GACG,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,KAAvB;AAA6B,MAAA,IAAI,EAAEE,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,CALJ,CADJ;AAeH,GAjBkC,CADvC,CAPJ,CAJZ,CADJ;AAmCH,CA7CD;;AA8CA,eAAeM,MAAf","sourcesContent":["import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck, faSpinner, faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Device = (props) => {\n    const devicesData = useSelector(state => state.devicesData);\n    const loading = useSelector(state => state.loadingStatus);\n    const [loadingStatus, setLoadingStatus] = useState(true);\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        setLoadingStatus(false);\n        dispatch({loadingStatus, type: \"SET_LOADING_STATUS\"});\n    }, [devicesData]);\n    return (\n        <React.Fragment>\n            {\n                loading ? <FontAwesomeIcon className=\"fas fa-spinner fa-spin\" icon={faSpinner}/> :\n\n                    <table className=\"table table-sm table-striped table-bordered table-hover\">\n                        <thead>\n                        <tr>\n                            <th>Device Name</th>\n                            <th>Enabled</th>\n                        </tr>\n                        </thead>\n                        <tbody>{\n                            devicesData === undefined ? null : devicesData.map((item, i) => {\n\n                                return (\n                                    <tr key={i}>\n\n                                        <td>\n                                            {item.name}\n                                        </td>\n                                        <td>\n\n                                            {item.enabled ? <FontAwesomeIcon color=\"green\" icon={faCheck}/> :\n                                                <FontAwesomeIcon color=\"red\" icon={faTimes}/>}\n\n                                        </td>\n                                    </tr>\n                                )\n\n                            })\n                        }</tbody>\n                    </table>\n            }\n        </React.Fragment>)\n};\nexport default Device;"]},"metadata":{},"sourceType":"module"}