{"ast":null,"code":"import _defineProperty from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport LogItem from \"../log-item\";\nimport HistoryDetailLogs from \"../history-detail-logs\";\n\nconst GroupedLog = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n  const selectedLogContact = useSelector(state => state.selectedLogContact);\n\n  const _renderLogs = group => {\n    return Object.keys(group).map((key, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, key), group[key].map((item, i) => console.log(\"group[key]\", group[key]) // <LogItem item={item} key={i}/>\n    )));\n  };\n\n  const clearDuplicates = group => {\n    console.log(\"objjjjj\", Object.values(group));\n    return Object.values(group).map((key, index) => {\n      const result = [...key.reduce((mp, o) => {\n        const key = JSON.stringify([o.direction, o.from]);\n        if (!mp.has(key)) mp.set(key, _objectSpread({}, o, {\n          count: 0\n        }));\n        mp.get(key).count++;\n        return mp;\n      }, new Map()).values()];\n      React.createElement(LogItem, {\n        item: item,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n      console.log(result);\n      console.log(\"result0\", key);\n    });\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, _renderLogs(cdrsData), clearDuplicates(cdrsData));\n};\n\nexport default GroupedLog;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js"],"names":["React","useEffect","useState","useSelector","LogItem","HistoryDetailLogs","GroupedLog","cdrsData","state","selectedLogContact","_renderLogs","group","Object","keys","map","key","index","item","i","console","log","clearDuplicates","values","result","reduce","mp","o","JSON","stringify","direction","from","has","set","count","get","Map"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,kBAAkB,GAAGN,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,kBAAhB,CAAtC;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,WAAOC,MAAM,CACRC,IADE,CACGF,KADH,EAEFG,GAFE,CAEE,CAACC,GAAD,EAAMC,KAAN,KACD;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,GAAJ,CADJ,EAEKJ,KAAK,CAACI,GAAD,CAAL,CAAWD,GAAX,CAAe,CAACG,IAAD,EAAOC,CAAP,KACZC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBT,KAAK,CAACI,GAAD,CAA9B,CADY,CAEZ;AAFH,KAFL,CAHD,CAAP;AAaH,GAdD;;AAeA,QAAMM,eAAe,GAAIV,KAAD,IAAW;AAC/BQ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,MAAM,CAACU,MAAP,CAAcX,KAAd,CAAvB;AACA,WAAOC,MAAM,CACRU,MADE,CACKX,KADL,EAEFG,GAFE,CAEE,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACb,YAAMO,MAAM,GAAG,CAAC,GAAGR,GAAG,CAACS,MAAJ,CAAW,CAACC,EAAD,EAAKC,CAAL,KAAW;AACrC,cAAMX,GAAG,GAAGY,IAAI,CAACC,SAAL,CAAe,CAACF,CAAC,CAACG,SAAH,EAAcH,CAAC,CAACI,IAAhB,CAAf,CAAZ;AACA,YAAI,CAACL,EAAE,CAACM,GAAH,CAAOhB,GAAP,CAAL,EAAkBU,EAAE,CAACO,GAAH,CAAOjB,GAAP,oBAAgBW,CAAhB;AAAmBO,UAAAA,KAAK,EAAE;AAA1B;AAClBR,QAAAA,EAAE,CAACS,GAAH,CAAOnB,GAAP,EAAYkB,KAAZ;AACA,eAAOR,EAAP;AACH,OALkB,EAKhB,IAAIU,GAAJ,EALgB,EAKPb,MALO,EAAJ,CAAf;AAMJ,0BAAC,OAAD;AAAS,QAAA,IAAI,EAAEL,IAAf;AAAqB,QAAA,GAAG,EAAEC,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,MAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBL,GAAtB;AACH,KAbF,CAAP;AAeH,GAjBD;;AAmBA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQL,WAAW,CAACH,QAAD,CAFnB,EAKQc,eAAe,CAACd,QAAD,CALvB,CADJ;AAWH,CAjDD;;AAoDA,eAAeD,UAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport LogItem from \"../log-item\";\nimport HistoryDetailLogs from \"../history-detail-logs\";\n\nconst GroupedLog = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const selectedLogContact = useSelector(state => state.selectedLogContact);\n\n    const _renderLogs = (group) => {\n        return Object\n            .keys(group)\n            .map((key, index) => (\n                <div key={index}>\n                    <p>{key}</p>\n                    {group[key].map((item, i) => (\n                        console.log(\"group[key]\",group[key])\n                        // <LogItem item={item} key={i}/>\n\n                    ))}\n\n                </div>\n            ));\n    };\n    const clearDuplicates = (group) => {\n        console.log(\"objjjjj\", Object.values(group))\n        return Object\n            .values(group)\n            .map((key, index) => {\n                    const result = [...key.reduce((mp, o) => {\n                        const key = JSON.stringify([o.direction, o.from]);\n                        if (!mp.has(key)) mp.set(key, {...o, count: 0});\n                        mp.get(key).count++;\n                        return mp;\n                    }, new Map).values()];\n                <LogItem item={item} key={i}/>\n\n                    console.log(result);\n                    console.log(\"result0\",key);\n                }\n            )\n    };\n\n    return (\n        <React.Fragment>\n            {\n                _renderLogs(cdrsData)\n            }\n            {\n                clearDuplicates(cdrsData)\n            }\n        </React.Fragment>\n    );\n\n};\n\n\nexport default GroupedLog;\n"]},"metadata":{},"sourceType":"module"}