{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DailyLog from \"../daily-log\";\n\nconst GroupedLog = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const getKeyByValue = (object, value) => {\n    return Object.keys(object).find(key => object[key] === value);\n    console.log(\"sss\", object + value);\n  };\n\n  const renderLogs = () => {\n    return (// console.log(\"cdrsDatacdrsData\",cdrsData)\n      Object.values(cdrsData).forEach((obj, index) => {\n        if (obj !== undefined) console.log(\"obj[index]\", obj);\n        return obj !== undefined ? obj.map((item, i) => {\n          console.log(\"iteeeeeeeeeeeeeeem\", item);\n          return React.createElement(DailyLog, {\n            key: i,\n            item: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          });\n        }) : null;\n      })\n    );\n  };\n\n  useEffect(() => {\n    renderLogs();\n  }, [cdrsData]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, renderLogs());\n};\n\nexport default GroupedLog;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js"],"names":["React","useEffect","useState","useSelector","DailyLog","GroupedLog","cdrsData","state","getKeyByValue","object","value","Object","keys","find","key","console","log","renderLogs","values","forEach","obj","index","undefined","map","item","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,OAAOC,QAAP,MAAqB,cAArB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;;AAEA,QAAME,aAAa,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrC,WAAOC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,IAApB,CAAyBC,GAAG,IAC/BL,MAAM,CAACK,GAAD,CAAN,KAAgBJ,KADb,CAAP;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,MAAM,GAAGC,KAA5B;AACH,GAJD;;AAKA,QAAMO,UAAU,GAAG,MAAM;AACrB,WACI;AAEAN,MAAAA,MAAM,CAACO,MAAP,CAAcZ,QAAd,EAAwBa,OAAxB,CAAgC,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5C,YAAID,GAAG,KAAKE,SAAZ,EACIP,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BI,GAA1B;AACJ,eACIA,GAAG,KAAKE,SAAR,GAAoBF,GAAG,CAACG,GAAJ,CAAQ,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrCV,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCQ,IAAlC;AACA,iBACI,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAEC,CAAf;AAAkB,YAAA,IAAI,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,SALmB,CAApB,GAKK,IANT;AAQH,OAXD;AAHJ;AAgBH,GAjBD;;AAmBAvB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,UAAU;AACb,GAFQ,EAEN,CAACX,QAAD,CAFM,CAAT;AAGA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQW,UAAU,EAFlB,CADJ;AASH,CAvCD;;AA0CA,eAAeZ,UAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nimport DailyLog from \"../daily-log\";\n\nconst GroupedLog = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n\n    const getKeyByValue = (object, value) => {\n        return Object.keys(object).find(key =>\n            object[key] === value);\n        console.log(\"sss\", object + value)\n    };\n    const renderLogs = () => {\n        return (\n            // console.log(\"cdrsDatacdrsData\",cdrsData)\n\n            Object.values(cdrsData).forEach((obj, index) => {\n                if (obj !== undefined)\n                    console.log(\"obj[index]\", obj)\n                return (\n                    obj !== undefined ? obj.map((item, i) => {\n                        console.log(\"iteeeeeeeeeeeeeeem\", item)\n                        return (\n                            <DailyLog key={i} item={item}/>\n                        )\n                    }) : null\n                )\n            })\n        )\n    };\n\n    useEffect(() => {\n        renderLogs()\n    }, [cdrsData])\n    return (\n        <React.Fragment>\n            {\n                renderLogs()\n            }\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default GroupedLog;\n"]},"metadata":{},"sourceType":"module"}