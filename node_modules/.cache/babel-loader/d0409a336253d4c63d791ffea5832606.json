{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTruckLoading } from \"@fortawesome/free-solid-svg-icons\";\n\nconst CallLogs = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n  const loading = useSelector(state => state.loadingStatus);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadingStatus = _useState2[0],\n        setLoadingStatus = _useState2[1];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setLoadingStatus(false);\n    dispatch({\n      loadingStatus,\n      type: \"SET_LOADING_STATUS\"\n    });\n  }, [cdrsData]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, loading ? React.createElement(FontAwesomeIcon, {\n    icon: faSpinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }) : React.createElement(\"table\", {\n    className: \"table table-sm table-striped table-bordered table-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Date/Time\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"From\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"To\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Duration\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, cdrsData === undefined ? null : cdrsData.map((item, i) => {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, item.unix_timestamp), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, item.from), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, item.to), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, item.duration_seconds));\n  }))));\n};\n\nexport default CallLogs;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/call-log/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","FontAwesomeIcon","faTruckLoading","CallLogs","cdrsData","state","loading","loadingStatus","setLoadingStatus","dispatch","type","faSpinner","undefined","map","item","i","unix_timestamp","from","to","duration_seconds"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,cAAR,QAA6B,mCAA7B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,OAAO,GAAGN,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACE,aAAhB,CAA3B;;AAFmB,oBAGuBT,QAAQ,CAAC,IAAD,CAH/B;AAAA;AAAA,QAGZS,aAHY;AAAA,QAGGC,gBAHH;;AAKnB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAC,IAAAA,QAAQ,CAAC;AAACF,MAAAA,aAAD;AAAgBG,MAAAA,IAAI,EAAE;AAAtB,KAAD,CAAR;AACH,GAHQ,EAGN,CAACN,QAAD,CAHM,CAAT;AAIA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,OAAO,GAAG,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEK,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACJ;AAAO,IAAA,SAAS,EAAC,yDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADA,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIP,QAAQ,KAAKQ,SAAb,GAAyB,IAAzB,GAAgCR,QAAQ,CAACS,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AAEtD,WACI;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,CAACE,cADV,CAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACG,IADV,CANJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,IAAI,CAACI,EADV,CATJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,IAAI,CAACK,gBADV,CAZJ,CADJ;AAmBH,GArB+B,CAFpC,CATJ,CAFR,CADJ;AA2CH,CArDD;;AAwDA,eAAehB,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTruckLoading} from \"@fortawesome/free-solid-svg-icons\";\n\nconst CallLogs = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const loading = useSelector(state => state.loadingStatus);\n    const [loadingStatus, setLoadingStatus] = useState(true);\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        setLoadingStatus(false);\n        dispatch({loadingStatus, type: \"SET_LOADING_STATUS\"});\n    }, [cdrsData])\n    return (\n        <React.Fragment>\n            {loading ? <FontAwesomeIcon icon={faSpinner}/> :\n                <table className=\"table table-sm table-striped table-bordered table-hover\">\n                    <thead>\n                    <tr>\n                        <th>Date/Time</th>\n                        <th>From</th>\n                        <th>To</th>\n                        <th>Duration</th>\n                    </tr>\n                    </thead>\n                    <tbody>{\n\n                        cdrsData === undefined ? null : cdrsData.map((item, i) => {\n\n                            return (\n                                <tr key={i}>\n\n                                    <td>\n                                        {item.unix_timestamp}\n\n                                    </td>\n                                    <td>\n                                        {item.from}\n                                    </td>\n                                    <td>\n                                        {item.to}\n                                    </td>\n                                    <td>\n                                        {item.duration_seconds}\n                                    </td>\n                                </tr>\n                            )\n\n                        })\n                    }\n                    </tbody>\n                </table>\n            }\n\n        </React.Fragment>)\n\n};\n\n\nexport default CallLogs;\n"]},"metadata":{},"sourceType":"module"}