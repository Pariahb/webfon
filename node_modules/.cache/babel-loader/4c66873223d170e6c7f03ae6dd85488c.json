{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { myTime } from \"../../helper/functions\";\nimport { convert } from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const jalali = require('moment-jalaali');\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allDates = _useState2[0],\n        getAllDates = _useState2[1];\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const checkSameDayObjects = array => {\n    let group = array.reduce((r, a) => {\n      r[moment.unix(a.unix_timestamp).utc().format('YYYY/M/D')] = [...(r[moment.unix(a.unix_timestamp).utc().format('YYYY/M/D')] || []), a];\n      return r;\n    }, {});\n    getAllDates(group);\n    let allDateArray = allDates;\n    allDateArray.push(group);\n    getAllDates(allDateArray);\n  };\n\n  useEffect(() => {\n    checkSameDayObjects(cdrsData);\n    console.log(\"allDates\", allDates); // allDates.item[1].forEach((obj, index) => {\n    //     console.log(\"obj\", obj[index]);\n    //\n    // })\n  }, [cdrsData]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, allDates[1] != null ? // console.log(\"allDates.ssssssssss[1]\", allDates)\n  // allDates.item[1].forEach(function (arrayItem) {\n  //     var x = arrayItem;\n  //     console.log(x);\n  // })\n  console.log(\"Object.keys(allDates[1])\", Object.values(allDates[1])) // Object.keys(allDates[1]).forEach((obj, index) => {\n  //     console.log(\"obj[index]\",obj)\n  //     console.log(\"obj[index]\",typeof(obj))\n  //     return (\n  //         obj !== undefined ? Object.keys(obj).map((item, i) => {\n  //             return (\n  //                 <div className=\"call-info\" key={i}>\n  //\n  //                     <div className=\"left-side\">\n  //\n  //                         <span className=\"direction\">\n  //                 {\n  //                     item.direction === \"inbound\" ?\n  //                         <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/> :\n  //                         item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n  //                             <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n  //                             item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n  //                                 <FontAwesomeIcon color=\"red\" icon={faBan}/> : null\n  //                 }\n  //             </span>\n  //                         <div className=\"name\">\n  //                             {\n  //                                 item.direction === \"inbound\" ?\n  //                                     item.callee_id_name + \"(\" + item.callee_id_number + \")\" :\n  //                                     item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n  //                                         item.caller_id_name + \"(\" + item.caller_id_number + \")\" :\n  //                                         item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n  //                                             item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null\n  //                             }\n  //\n  //                             <div className=\"duration\">\n  //\n  //                                 {\n  //                                     item.direction === \"inbound\" ?\n  //                                         <span>Incoming call, </span>\n  //                                         :\n  //                                         item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n  //                                             <span>Outgoing call, </span>\n  //                                             :\n  //                                             item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n  //                                                 <span>Missed call, </span>\n  //                                                 : null\n  //\n  //                                 }\n  //                                 {myTime(item.duration_seconds)}\n  //                             </div>\n  //                         </div>\n  //                     </div>\n  //                     <div className=\"date\">\n  //\n  //                         {\n  //                             jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n  //                         }\n  //\n  //                     </div>\n  //\n  //\n  //                 </div>\n  //             )\n  //         }) : null\n  //     )\n  //     // console.log(\"item\", obj)\n  //\n  // })\n  : null);\n};\n\nexport default GroupedLog;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js"],"names":["React","useEffect","useState","useSelector","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","myTime","convert","GroupedLog","cdrsData","state","jalali","require","allDates","getAllDates","moment","orgMoment","checkSameDayObjects","array","group","reduce","r","a","unix","unix_timestamp","utc","format","allDateArray","push","console","log","Object","values"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,WAAR,EAAqBC,YAArB,EAAmCC,KAAnC,QAA+C,mCAA/C;AACA,SAAQC,MAAR,QAAqB,wBAArB;AACA,SAAQC,OAAR,QAAsB,wBAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;;AACA,QAAME,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AAFqB,oBAGWZ,QAAQ,CAAC,EAAD,CAHnB;AAAA;AAAA,QAGda,QAHc;AAAA,QAGJC,WAHI;;AAIrB,QAAMC,MAAM,GAAGH,OAAO,CAAC,cAAD,CAAtB;;AACA,QAAMI,SAAS,GAAGJ,OAAO,CAAC,QAAD,CAAzB;;AAEA,QAAMK,mBAAmB,GAAIC,KAAD,IAAW;AAEnC,QAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC/BD,MAAAA,CAAC,CAACN,MAAM,CAACQ,IAAP,CAAYD,CAAC,CAACE,cAAd,EAA8BC,GAA9B,GAAoCC,MAApC,CAA2C,UAA3C,CAAD,CAAD,GAA4D,CAAC,IAAGL,CAAC,CAACN,MAAM,CAACQ,IAAP,CAAYD,CAAC,CAACE,cAAd,EAA8BC,GAA9B,GAAoCC,MAApC,CAA2C,UAA3C,CAAD,CAAD,IAA6D,EAAhE,CAAD,EAAqEJ,CAArE,CAA5D;AACA,aAAOD,CAAP;AACH,KAHW,EAGT,EAHS,CAAZ;AAIAP,IAAAA,WAAW,CAACK,KAAD,CAAX;AACA,QAAIQ,YAAY,GAAGd,QAAnB;AACAc,IAAAA,YAAY,CAACC,IAAb,CAAkBT,KAAlB;AACAL,IAAAA,WAAW,CAACa,YAAD,CAAX;AACH,GAVD;;AAWA5B,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,mBAAmB,CAACR,QAAD,CAAnB;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBjB,QAAxB,EAFY,CAGZ;AACA;AACA;AACA;AACH,GAPQ,EAON,CAACJ,QAAD,CAPM,CAAT;AASA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,QAAQ,CAAC,CAAD,CAAR,IAAe,IAAf,GAEG;AAGA;AACA;AACA;AACA;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCC,MAAM,CAACC,MAAP,CAAcnB,QAAQ,CAAC,CAAD,CAAtB,CAAxC,CATH,CAUG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEH,IA0EK,IA3EV,CADJ;AAmFH,CA9GD;;AAiHA,eAAeL,UAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\nimport {myTime} from \"../../helper/functions\";\nimport {convert} from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const jalali = require('moment-jalaali');\n    const [allDates, getAllDates] = useState([]);\n    const moment = require('persian-date');\n    const orgMoment = require('moment');\n\n    const checkSameDayObjects = (array) => {\n\n        let group = array.reduce((r, a) => {\n            r[moment.unix(a.unix_timestamp).utc().format('YYYY/M/D')] = [...r[moment.unix(a.unix_timestamp).utc().format('YYYY/M/D')] || [], a];\n            return r;\n        }, {});\n        getAllDates(group);\n        let allDateArray = allDates;\n        allDateArray.push(group);\n        getAllDates(allDateArray);\n    };\n    useEffect(() => {\n        checkSameDayObjects(cdrsData);\n        console.log(\"allDates\", allDates);\n        // allDates.item[1].forEach((obj, index) => {\n        //     console.log(\"obj\", obj[index]);\n        //\n        // })\n    }, [cdrsData]);\n\n    return (\n        <React.Fragment>\n            {allDates[1] != null ?\n\n                // console.log(\"allDates.ssssssssss[1]\", allDates)\n\n\n                // allDates.item[1].forEach(function (arrayItem) {\n                //     var x = arrayItem;\n                //     console.log(x);\n                // })\n                console.log(\"Object.keys(allDates[1])\", Object.values(allDates[1]))\n                // Object.keys(allDates[1]).forEach((obj, index) => {\n                //     console.log(\"obj[index]\",obj)\n                //     console.log(\"obj[index]\",typeof(obj))\n                //     return (\n                //         obj !== undefined ? Object.keys(obj).map((item, i) => {\n                //             return (\n                //                 <div className=\"call-info\" key={i}>\n                //\n                //                     <div className=\"left-side\">\n                //\n                //                         <span className=\"direction\">\n                //                 {\n                //                     item.direction === \"inbound\" ?\n                //                         <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/> :\n                //                         item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n                //                             <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n                //                             item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n                //                                 <FontAwesomeIcon color=\"red\" icon={faBan}/> : null\n                //                 }\n                //             </span>\n                //                         <div className=\"name\">\n                //                             {\n                //                                 item.direction === \"inbound\" ?\n                //                                     item.callee_id_name + \"(\" + item.callee_id_number + \")\" :\n                //                                     item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n                //                                         item.caller_id_name + \"(\" + item.caller_id_number + \")\" :\n                //                                         item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n                //                                             item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null\n                //                             }\n                //\n                //                             <div className=\"duration\">\n                //\n                //                                 {\n                //                                     item.direction === \"inbound\" ?\n                //                                         <span>Incoming call, </span>\n                //                                         :\n                //                                         item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n                //                                             <span>Outgoing call, </span>\n                //                                             :\n                //                                             item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n                //                                                 <span>Missed call, </span>\n                //                                                 : null\n                //\n                //                                 }\n                //                                 {myTime(item.duration_seconds)}\n                //                             </div>\n                //                         </div>\n                //                     </div>\n                //                     <div className=\"date\">\n                //\n                //                         {\n                //                             jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n                //                         }\n                //\n                //                     </div>\n                //\n                //\n                //                 </div>\n                //             )\n                //         }) : null\n                //     )\n                //     // console.log(\"item\", obj)\n                //\n                // })\n                : null\n\n            }\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default GroupedLog;\n"]},"metadata":{},"sourceType":"module"}