{"ast":null,"code":"import _slicedToArray from \"/home/paria/sandbox/projects/webfon-V2/webfonv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { myTime } from \"../../helper/functions\";\nimport { convert } from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n  const cdrsData = useSelector(state => state.cdrsData);\n\n  const jalali = require('moment-jalaali');\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allDates = _useState2[0],\n        getAllDates = _useState2[1];\n\n  const moment = require('persian-date');\n\n  const orgMoment = require('moment');\n\n  const checkSameDayObjects = array => {\n    let group = array.reduce((r, a) => {\n      r[moment.unix(a.unix_timestamp).utc().format('YYYY/M/D')] = [...(r[moment.unix(a.unix_timestamp).utc().format('YYYY/M/D')] || []), a];\n      return r;\n    }, {});\n    getAllDates(group);\n    let allDateArray = allDates;\n    allDateArray.push(group);\n    getAllDates(allDateArray);\n  };\n\n  useEffect(() => {\n    checkSameDayObjects(cdrsData);\n    console.log(\"allDates\", allDates); // allDates.item[1].forEach((obj, index) => {\n    //     console.log(\"obj\", obj[index]);\n    //\n    // })\n\n    console.log(\"Object.keys(allDates[1])\", Object.values(allDates[1]));\n  }, [cdrsData]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, allDates[1] != null ? // console.log(\"allDates.ssssssssss[1]\", allDates)\n  Object.values(allDates[1]).forEach((obj, index) => {\n    console.log(\"obj[index]\", obj[index]); // console.log(\"obj[index]\",typeof(obj))\n\n    return obj !== undefined ? obj.map((item, i) => {\n      return React.createElement(\"div\", {\n        className: \"call-info\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"direction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, item.direction === \"inbound\" ? React.createElement(FontAwesomeIcon, {\n        color: \"green\",\n        icon: faArrowLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }) : item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ? React.createElement(FontAwesomeIcon, {\n        color: \"orange\",\n        icon: faArrowRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }) : item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ? React.createElement(FontAwesomeIcon, {\n        color: \"red\",\n        icon: faBan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }) : null), React.createElement(\"div\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, item.direction === \"inbound\" ? item.callee_id_name + \"(\" + item.callee_id_number + \")\" : item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ? item.caller_id_name + \"(\" + item.caller_id_number + \")\" : item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ? item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null, React.createElement(\"div\", {\n        className: \"duration\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, item.direction === \"inbound\" ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Incoming call, \") : item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Outgoing call, \") : item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Missed call, \") : null, myTime(item.duration_seconds)))), React.createElement(\"div\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')));\n    }) : null; // console.log(\"item\", obj)\n  }) : null);\n};\n\nexport default GroupedLog;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/grouped-log/index.js"],"names":["React","useEffect","useState","useSelector","FontAwesomeIcon","faArrowLeft","faArrowRight","faBan","myTime","convert","GroupedLog","cdrsData","state","jalali","require","allDates","getAllDates","moment","orgMoment","checkSameDayObjects","array","group","reduce","r","a","unix","unix_timestamp","utc","format","allDateArray","push","console","log","Object","values","forEach","obj","index","undefined","map","item","i","direction","hangup_cause","callee_id_name","callee_id_number","caller_id_name","caller_id_number","duration_seconds"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight, faBan} from \"@fortawesome/free-solid-svg-icons\";\nimport {myTime} from \"../../helper/functions\";\nimport {convert} from \"../../helper/functions\";\n\nconst GroupedLog = () => {\n    const cdrsData = useSelector(state => state.cdrsData);\n    const jalali = require('moment-jalaali');\n    const [allDates, getAllDates] = useState([]);\n    const moment = require('persian-date');\n    const orgMoment = require('moment');\n\n    const checkSameDayObjects = (array) => {\n\n        let group = array.reduce((r, a) => {\n            r[moment.unix(a.unix_timestamp).utc().format('YYYY/M/D')] = [...r[moment.unix(a.unix_timestamp).utc().format('YYYY/M/D')] || [], a];\n            return r;\n        }, {});\n        getAllDates(group);\n        let allDateArray = allDates;\n        allDateArray.push(group);\n        getAllDates(allDateArray);\n    };\n    useEffect(() => {\n        checkSameDayObjects(cdrsData);\n        console.log(\"allDates\", allDates);\n        // allDates.item[1].forEach((obj, index) => {\n        //     console.log(\"obj\", obj[index]);\n        //\n        // })\n        console.log(\"Object.keys(allDates[1])\", Object.values(allDates[1]))\n\n    }, [cdrsData]);\n\n    return (\n        <React.Fragment>\n            {allDates[1] != null ?\n\n                // console.log(\"allDates.ssssssssss[1]\", allDates)\n\n                Object.values(allDates[1]).forEach((obj, index) => {\n                    console.log(\"obj[index]\",obj[index])\n                    // console.log(\"obj[index]\",typeof(obj))\n                    return (\n                        obj !== undefined ? obj.map((item, i) => {\n                            return (\n                                <div className=\"call-info\" key={i}>\n\n                                    <div className=\"left-side\">\n\n                                        <span className=\"direction\">\n                                {\n                                    item.direction === \"inbound\" ?\n                                        <FontAwesomeIcon color=\"green\" icon={faArrowLeft}/> :\n                                        item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n                                            <FontAwesomeIcon color=\"orange\" icon={faArrowRight}/> :\n                                            item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n                                                <FontAwesomeIcon color=\"red\" icon={faBan}/> : null\n                                }\n                            </span>\n                                        <div className=\"name\">\n                                            {\n                                                item.direction === \"inbound\" ?\n                                                    item.callee_id_name + \"(\" + item.callee_id_number + \")\" :\n                                                    item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n                                                        item.caller_id_name + \"(\" + item.caller_id_number + \")\" :\n                                                        item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n                                                            item.caller_id_name + \"(\" + item.caller_id_number + \")\" : null\n                                            }\n\n                                            <div className=\"duration\">\n\n                                                {\n                                                    item.direction === \"inbound\" ?\n                                                        <span>Incoming call, </span>\n                                                        :\n                                                        item.direction === \"outbound\" && i.hangup_cause !== \"NO_ANSWER\" ?\n                                                            <span>Outgoing call, </span>\n                                                            :\n                                                            item.direction === \"outbound\" && i.hangup_cause === \"NO_ANSWER\" ?\n                                                                <span>Missed call, </span>\n                                                                : null\n\n                                                }\n                                                {myTime(item.duration_seconds)}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"date\">\n\n                                        {\n                                            jalali.unix(item.unix_timestamp).format('jYYYY/jM/jD, HH:mm:ss')\n                                        }\n\n                                    </div>\n\n\n                                </div>\n                            )\n                        }) : null\n                    )\n                    // console.log(\"item\", obj)\n\n                })\n                : null\n\n            }\n\n        </React.Fragment>\n    );\n\n};\n\n\nexport default GroupedLog;\n"]},"metadata":{},"sourceType":"module"}