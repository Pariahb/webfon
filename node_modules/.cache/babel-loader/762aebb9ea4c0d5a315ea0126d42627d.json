{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/make-call/index.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPhone, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./style.css\";\n\nconst MakeCall = () => {\n  let JsSIP = require('jssip');\n\n  const socket = new JsSIP.WebSocketInterface('wss://77.104.116.187:7000/');\n  let configuration = {\n    'uri': '704@admin',\n    // FILL SIP URI HERE like sip:sip-user@your-domain.bwapp.bwsip.io\n    'password': '704704',\n    // FILL PASSWORD HERE,\n    'sockets': [socket]\n  };\n  const ua = new JsSIP.UA(configuration);\n  const incomingCallAudio = new window.Audio('http://code.bandwidth.com/media/incoming_alert.mp3');\n  incomingCallAudio.loop = true;\n  const remoteAudio = new window.Audio();\n  remoteAudio.autoplay = true;\n  const callOptions = {\n    mediaConstraints: {\n      audio: true,\n      video: false\n    }\n  };\n  console.log('ua', ua); // JsSIP.debug.enable('JsSIP:*'); // more detailed debug output\n\n  ua.start();\n  console.log(ua._status);\n  ua.on('connected', function (e) {\n    alert(\"connected\");\n  }); // Register callbacks to desired call events\n\n  const eventHandlers = {\n    'progress': function (e) {\n      console.log('call is in progress');\n    },\n    'failed': function (e) {\n      console.log('call failed with cause: ' + e.data.cause);\n    },\n    'ended': function (e) {\n      console.log('call ended with cause: ' + e.data.cause);\n    },\n    'confirmed': function (e) {\n      console.log('call confirmed');\n    }\n  };\n  let options = {\n    'eventHandlers': eventHandlers,\n    'mediaConstraints': {\n      'audio': true,\n      'video': true\n    }\n  };\n  let session = ua.call('sip:712@admin', options);\n  console.log(\"session\", session);\n\n  const onSipConnect = status => {\n    console.log(\"window.socket\", socket);\n\n    if (status === ua._status.disconnect) {\n      console.log(\"Strophe is disconnected.\");\n    } else if (status === ua._status.connected) {\n      console.log(\"Strophe is connected.\");\n      ua.call('712@admin', options);\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"callControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"to\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"toField\",\n    type: \"text\",\n    placeholder: \"Enter number here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: onSipConnect,\n    id: \"connectCall\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"fap fa-phone\",\n    icon: faPhone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))));\n};\n\nexport default MakeCall;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/make-call/index.js"],"names":["React","FontAwesomeIcon","faPhone","faSpinner","MakeCall","JsSIP","require","socket","WebSocketInterface","configuration","ua","UA","incomingCallAudio","window","Audio","loop","remoteAudio","autoplay","callOptions","mediaConstraints","audio","video","console","log","start","_status","on","e","alert","eventHandlers","data","cause","options","session","call","onSipConnect","status","disconnect","connected"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPhone, faSpinner} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./style.css\"\n\nconst MakeCall = () => {\n    let JsSIP = require('jssip');\n\n    const socket = new JsSIP.WebSocketInterface('wss://77.104.116.187:7000/');\n    let configuration = {\n        'uri': '704@admin', // FILL SIP URI HERE like sip:sip-user@your-domain.bwapp.bwsip.io\n        'password': '704704', // FILL PASSWORD HERE,\n        'sockets': [socket]\n    };\n    const ua = new JsSIP.UA(configuration);\n\n    const incomingCallAudio = new window.Audio('http://code.bandwidth.com/media/incoming_alert.mp3');\n    incomingCallAudio.loop = true;\n    const remoteAudio = new window.Audio();\n    remoteAudio.autoplay = true;\n\n    const callOptions = {\n        mediaConstraints: {audio: true, video: false}\n    };\n\n\n    console.log('ua', ua);\n    // JsSIP.debug.enable('JsSIP:*'); // more detailed debug output\n    ua.start();\n    console.log(ua._status)\n    ua.on('connected', function (e) {\n        alert(\"connected\")\n    });\n// Register callbacks to desired call events\n    const eventHandlers = {\n        'progress': function (e) {\n            console.log('call is in progress');\n        },\n        'failed': function (e) {\n            console.log('call failed with cause: ' + e.data.cause);\n        },\n        'ended': function (e) {\n            console.log('call ended with cause: ' + e.data.cause);\n        },\n        'confirmed': function (e) {\n            console.log('call confirmed');\n        }\n    };\n\n    let options = {\n        'eventHandlers': eventHandlers,\n        'mediaConstraints': {'audio': true, 'video': true}\n    };\n\n    let session = ua.call('sip:712@admin', options);\n    console.log(\"session\", session);\n\n    const onSipConnect = (status) => {\n        console.log(\"window.socket\", socket);\n        if (status === ua._status.disconnect) {\n            console.log(\"Strophe is disconnected.\");\n        } else if (status === ua._status.connected) {\n            console.log(\"Strophe is connected.\");\n            ua.call('712@admin', options);\n\n        }\n    };\n    return (\n\n        <React.Fragment>\n            <div id=\"callControl\">\n                <div id=\"to\">\n                    <input id=\"toField\" type=\"text\" placeholder=\"Enter number here\"/>\n                </div>\n                <button onClick={onSipConnect} id=\"connectCall\">\n                    <FontAwesomeIcon className=\"fap fa-phone\"\n                                     icon={faPhone}/>\n\n                </button>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default MakeCall;\n"]},"metadata":{},"sourceType":"module"}