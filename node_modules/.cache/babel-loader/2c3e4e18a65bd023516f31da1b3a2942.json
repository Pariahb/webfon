{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/make-call/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst MakeCall = () => {\n  const showPage = useSelector(state => state.showCallPage);\n\n  const makeUserAgen = () => {\n    // Create our JsSIP instance and run it:\n    let socket = new window.JsSIP.WebSocketInterface('wss://77.116.174.187:7000');\n    let configuration = {\n      sockets: [socket],\n      uri: '704@admin',\n      password: '704704'\n    };\n    let ua = new window.JsSIP.UA(configuration);\n    ua.start(); // Register callbacks to desired call events\n\n    let eventHandlers = {\n      'progress': function (e) {\n        console.log('call is in progress');\n      },\n      'failed': function (e) {\n        console.log('call failed with cause: ' + e.data.cause);\n      },\n      'ended': function (e) {\n        console.log('call ended with cause: ' + e.data.cause);\n      },\n      'confirmed': function (e) {\n        console.log('call confirmed');\n      }\n    };\n    let options = {\n      'eventHandlers': eventHandlers,\n      'mediaConstraints': {\n        'audio': true,\n        'video': true\n      }\n    };\n    let session = ua.call('704@admin', options);\n  };\n\n  useEffect(() => {\n    MakeCall();\n  }, [showPage]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  });\n};\n\nexport default MakeCall;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/call/make-call/index.js"],"names":["React","useEffect","useState","useSelector","MakeCall","showPage","state","showCallPage","makeUserAgen","socket","window","JsSIP","WebSocketInterface","configuration","sockets","uri","password","ua","UA","start","eventHandlers","e","console","log","data","cause","options","session","call"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAA5B;;AACA,QAAMC,YAAY,GAAG,MAAM;AACvB;AAEA,QAAIC,MAAM,GAAG,IAAIC,MAAM,CAACC,KAAP,CAAaC,kBAAjB,CAAoC,2BAApC,CAAb;AACA,QAAIC,aAAa,GAAG;AAChBC,MAAAA,OAAO,EAAE,CAACL,MAAD,CADO;AAEhBM,MAAAA,GAAG,EAAE,WAFW;AAGhBC,MAAAA,QAAQ,EAAE;AAHM,KAApB;AAMA,QAAIC,EAAE,GAAG,IAAIP,MAAM,CAACC,KAAP,CAAaO,EAAjB,CAAoBL,aAApB,CAAT;AAEAI,IAAAA,EAAE,CAACE,KAAH,GAZuB,CAc/B;;AACQ,QAAIC,aAAa,GAAG;AAChB,kBAAY,UAAUC,CAAV,EAAa;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,OAHe;AAIhB,gBAAU,UAAUF,CAAV,EAAa;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BF,CAAC,CAACG,IAAF,CAAOC,KAAhD;AACH,OANe;AAOhB,eAAS,UAAUJ,CAAV,EAAa;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BF,CAAC,CAACG,IAAF,CAAOC,KAA/C;AACH,OATe;AAUhB,mBAAa,UAAUJ,CAAV,EAAa;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AAZe,KAApB;AAeA,QAAIG,OAAO,GAAG;AACV,uBAAiBN,aADP;AAEV,0BAAoB;AAAC,iBAAS,IAAV;AAAgB,iBAAS;AAAzB;AAFV,KAAd;AAKA,QAAIO,OAAO,GAAGV,EAAE,CAACW,IAAH,CAAQ,WAAR,EAAqBF,OAArB,CAAd;AACH,GApCD;;AAqCAzB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACC,QAAD,CAFM,CAAT;AAGA,SAEI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAMH,CAhDD;;AAkDA,eAAeD,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\n\n\nconst MakeCall = () => {\n    const showPage = useSelector(state => state.showCallPage);\n    const makeUserAgen = () => {\n        // Create our JsSIP instance and run it:\n\n        let socket = new window.JsSIP.WebSocketInterface('wss://77.116.174.187:7000');\n        let configuration = {\n            sockets: [socket],\n            uri: '704@admin',\n            password: '704704'\n        };\n\n        let ua = new window.JsSIP.UA(configuration);\n\n        ua.start();\n\n// Register callbacks to desired call events\n        let eventHandlers = {\n            'progress': function (e) {\n                console.log('call is in progress');\n            },\n            'failed': function (e) {\n                console.log('call failed with cause: ' + e.data.cause);\n            },\n            'ended': function (e) {\n                console.log('call ended with cause: ' + e.data.cause);\n            },\n            'confirmed': function (e) {\n                console.log('call confirmed');\n            }\n        };\n\n        let options = {\n            'eventHandlers': eventHandlers,\n            'mediaConstraints': {'audio': true, 'video': true}\n        };\n\n        let session = ua.call('704@admin', options);\n    };\n    useEffect(() => {\n        MakeCall();\n    }, [showPage]);\n    return (\n\n        <React.Fragment>\n\n        </React.Fragment>\n    )\n};\n\nexport default MakeCall;\n"]},"metadata":{},"sourceType":"module"}