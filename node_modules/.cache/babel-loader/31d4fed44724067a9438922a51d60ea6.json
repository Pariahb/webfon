{"ast":null,"code":"var _jsxFileName = \"/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/login-page/index.js\";\nimport React from \"react\";\nimport Input from \"../input\";\nimport Button from \"../button\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      connection: this.props.connection,\n      onConnect: this.props.onConnect,\n      buttonText: \"connect\",\n      jidValue: \"\",\n      passValue: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangePass = this.handleChangePass.bind(this);\n    this.handleChangeJID = this.handleChangeJID.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // only update chart if the data has changed\n    if (prevProps.onConnect !== this.props.onConnect) {\n      this.setState({\n        onConnect: this.props.onConnect\n      });\n    }\n  }\n\n  handleChangeJID(event) {\n    this.setState({\n      jidValue: event.target.value\n    });\n  }\n\n  handleChangePass(event) {\n    this.setState({\n      passValue: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.jidValue === undefined || this.state.jidValue === \"\") alert(\"Blank JID\");else if (this.state.passValue === undefined || this.state.passValue === \"\") alert(\"Empty pass, please type password\");else {\n      if (this.state.buttonText === \"connect\") {\n        this.setState({\n          buttonText: \"disconnect\"\n        });\n        this.state.connection.connect(this.state.jidValue, this.state.passValue, this.state.onConnect);\n      } else {\n        this.state.connection.disconnect();\n        this.setState({\n          buttonText: \"connect\"\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Input, {\n      label: \"JID\",\n      className: \"col-sm-2 col-form-label\",\n      size: \"col-sm-10\",\n      type: \"text\",\n      placeholder: \"enter your JID...\",\n      onChange: this.handleChangeJID,\n      value: this.state.jidValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Input, {\n      label: \"Password\",\n      className: \"col-sm-2 col-form-label\",\n      size: \"col-sm-10\",\n      type: \"password\",\n      placeholder: \"enter your password...\",\n      onChange: this.handleChangePass,\n      value: this.state.passValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      id: \"connect\",\n      value: this.state.buttonText,\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/paria/sandbox/projects/webfon-V2/webfonv2/src/components/login-page/index.js"],"names":["React","Input","Button","LoginPage","Component","constructor","props","state","connection","onConnect","buttonText","jidValue","passValue","handleSubmit","bind","handleChangePass","handleChangeJID","componentDidUpdate","prevProps","prevState","setState","event","target","value","preventDefault","undefined","alert","connect","disconnect","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Input from \"../input\";\nimport Button from \"../button\";\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            connection: this.props.connection,\n            onConnect: this.props.onConnect,\n            buttonText: \"connect\",\n            jidValue: \"\",\n            passValue: \"\"\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChangePass = this.handleChangePass.bind(this);\n        this.handleChangeJID = this.handleChangeJID.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // only update chart if the data has changed\n        if (prevProps.onConnect !== this.props.onConnect) {\n            this.setState({\n                onConnect: this.props.onConnect\n            });\n        }\n    }\n    handleChangeJID(event) {\n        this.setState({\n            jidValue: event.target.value\n        });\n    }\n    handleChangePass(event) {\n        this.setState({\n            passValue: event.target.value\n        });\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.jidValue === undefined || this.state.jidValue === \"\")\n            alert(\"Blank JID\");\n        else if (this.state.passValue === undefined || this.state.passValue === \"\")\n            alert(\"Empty pass, please type password\");\n        else {\n            if (this.state.buttonText === \"connect\") {\n                this.setState({\n                    buttonText: \"disconnect\"\n                });\n\n                this.state.connection.connect(\n                    this.state.jidValue,\n                    this.state.passValue,\n                    this.state.onConnect\n                );\n            } else {\n                this.state.connection.disconnect();\n                this.setState({\n                    buttonText: \"connect\"\n                });\n            }\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <form>\n                            <Input\n                                label=\"JID\"\n                                className=\"col-sm-2 col-form-label\"\n                                size=\"col-sm-10\"\n                                type=\"text\"\n                                placeholder=\"enter your JID...\"\n                                onChange={this.handleChangeJID}\n                                value={this.state.jidValue}\n                            />\n                            <Input\n                                label=\"Password\"\n                                className=\"col-sm-2 col-form-label\"\n                                size=\"col-sm-10\"\n                                type=\"password\"\n                                placeholder=\"enter your password...\"\n                                onChange={this.handleChangePass}\n                                value={this.state.passValue}\n                            />\n\n                            <Button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                id=\"connect\"\n                                value={this.state.buttonText}\n                                onClick={this.handleSubmit}\n                            />\n                        </form>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}